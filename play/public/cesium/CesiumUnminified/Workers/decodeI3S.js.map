{"version":3,"file":"decodeI3S.js","sources":["../../../packages/engine/Source/WorkersES6/decodeI3S.js"],"sourcesContent":["/* global require */\nimport createTaskProcessorWorker from \"./createTaskProcessorWorker.js\";\nimport defined from \"../Core/defined.js\";\nimport WebMercatorProjection from \"../Core/WebMercatorProjection.js\";\nimport Ellipsoid from \"../Core/Ellipsoid.js\";\nimport Cartographic from \"../Core/Cartographic.js\";\nimport Cartesian3 from \"../Core/Cartesian3.js\";\nimport Matrix3 from \"../Core/Matrix3.js\";\nimport CesiumMath from \"../Core/Math.js\";\n\nlet draco;\n\nfunction bilinearInterpolate(tx, ty, h00, h10, h01, h11) {\n  const a = h00 * (1 - tx) + h10 * tx;\n  const b = h01 * (1 - tx) + h11 * tx;\n  return a * (1 - ty) + b * ty;\n}\n\nfunction sampleMap(u, v, width, data) {\n  const address = u + v * width;\n  return data[address];\n}\n\nfunction sampleGeoid(sampleX, sampleY, geoidData) {\n  const extent = geoidData.nativeExtent;\n  let x =\n    ((sampleX - extent.west) / (extent.east - extent.west)) *\n    (geoidData.width - 1);\n  let y =\n    ((sampleY - extent.south) / (extent.north - extent.south)) *\n    (geoidData.height - 1);\n  const xi = Math.floor(x);\n  let yi = Math.floor(y);\n\n  x -= xi;\n  y -= yi;\n\n  const xNext = xi < geoidData.width ? xi + 1 : xi;\n  let yNext = yi < geoidData.height ? yi + 1 : yi;\n\n  yi = geoidData.height - 1 - yi;\n  yNext = geoidData.height - 1 - yNext;\n\n  const h00 = sampleMap(xi, yi, geoidData.width, geoidData.buffer);\n  const h10 = sampleMap(xNext, yi, geoidData.width, geoidData.buffer);\n  const h01 = sampleMap(xi, yNext, geoidData.width, geoidData.buffer);\n  const h11 = sampleMap(xNext, yNext, geoidData.width, geoidData.buffer);\n\n  let finalHeight = bilinearInterpolate(x, y, h00, h10, h01, h11);\n  finalHeight = finalHeight * geoidData.scale + geoidData.offset;\n  return finalHeight;\n}\n\nfunction sampleGeoidFromList(lon, lat, geoidDataList) {\n  for (let i = 0; i < geoidDataList.length; i++) {\n    const localExtent = geoidDataList[i].nativeExtent;\n\n    let localPt = new Cartesian3();\n    if (geoidDataList[i].projectionType === \"WebMercator\") {\n      const radii = geoidDataList[i].projection._ellipsoid._radii;\n      const webMercatorProj = new WebMercatorProjection(\n        new Ellipsoid(radii.x, radii.y, radii.z)\n      );\n      localPt = webMercatorProj.project(new Cartographic(lon, lat, 0));\n    } else {\n      localPt.x = lon;\n      localPt.y = lat;\n    }\n\n    if (\n      localPt.x > localExtent.west &&\n      localPt.x < localExtent.east &&\n      localPt.y > localExtent.south &&\n      localPt.y < localExtent.north\n    ) {\n      return sampleGeoid(localPt.x, localPt.y, geoidDataList[i]);\n    }\n  }\n\n  return 0;\n}\n\nfunction orthometricToEllipsoidal(\n  vertexCount,\n  position,\n  scale_x,\n  scale_y,\n  center,\n  geoidDataList,\n  fast\n) {\n  if (fast) {\n    // Geometry is already relative to the tile origin which has already been shifted to account for geoid height\n    // Nothing to do here\n    return;\n  }\n\n  // For more precision, sample the geoid height at each vertex and shift by the difference between that value and the height at the center of the tile\n  const centerHeight = sampleGeoidFromList(\n    center.longitude,\n    center.latitude,\n    geoidDataList\n  );\n\n  for (let i = 0; i < vertexCount; ++i) {\n    const height = sampleGeoidFromList(\n      center.longitude + CesiumMath.toRadians(scale_x * position[i * 3]),\n      center.latitude + CesiumMath.toRadians(scale_y * position[i * 3 + 1]),\n      geoidDataList\n    );\n    position[i * 3 + 2] += height - centerHeight;\n  }\n}\n\nfunction transformToLocal(\n  vertexCount,\n  positions,\n  normals,\n  cartographicCenter,\n  cartesianCenter,\n  parentRotation,\n  ellipsoidRadiiSquare,\n  scale_x,\n  scale_y\n) {\n  if (vertexCount === 0 || !defined(positions) || positions.length === 0) {\n    return;\n  }\n\n  const ellipsoid = new Ellipsoid(\n    Math.sqrt(ellipsoidRadiiSquare.x),\n    Math.sqrt(ellipsoidRadiiSquare.y),\n    Math.sqrt(ellipsoidRadiiSquare.z)\n  );\n  for (let i = 0; i < vertexCount; ++i) {\n    const indexOffset = i * 3;\n    const indexOffset1 = indexOffset + 1;\n    const indexOffset2 = indexOffset + 2;\n\n    const cartographic = new Cartographic();\n    cartographic.longitude =\n      cartographicCenter.longitude +\n      CesiumMath.toRadians(scale_x * positions[indexOffset]);\n\n    cartographic.latitude =\n      cartographicCenter.latitude +\n      CesiumMath.toRadians(scale_y * positions[indexOffset1]);\n    cartographic.height = cartographicCenter.height + positions[indexOffset2];\n\n    const position = {};\n    ellipsoid.cartographicToCartesian(cartographic, position);\n\n    position.x -= cartesianCenter.x;\n    position.y -= cartesianCenter.y;\n    position.z -= cartesianCenter.z;\n\n    const rotatedPosition = {};\n    Matrix3.multiplyByVector(parentRotation, position, rotatedPosition);\n\n    positions[indexOffset] = rotatedPosition.x;\n    positions[indexOffset1] = rotatedPosition.y;\n    positions[indexOffset2] = rotatedPosition.z;\n\n    if (defined(normals)) {\n      const normal = new Cartesian3(\n        normals[indexOffset],\n        normals[indexOffset1],\n        normals[indexOffset2]\n      );\n\n      const rotatedNormal = {};\n      Matrix3.multiplyByVector(parentRotation, normal, rotatedNormal);\n\n      // TODO: check if normals are Z-UP or Y-UP and flip y and z\n      normals[indexOffset] = rotatedNormal.x;\n      normals[indexOffset1] = rotatedNormal.y;\n      normals[indexOffset2] = rotatedNormal.z;\n    }\n  }\n}\n\nfunction cropUVs(vertexCount, uv0s, uvRegions) {\n  for (let vertexIndex = 0; vertexIndex < vertexCount; ++vertexIndex) {\n    const minU = uvRegions[vertexIndex * 4] / 65535.0;\n    const minV = uvRegions[vertexIndex * 4 + 1] / 65535.0;\n    const scaleU =\n      (uvRegions[vertexIndex * 4 + 2] - uvRegions[vertexIndex * 4]) / 65535.0;\n    const scaleV =\n      (uvRegions[vertexIndex * 4 + 3] - uvRegions[vertexIndex * 4 + 1]) /\n      65535.0;\n\n    uv0s[vertexIndex * 2] *= scaleU;\n    uv0s[vertexIndex * 2] += minU;\n\n    uv0s[vertexIndex * 2 + 1] *= scaleV;\n    uv0s[vertexIndex * 2 + 1] += minV;\n  }\n}\n\nfunction generateGltfBuffer(\n  vertexCount,\n  indices,\n  positions,\n  normals,\n  uv0s,\n  colors\n) {\n  if (vertexCount === 0 || !defined(positions) || positions.length === 0) {\n    return {\n      buffers: [],\n      bufferViews: [],\n      accessors: [],\n      meshes: [],\n      nodes: [],\n      nodesInScene: [],\n    };\n  }\n\n  const buffers = [];\n  const bufferViews = [];\n  const accessors = [];\n  const meshes = [];\n  const nodes = [];\n  const nodesInScene = [];\n\n  // If we provide indices, then the vertex count is the length\n  // of that array, otherwise we assume non-indexed triangle\n  if (defined(indices)) {\n    vertexCount = indices.length;\n  }\n\n  // Allocate array\n  const indexArray = new Uint32Array(vertexCount);\n\n  if (defined(indices)) {\n    // Set the indices\n    for (let vertexIndex = 0; vertexIndex < vertexCount; ++vertexIndex) {\n      indexArray[vertexIndex] = indices[vertexIndex];\n    }\n  } else {\n    // Generate indices\n    for (\n      let newVertexIndex = 0;\n      newVertexIndex < vertexCount;\n      ++newVertexIndex\n    ) {\n      indexArray[newVertexIndex] = newVertexIndex;\n    }\n  }\n\n  // Push to the buffers, bufferViews and accessors\n  const indicesBlob = new Blob([indexArray], { type: \"application/binary\" });\n  const indicesURL = URL.createObjectURL(indicesBlob);\n\n  const endIndex = vertexCount;\n\n  // POSITIONS\n  const meshPositions = positions.subarray(0, endIndex * 3);\n  const positionsBlob = new Blob([meshPositions], {\n    type: \"application/binary\",\n  });\n  const positionsURL = URL.createObjectURL(positionsBlob);\n\n  let minX = Number.POSITIVE_INFINITY;\n  let maxX = Number.NEGATIVE_INFINITY;\n  let minY = Number.POSITIVE_INFINITY;\n  let maxY = Number.NEGATIVE_INFINITY;\n  let minZ = Number.POSITIVE_INFINITY;\n  let maxZ = Number.NEGATIVE_INFINITY;\n\n  for (let i = 0; i < meshPositions.length / 3; i++) {\n    minX = Math.min(minX, meshPositions[i * 3 + 0]);\n    maxX = Math.max(maxX, meshPositions[i * 3 + 0]);\n    minY = Math.min(minY, meshPositions[i * 3 + 1]);\n    maxY = Math.max(maxY, meshPositions[i * 3 + 1]);\n    minZ = Math.min(minZ, meshPositions[i * 3 + 2]);\n    maxZ = Math.max(maxZ, meshPositions[i * 3 + 2]);\n  }\n\n  // NORMALS\n  const meshNormals = normals ? normals.subarray(0, endIndex * 3) : undefined;\n  let normalsURL;\n  if (defined(meshNormals)) {\n    const normalsBlob = new Blob([meshNormals], {\n      type: \"application/binary\",\n    });\n    normalsURL = URL.createObjectURL(normalsBlob);\n  }\n\n  // UV0s\n  const meshUv0s = uv0s ? uv0s.subarray(0, endIndex * 2) : undefined;\n  let uv0URL;\n  if (defined(meshUv0s)) {\n    const uv0Blob = new Blob([meshUv0s], { type: \"application/binary\" });\n    uv0URL = URL.createObjectURL(uv0Blob);\n  }\n\n  // COLORS\n  const meshColorsInBytes = defined(colors)\n    ? colors.subarray(0, endIndex * 4)\n    : undefined;\n  let colorsURL;\n  if (defined(meshColorsInBytes)) {\n    const colorsBlob = new Blob([meshColorsInBytes], {\n      type: \"application/binary\",\n    });\n    colorsURL = URL.createObjectURL(colorsBlob);\n  }\n\n  const posIndex = 0;\n  let normalIndex = 0;\n  let uv0Index = 0;\n  let colorIndex = 0;\n  let indicesIndex = 0;\n\n  let currentIndex = posIndex;\n\n  const attributes = {};\n\n  // POSITIONS\n  attributes.POSITION = posIndex;\n  buffers.push({\n    uri: positionsURL,\n    byteLength: meshPositions.byteLength,\n  });\n  bufferViews.push({\n    buffer: posIndex,\n    byteOffset: 0,\n    byteLength: meshPositions.byteLength,\n    target: 34962,\n  });\n  accessors.push({\n    bufferView: posIndex,\n    byteOffset: 0,\n    componentType: 5126,\n    count: vertexCount,\n    type: \"VEC3\",\n    max: [minX, minY, minZ],\n    min: [maxX, maxY, maxZ],\n  });\n\n  // NORMALS\n  if (defined(normalsURL)) {\n    ++currentIndex;\n    normalIndex = currentIndex;\n    attributes.NORMAL = normalIndex;\n    buffers.push({\n      uri: normalsURL,\n      byteLength: meshNormals.byteLength,\n    });\n    bufferViews.push({\n      buffer: normalIndex,\n      byteOffset: 0,\n      byteLength: meshNormals.byteLength,\n      target: 34962,\n    });\n    accessors.push({\n      bufferView: normalIndex,\n      byteOffset: 0,\n      componentType: 5126,\n      count: vertexCount,\n      type: \"VEC3\",\n    });\n  }\n\n  // UV0\n  if (defined(uv0URL)) {\n    ++currentIndex;\n    uv0Index = currentIndex;\n    attributes.TEXCOORD_0 = uv0Index;\n    buffers.push({\n      uri: uv0URL,\n      byteLength: meshUv0s.byteLength,\n    });\n    bufferViews.push({\n      buffer: uv0Index,\n      byteOffset: 0,\n      byteLength: meshUv0s.byteLength,\n      target: 34962,\n    });\n    accessors.push({\n      bufferView: uv0Index,\n      byteOffset: 0,\n      componentType: 5126,\n      count: vertexCount,\n      type: \"VEC2\",\n    });\n  }\n\n  // COLORS\n  if (defined(colorsURL)) {\n    ++currentIndex;\n    colorIndex = currentIndex;\n    attributes.COLOR_0 = colorIndex;\n    buffers.push({\n      uri: colorsURL,\n      byteLength: meshColorsInBytes.byteLength,\n    });\n    bufferViews.push({\n      buffer: colorIndex,\n      byteOffset: 0,\n      byteLength: meshColorsInBytes.byteLength,\n      target: 34962,\n    });\n    accessors.push({\n      bufferView: colorIndex,\n      byteOffset: 0,\n      componentType: 5121,\n      normalized: true,\n      count: vertexCount,\n      type: \"VEC4\",\n    });\n  }\n\n  // INDICES\n  ++currentIndex;\n  indicesIndex = currentIndex;\n  buffers.push({\n    uri: indicesURL,\n    byteLength: indexArray.byteLength,\n  });\n  bufferViews.push({\n    buffer: indicesIndex,\n    byteOffset: 0,\n    byteLength: indexArray.byteLength,\n    target: 34963,\n  });\n  accessors.push({\n    bufferView: indicesIndex,\n    byteOffset: 0,\n    componentType: 5125,\n    count: vertexCount,\n    type: \"SCALAR\",\n  });\n\n  // Create a new mesh for this page\n  meshes.push({\n    primitives: [\n      {\n        attributes: attributes,\n        indices: indicesIndex,\n        material: 0,\n      },\n    ],\n  });\n  nodesInScene.push(0);\n  nodes.push({ mesh: 0 });\n\n  return {\n    buffers: buffers,\n    bufferViews: bufferViews,\n    accessors: accessors,\n    meshes: meshes,\n    nodes: nodes,\n    nodesInScene: nodesInScene,\n  };\n}\n\nfunction decode(data, schema, bufferInfo, featureData) {\n  const magicNumber = new Uint8Array(data, 0, 5);\n  if (\n    magicNumber[0] === \"D\".charCodeAt() &&\n    magicNumber[1] === \"R\".charCodeAt() &&\n    magicNumber[2] === \"A\".charCodeAt() &&\n    magicNumber[3] === \"C\".charCodeAt() &&\n    magicNumber[4] === \"O\".charCodeAt()\n  ) {\n    return decodeDracoEncodedGeometry(data, bufferInfo);\n  }\n  return decodeBinaryGeometry(data, schema, bufferInfo, featureData);\n}\n\nfunction decodeDracoEncodedGeometry(data) {\n  // Create the Draco decoder.\n  const dracoDecoderModule = draco;\n  const buffer = new dracoDecoderModule.DecoderBuffer();\n\n  const byteArray = new Uint8Array(data);\n  buffer.Init(byteArray, byteArray.length);\n\n  // Create a buffer to hold the encoded data.\n  const dracoDecoder = new dracoDecoderModule.Decoder();\n  const geometryType = dracoDecoder.GetEncodedGeometryType(buffer);\n  const metadataQuerier = new dracoDecoderModule.MetadataQuerier();\n\n  // Decode the encoded geometry.\n  // See: https://github.com/google/draco/blob/master/src/draco/javascript/emscripten/draco_web_decoder.idl\n  let dracoGeometry;\n  let status;\n  if (geometryType === dracoDecoderModule.TRIANGULAR_MESH) {\n    dracoGeometry = new dracoDecoderModule.Mesh();\n    status = dracoDecoder.DecodeBufferToMesh(buffer, dracoGeometry);\n  }\n\n  const decodedGeometry = {\n    vertexCount: [0],\n    featureCount: 0,\n  };\n\n  // if all is OK\n  if (defined(status) && status.ok() && dracoGeometry.ptr !== 0) {\n    const faceCount = dracoGeometry.num_faces();\n    const attributesCount = dracoGeometry.num_attributes();\n    const vertexCount = dracoGeometry.num_points();\n    decodedGeometry.indices = new Uint32Array(faceCount * 3);\n    const faces = decodedGeometry.indices;\n\n    decodedGeometry.vertexCount[0] = vertexCount;\n    decodedGeometry.scale_x = 1;\n    decodedGeometry.scale_y = 1;\n\n    // Decode faces\n    // @TODO: Replace that code with GetTrianglesUInt32Array for better efficiency\n    const face = new dracoDecoderModule.DracoInt32Array(3);\n    for (let faceIndex = 0; faceIndex < faceCount; ++faceIndex) {\n      dracoDecoder.GetFaceFromMesh(dracoGeometry, faceIndex, face);\n      faces[faceIndex * 3] = face.GetValue(0);\n      faces[faceIndex * 3 + 1] = face.GetValue(1);\n      faces[faceIndex * 3 + 2] = face.GetValue(2);\n    }\n\n    dracoDecoderModule.destroy(face);\n\n    for (let attrIndex = 0; attrIndex < attributesCount; ++attrIndex) {\n      const dracoAttribute = dracoDecoder.GetAttribute(\n        dracoGeometry,\n        attrIndex\n      );\n\n      const attributeData = decodeDracoAttribute(\n        dracoDecoderModule,\n        dracoDecoder,\n        dracoGeometry,\n        dracoAttribute,\n        vertexCount\n      );\n\n      // initial mapping\n      const dracoAttributeType = dracoAttribute.attribute_type();\n      let attributei3sName = \"unknown\";\n\n      if (dracoAttributeType === dracoDecoderModule.POSITION) {\n        attributei3sName = \"positions\";\n      } else if (dracoAttributeType === dracoDecoderModule.NORMAL) {\n        attributei3sName = \"normals\";\n      } else if (dracoAttributeType === dracoDecoderModule.COLOR) {\n        attributei3sName = \"colors\";\n      } else if (dracoAttributeType === dracoDecoderModule.TEX_COORD) {\n        attributei3sName = \"uv0s\";\n      }\n\n      // get the metadata\n      const metadata = dracoDecoder.GetAttributeMetadata(\n        dracoGeometry,\n        attrIndex\n      );\n\n      if (metadata.ptr !== 0) {\n        const numEntries = metadataQuerier.NumEntries(metadata);\n        for (let entry = 0; entry < numEntries; ++entry) {\n          const entryName = metadataQuerier.GetEntryName(metadata, entry);\n          if (entryName === \"i3s-scale_x\") {\n            decodedGeometry.scale_x = metadataQuerier.GetDoubleEntry(\n              metadata,\n              \"i3s-scale_x\"\n            );\n          } else if (entryName === \"i3s-scale_y\") {\n            decodedGeometry.scale_y = metadataQuerier.GetDoubleEntry(\n              metadata,\n              \"i3s-scale_y\"\n            );\n          } else if (entryName === \"i3s-attribute-type\") {\n            attributei3sName = metadataQuerier.GetStringEntry(\n              metadata,\n              \"i3s-attribute-type\"\n            );\n          }\n        }\n      }\n\n      if (defined(decodedGeometry[attributei3sName])) {\n        console.log(\"Attribute already exists\", attributei3sName);\n      }\n\n      decodedGeometry[attributei3sName] = attributeData;\n\n      if (attributei3sName === \"feature-index\") {\n        decodedGeometry.featureCount++;\n      }\n    }\n\n    dracoDecoderModule.destroy(dracoGeometry);\n  }\n\n  dracoDecoderModule.destroy(metadataQuerier);\n  dracoDecoderModule.destroy(dracoDecoder);\n\n  return decodedGeometry;\n}\n\nfunction decodeDracoAttribute(\n  dracoDecoderModule,\n  dracoDecoder,\n  dracoGeometry,\n  dracoAttribute,\n  vertexCount\n) {\n  const bufferSize = dracoAttribute.num_components() * vertexCount;\n  let dracoAttributeData;\n\n  const handlers = [\n    function () {}, // DT_INVALID - 0\n    function () {\n      // DT_INT8 - 1\n      dracoAttributeData = new dracoDecoderModule.DracoInt8Array(bufferSize);\n      const success = dracoDecoder.GetAttributeInt8ForAllPoints(\n        dracoGeometry,\n        dracoAttribute,\n        dracoAttributeData\n      );\n\n      if (!success) {\n        console.error(\"Bad stream\");\n      }\n      const attributeData = new Int8Array(bufferSize);\n      for (let i = 0; i < bufferSize; ++i) {\n        attributeData[i] = dracoAttributeData.GetValue(i);\n      }\n      return attributeData;\n    },\n    function () {\n      // DT_UINT8 - 2\n      dracoAttributeData = new dracoDecoderModule.DracoInt8Array(bufferSize);\n      const success = dracoDecoder.GetAttributeUInt8ForAllPoints(\n        dracoGeometry,\n        dracoAttribute,\n        dracoAttributeData\n      );\n\n      if (!success) {\n        console.error(\"Bad stream\");\n      }\n      const attributeData = new Uint8Array(bufferSize);\n      for (let i = 0; i < bufferSize; ++i) {\n        attributeData[i] = dracoAttributeData.GetValue(i);\n      }\n      return attributeData;\n    },\n    function () {\n      // DT_INT16 - 3\n      dracoAttributeData = new dracoDecoderModule.DracoInt16Array(bufferSize);\n      const success = dracoDecoder.GetAttributeInt16ForAllPoints(\n        dracoGeometry,\n        dracoAttribute,\n        dracoAttributeData\n      );\n\n      if (!success) {\n        console.error(\"Bad stream\");\n      }\n      const attributeData = new Int16Array(bufferSize);\n      for (let i = 0; i < bufferSize; ++i) {\n        attributeData[i] = dracoAttributeData.GetValue(i);\n      }\n      return attributeData;\n    },\n    function () {\n      // DT_UINT16 - 4\n      dracoAttributeData = new dracoDecoderModule.DracoInt16Array(bufferSize);\n      const success = dracoDecoder.GetAttributeUInt16ForAllPoints(\n        dracoGeometry,\n        dracoAttribute,\n        dracoAttributeData\n      );\n\n      if (!success) {\n        console.error(\"Bad stream\");\n      }\n      const attributeData = new Uint16Array(bufferSize);\n      for (let i = 0; i < bufferSize; ++i) {\n        attributeData[i] = dracoAttributeData.GetValue(i);\n      }\n      return attributeData;\n    },\n    function () {\n      // DT_INT32 - 5\n      dracoAttributeData = new dracoDecoderModule.DracoInt32Array(bufferSize);\n      const success = dracoDecoder.GetAttributeInt32ForAllPoints(\n        dracoGeometry,\n        dracoAttribute,\n        dracoAttributeData\n      );\n\n      if (!success) {\n        console.error(\"Bad stream\");\n      }\n      const attributeData = new Int32Array(bufferSize);\n      for (let i = 0; i < bufferSize; ++i) {\n        attributeData[i] = dracoAttributeData.GetValue(i);\n      }\n      return attributeData;\n    },\n    function () {\n      // DT_UINT32 - 6\n      dracoAttributeData = new dracoDecoderModule.DracoInt32Array(bufferSize);\n      const success = dracoDecoder.GetAttributeUInt32ForAllPoints(\n        dracoGeometry,\n        dracoAttribute,\n        dracoAttributeData\n      );\n\n      if (!success) {\n        console.error(\"Bad stream\");\n      }\n      const attributeData = new Uint32Array(bufferSize);\n      for (let i = 0; i < bufferSize; ++i) {\n        attributeData[i] = dracoAttributeData.GetValue(i);\n      }\n      return attributeData;\n    },\n    function () {\n      // DT_INT64 - 7\n    },\n    function () {\n      // DT_UINT64 - 8\n    },\n    function () {\n      // DT_FLOAT32 - 9\n      dracoAttributeData = new dracoDecoderModule.DracoFloat32Array(bufferSize);\n      const success = dracoDecoder.GetAttributeFloatForAllPoints(\n        dracoGeometry,\n        dracoAttribute,\n        dracoAttributeData\n      );\n\n      if (!success) {\n        console.error(\"Bad stream\");\n      }\n      const attributeData = new Float32Array(bufferSize);\n      for (let i = 0; i < bufferSize; ++i) {\n        attributeData[i] = dracoAttributeData.GetValue(i);\n      }\n      return attributeData;\n    },\n    function () {\n      // DT_FLOAT64 - 10\n    },\n    function () {\n      // DT_FLOAT32 - 11\n      dracoAttributeData = new dracoDecoderModule.DracoUInt8Array(bufferSize);\n      const success = dracoDecoder.GetAttributeUInt8ForAllPoints(\n        dracoGeometry,\n        dracoAttribute,\n        dracoAttributeData\n      );\n\n      if (!success) {\n        console.error(\"Bad stream\");\n      }\n      const attributeData = new Uint8Array(bufferSize);\n      for (let i = 0; i < bufferSize; ++i) {\n        attributeData[i] = dracoAttributeData.GetValue(i);\n      }\n      return attributeData;\n    },\n  ];\n\n  const attributeData = handlers[dracoAttribute.data_type()]();\n\n  if (defined(dracoAttributeData)) {\n    dracoDecoderModule.destroy(dracoAttributeData);\n  }\n\n  return attributeData;\n}\n\nconst binaryAttributeDecoders = {\n  position: function (decodedGeometry, data, offset) {\n    const count = decodedGeometry.vertexCount * 3;\n    decodedGeometry.positions = new Float32Array(data, offset, count);\n    offset += count * 4;\n    return offset;\n  },\n  normal: function (decodedGeometry, data, offset) {\n    const count = decodedGeometry.vertexCount * 3;\n    decodedGeometry.normals = new Float32Array(data, offset, count);\n    offset += count * 4;\n    return offset;\n  },\n  uv0: function (decodedGeometry, data, offset) {\n    const count = decodedGeometry.vertexCount * 2;\n    decodedGeometry.uv0s = new Float32Array(data, offset, count);\n    offset += count * 4;\n    return offset;\n  },\n  color: function (decodedGeometry, data, offset) {\n    const count = decodedGeometry.vertexCount * 4;\n    decodedGeometry.colors = new Uint8Array(data, offset, count);\n    offset += count;\n    return offset;\n  },\n  featureId: function (decodedGeometry, data, offset) {\n    // We don't need to use this for anything so just increment the offset\n    const count = decodedGeometry.featureCount;\n    offset += count * 8;\n    return offset;\n  },\n  id: function (decodedGeometry, data, offset) {\n    // We don't need to use this for anything so just increment the offset\n    const count = decodedGeometry.featureCount;\n    offset += count * 8;\n    return offset;\n  },\n  faceRange: function (decodedGeometry, data, offset) {\n    const count = decodedGeometry.featureCount * 2;\n    decodedGeometry.faceRange = new Uint32Array(data, offset, count);\n    offset += count * 4;\n    return offset;\n  },\n  uvRegion: function (decodedGeometry, data, offset) {\n    const count = decodedGeometry.vertexCount * 4;\n    decodedGeometry[\"uv-region\"] = new Uint16Array(data, offset, count);\n    offset += count * 2;\n    return offset;\n  },\n  region: function (decodedGeometry, data, offset) {\n    const count = decodedGeometry.vertexCount * 4;\n    decodedGeometry[\"uv-region\"] = new Uint16Array(data, offset, count);\n    offset += count * 2;\n    return offset;\n  },\n};\n\nfunction decodeBinaryGeometry(data, schema, bufferInfo, featureData) {\n  // From this spec:\n  // https://github.com/Esri/i3s-spec/blob/master/docs/1.7/defaultGeometrySchema.cmn.md\n  const decodedGeometry = {\n    vertexCount: 0,\n  };\n\n  const dataView = new DataView(data);\n\n  try {\n    let offset = 0;\n    decodedGeometry.vertexCount = dataView.getUint32(offset, 1);\n    offset += 4;\n\n    decodedGeometry.featureCount = dataView.getUint32(offset, 1);\n    offset += 4;\n\n    if (defined(bufferInfo)) {\n      for (\n        let attrIndex = 0;\n        attrIndex < bufferInfo.attributes.length;\n        attrIndex++\n      ) {\n        if (\n          defined(binaryAttributeDecoders[bufferInfo.attributes[attrIndex]])\n        ) {\n          offset = binaryAttributeDecoders[bufferInfo.attributes[attrIndex]](\n            decodedGeometry,\n            data,\n            offset\n          );\n        } else {\n          console.error(\n            \"Unknown decoder for\",\n            bufferInfo.attributes[attrIndex]\n          );\n        }\n      }\n    } else {\n      let ordering = schema.ordering;\n      let featureAttributeOrder = schema.featureAttributeOrder;\n\n      if (\n        defined(featureData) &&\n        defined(featureData.geometryData) &&\n        defined(featureData.geometryData[0]) &&\n        defined(featureData.geometryData[0].params)\n      ) {\n        ordering = Object.keys(\n          featureData.geometryData[0].params.vertexAttributes\n        );\n        featureAttributeOrder = Object.keys(\n          featureData.geometryData[0].params.featureAttributes\n        );\n      }\n\n      // Use default geometry schema\n      for (let i = 0; i < ordering.length; i++) {\n        const decoder = binaryAttributeDecoders[ordering[i]];\n        if (!defined(decoder)) {\n          console.log(ordering[i]);\n        }\n        offset = decoder(decodedGeometry, data, offset);\n      }\n\n      for (let j = 0; j < featureAttributeOrder.length; j++) {\n        const curDecoder = binaryAttributeDecoders[featureAttributeOrder[j]];\n        if (!defined(curDecoder)) {\n          console.log(featureAttributeOrder[j]);\n        }\n        offset = curDecoder(decodedGeometry, data, offset);\n      }\n    }\n  } catch (e) {\n    console.error(e);\n  }\n\n  decodedGeometry.scale_x = 1;\n  decodedGeometry.scale_y = 1;\n\n  return decodedGeometry;\n}\n\nfunction decodeI3S(parameters) {\n  // Decode the data into geometry\n  const geometryData = decode(\n    parameters.binaryData,\n    parameters.schema,\n    parameters.bufferInfo,\n    parameters.featureData\n  );\n\n  // Adjust height from orthometric to ellipsoidal\n  if (\n    defined(parameters.geoidDataList) &&\n    parameters.geoidDataList.length > 0\n  ) {\n    orthometricToEllipsoidal(\n      geometryData.vertexCount,\n      geometryData.positions,\n      geometryData.scale_x,\n      geometryData.scale_y,\n      parameters.cartographicCenter,\n      parameters.geoidDataList,\n      false\n    );\n  }\n\n  // Transform vertices to local\n  transformToLocal(\n    geometryData.vertexCount,\n    geometryData.positions,\n    geometryData.normals,\n    parameters.cartographicCenter,\n    parameters.cartesianCenter,\n    parameters.parentRotation,\n    parameters.ellipsoidRadiiSquare,\n    geometryData.scale_x,\n    geometryData.scale_y\n  );\n\n  // Adjust UVs if there is a UV region\n  if (defined(geometryData.uv0s) && defined(geometryData[\"uv-region\"])) {\n    cropUVs(\n      geometryData.vertexCount,\n      geometryData.uv0s,\n      geometryData[\"uv-region\"]\n    );\n  }\n\n  // Create the final buffer\n  const meshData = generateGltfBuffer(\n    geometryData.vertexCount,\n    geometryData.indices,\n    geometryData.positions,\n    geometryData.normals,\n    geometryData.uv0s,\n    geometryData.colors\n  );\n\n  const customAttributes = {};\n  if (defined(geometryData[\"feature-index\"])) {\n    customAttributes.positions = geometryData.positions;\n    customAttributes.indices = geometryData.indices;\n    customAttributes.featureIndex = geometryData[\"feature-index\"];\n    customAttributes.cartesianCenter = parameters.cartesianCenter;\n    customAttributes.parentRotation = parameters.parentRotation;\n  } else if (defined(geometryData[\"faceRange\"])) {\n    customAttributes.positions = geometryData.positions;\n    customAttributes.indices = geometryData.indices;\n    customAttributes.sourceURL = parameters.url;\n    customAttributes.cartesianCenter = parameters.cartesianCenter;\n    customAttributes.parentRotation = parameters.parentRotation;\n\n    // Build the feature index array from the faceRange.\n    customAttributes.featureIndex = new Array(geometryData.positions.length);\n    for (\n      let range = 0;\n      range < geometryData[\"faceRange\"].length - 1;\n      range += 2\n    ) {\n      const curIndex = range / 2;\n      const rangeStart = geometryData[\"faceRange\"][range];\n      const rangeEnd = geometryData[\"faceRange\"][range + 1];\n      for (let i = rangeStart; i <= rangeEnd; i++) {\n        customAttributes.featureIndex[i * 3] = curIndex;\n        customAttributes.featureIndex[i * 3 + 1] = curIndex;\n        customAttributes.featureIndex[i * 3 + 2] = curIndex;\n      }\n    }\n  }\n\n  meshData._customAttributes = customAttributes;\n\n  const results = {\n    meshData: meshData,\n  };\n\n  return results;\n}\n\nfunction initWorker(dracoModule) {\n  draco = dracoModule;\n  self.onmessage = createTaskProcessorWorker(decodeI3S);\n  self.postMessage(true);\n}\n\nfunction decodeI3SStart(event) {\n  const data = event.data;\n\n  // Expect the first message to be to load a web assembly module\n  const wasmConfig = data.webAssemblyConfig;\n  if (defined(wasmConfig)) {\n    // Require and compile WebAssembly module, or use fallback if not supported\n    return require([wasmConfig.modulePath], function (dracoModule) {\n      if (defined(wasmConfig.wasmBinaryFile)) {\n        if (!defined(dracoModule)) {\n          dracoModule = self.DracoDecoderModule;\n        }\n\n        dracoModule(wasmConfig).then(function (compiledModule) {\n          initWorker(compiledModule);\n        });\n      } else {\n        initWorker(dracoModule());\n      }\n    });\n  }\n}\n\nexport default decodeI3SStart;\n"],"names":["Cartesian3","WebMercatorProjection","Ellipsoid","Cartographic","CesiumMath","defined","Matrix3"],"mappings":"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"}