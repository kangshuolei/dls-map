{
  "version": 3,
  "sources": ["../../../../node_modules/.pnpm/lodash.clonedeep@4.5.0/node_modules/lodash.clonedeep/index.js", "../../../../node_modules/.pnpm/fast-deep-equal@3.1.3/node_modules/fast-deep-equal/index.js", "../../../../node_modules/.pnpm/@turf+jsts@2.7.1/node_modules/@turf/jsts/dist/jsts.min.js", "../../../../node_modules/.pnpm/rbush@3.0.1/node_modules/rbush/rbush.min.js", "../../../../node_modules/.pnpm/tinyqueue@2.0.3/node_modules/tinyqueue/index.js", "../../../../node_modules/.pnpm/point-in-polygon@1.1.0/node_modules/point-in-polygon/flat.js", "../../../../node_modules/.pnpm/point-in-polygon@1.1.0/node_modules/point-in-polygon/nested.js", "../../../../node_modules/.pnpm/point-in-polygon@1.1.0/node_modules/point-in-polygon/index.js", "../../../../node_modules/.pnpm/robust-predicates@2.0.4/node_modules/robust-predicates/umd/orient2d.min.js", "../../../../node_modules/.pnpm/concaveman@1.2.1/node_modules/concaveman/index.js", "../../../../node_modules/.pnpm/skmeans@0.9.7/node_modules/skmeans/distance.js", "../../../../node_modules/.pnpm/skmeans@0.9.7/node_modules/skmeans/kinit.js", "../../../../node_modules/.pnpm/skmeans@0.9.7/node_modules/skmeans/main.js", "../../../../node_modules/.pnpm/earcut@2.2.4/node_modules/earcut/src/earcut.js", "../../../node_modules/dls-map/es/components/src/dlsButton/dlsButton.vue2.mjs", "../../../node_modules/dls-map/es/components/src/dlsButton/types.mjs", "../../../node_modules/dls-map/es/_virtual/_plugin-vue_export-helper.mjs", "../../../node_modules/dls-map/es/components/src/dlsButton/dlsButton.vue.mjs", "../../../node_modules/dls-map/es/utils/Shader/Shaders.mjs", "../../../node_modules/dls-map/es/utils/withinstall/index.mjs", "../../../node_modules/dls-map/es/components/src/dlsButton/index.mjs", "../../../node_modules/dls-map/es/components/src/dlsMap/dlsMap.vue.mjs", "../../../node_modules/dls-map/es/components/src/dlsMap/types.mjs", "../../../node_modules/dls-map/es/components/src/dlsMap/LoadingSpinner.vue.mjs", "../../../node_modules/dls-map/es/components/src/dlsMap/index.mjs", "../../../node_modules/dls-map/es/composables/use-layer/useSwitchMap.mjs", "../../../node_modules/dls-map/es/composables/use-tools/useCesiumCoord.mjs", "../../../node_modules/dls-map/es/composables/use-tools/useCesiumUtils.mjs", "../../../node_modules/dls-map/es/composables/use-tools/useRemoveCesium.mjs", "../../../node_modules/dls-map/es/composables/use-tools/useSwitchViewPoint.mjs", "../../../node_modules/dls-map/es/composables/use-layer/useLoadTerrain.mjs", "../../../node_modules/dls-map/es/composables/use-analysis/useDrawGraph.mjs", "../../../node_modules/dls-map/es/composables/use-entity/useCesiumAddEntity.mjs", "../../../node_modules/dls-map/es/composables/use-coverage/CesiumSetDiv.mjs", "../../../node_modules/dls-map/es/composables/use-analysis/plot/events.mjs", "../../../node_modules/dls-map/es/composables/use-analysis/plot/base.mjs", "../../../node_modules/dls-map/es/composables/use-analysis/plot/utils.mjs", "../../../node_modules/dls-map/es/composables/use-analysis/plot/arrow/fine-arrow.mjs", "../../../node_modules/dls-map/es/composables/use-analysis/plot/arrow/attack-arrow.mjs", "../../../node_modules/dls-map/es/composables/use-analysis/plot/arrow/swallowtail-attack-arrow.mjs", "../../../node_modules/dls-map/es/composables/use-analysis/plot/arrow/squad-combat.mjs", "../../../node_modules/dls-map/es/composables/use-analysis/plot/arrow/swallowtail-squad-combat.mjs", "../../../node_modules/dls-map/es/composables/use-analysis/plot/arrow/straight-arrow.mjs", "../../../node_modules/dls-map/es/composables/use-analysis/plot/arrow/curved-arrow.mjs", "../../../node_modules/dls-map/es/composables/use-analysis/plot/arrow/assault-direction.mjs", "../../../node_modules/dls-map/es/composables/use-analysis/plot/arrow/double-arrow.mjs", "../../../node_modules/dls-map/es/composables/use-analysis/plot/line/freehand-line.mjs", "../../../node_modules/dls-map/es/composables/use-analysis/plot/polygon/freehand-polygon.mjs", "../../../node_modules/dls-map/es/composables/use-analysis/plot/line/curve.mjs", "../../../node_modules/dls-map/es/composables/use-analysis/plot/polygon/ellipse.mjs", "../../../node_modules/dls-map/es/composables/use-analysis/plot/polygon/lune.mjs", "../../../node_modules/dls-map/es/composables/use-analysis/plot/polygon/rectangle.mjs", "../../../node_modules/dls-map/es/composables/use-analysis/plot/polygon/triangle.mjs", "../../../node_modules/dls-map/es/composables/use-analysis/plot/polygon/polygon.mjs", "../../../node_modules/dls-map/es/composables/use-analysis/plot/polygon/circle.mjs", "../../../node_modules/dls-map/es/composables/use-analysis/plot/polygon/sector.mjs", "../../../node_modules/dls-map/es/composables/use-analysis/plot/polygon/gathering-place.mjs", "../../../node_modules/dls-map/es/composables/use-analysis/plot/line/arc.mjs", "../../../node_modules/dls-map/es/composables/use-analysis/plot/line/polyline.mjs", "../../../node_modules/dls-map/es/composables/use-analysis/plot/polygon/closed-curve.mjs", "../../../node_modules/dls-map/es/composables/use-analysis/plot/point/point.mjs", "../../../node_modules/dls-map/es/composables/use-analysis/plot/index.mjs", "../../../node_modules/dls-map/es/composables/use-environment/useEnvironment.mjs", "../../../node_modules/dls-map/es/composables/use-coverage/CesiumUseEcharts.mjs", "../../../node_modules/dls-map/es/composables/use-coverage/CesiumHeatmap.mjs", "../../../../node_modules/.pnpm/@turf+helpers@7.1.0/node_modules/@turf/helpers/index.ts", "../../../../node_modules/.pnpm/@turf+invariant@7.1.0/node_modules/@turf/invariant/index.ts", "../../../../node_modules/.pnpm/@turf+rhumb-bearing@7.1.0/node_modules/@turf/rhumb-bearing/index.ts", "../../../../node_modules/.pnpm/@turf+meta@7.1.0/node_modules/@turf/meta/index.js", "../../../../node_modules/.pnpm/@turf+area@7.1.0/node_modules/@turf/area/index.ts", "../../../../node_modules/.pnpm/@turf+bbox@7.1.0/node_modules/@turf/bbox/index.ts", "../../../../node_modules/.pnpm/geojson-equality-ts@1.0.2/node_modules/geojson-equality-ts/index.ts", "../../../../node_modules/.pnpm/@turf+line-overlap@7.1.0/node_modules/@turf/line-overlap/index.ts", "../../../../node_modules/.pnpm/@turf+center@7.1.0/node_modules/@turf/center/index.ts", "../../../../node_modules/.pnpm/@turf+buffer@7.1.0/node_modules/@turf/buffer/index.js", "../../../../node_modules/.pnpm/d3-geo@1.7.1/node_modules/d3-geo/src/adder.js", "../../../../node_modules/.pnpm/d3-geo@1.7.1/node_modules/d3-geo/src/math.js", "../../../../node_modules/.pnpm/d3-geo@1.7.1/node_modules/d3-geo/src/noop.js", "../../../../node_modules/.pnpm/d3-geo@1.7.1/node_modules/d3-geo/src/stream.js", "../../../../node_modules/.pnpm/d3-geo@1.7.1/node_modules/d3-geo/src/area.js", "../../../../node_modules/.pnpm/d3-geo@1.7.1/node_modules/d3-geo/src/cartesian.js", "../../../../node_modules/.pnpm/d3-geo@1.7.1/node_modules/d3-geo/src/bounds.js", "../../../../node_modules/.pnpm/d3-geo@1.7.1/node_modules/d3-geo/src/compose.js", "../../../../node_modules/.pnpm/d3-geo@1.7.1/node_modules/d3-geo/src/rotation.js", "../../../../node_modules/.pnpm/d3-geo@1.7.1/node_modules/d3-geo/src/circle.js", "../../../../node_modules/.pnpm/d3-geo@1.7.1/node_modules/d3-geo/src/clip/buffer.js", "../../../../node_modules/.pnpm/d3-geo@1.7.1/node_modules/d3-geo/src/clip/line.js", "../../../../node_modules/.pnpm/d3-geo@1.7.1/node_modules/d3-geo/src/pointEqual.js", "../../../../node_modules/.pnpm/d3-geo@1.7.1/node_modules/d3-geo/src/clip/polygon.js", "../../../../node_modules/.pnpm/d3-array@1.2.4/node_modules/d3-array/src/ascending.js", "../../../../node_modules/.pnpm/d3-array@1.2.4/node_modules/d3-array/src/bisector.js", "../../../../node_modules/.pnpm/d3-array@1.2.4/node_modules/d3-array/src/bisect.js", "../../../../node_modules/.pnpm/d3-array@1.2.4/node_modules/d3-array/src/array.js", "../../../../node_modules/.pnpm/d3-array@1.2.4/node_modules/d3-array/src/ticks.js", "../../../../node_modules/.pnpm/d3-array@1.2.4/node_modules/d3-array/src/merge.js", "../../../../node_modules/.pnpm/d3-geo@1.7.1/node_modules/d3-geo/src/clip/extent.js", "../../../../node_modules/.pnpm/d3-geo@1.7.1/node_modules/d3-geo/src/polygonContains.js", "../../../../node_modules/.pnpm/d3-geo@1.7.1/node_modules/d3-geo/src/length.js", "../../../../node_modules/.pnpm/d3-geo@1.7.1/node_modules/d3-geo/src/identity.js", "../../../../node_modules/.pnpm/d3-geo@1.7.1/node_modules/d3-geo/src/path/area.js", "../../../../node_modules/.pnpm/d3-geo@1.7.1/node_modules/d3-geo/src/path/bounds.js", "../../../../node_modules/.pnpm/d3-geo@1.7.1/node_modules/d3-geo/src/path/context.js", "../../../../node_modules/.pnpm/d3-geo@1.7.1/node_modules/d3-geo/src/path/measure.js", "../../../../node_modules/.pnpm/d3-geo@1.7.1/node_modules/d3-geo/src/path/string.js", "../../../../node_modules/.pnpm/d3-geo@1.7.1/node_modules/d3-geo/src/clip/index.js", "../../../../node_modules/.pnpm/d3-geo@1.7.1/node_modules/d3-geo/src/clip/antimeridian.js", "../../../../node_modules/.pnpm/d3-geo@1.7.1/node_modules/d3-geo/src/clip/circle.js", "../../../../node_modules/.pnpm/d3-geo@1.7.1/node_modules/d3-geo/src/transform.js", "../../../../node_modules/.pnpm/d3-geo@1.7.1/node_modules/d3-geo/src/projection/fit.js", "../../../../node_modules/.pnpm/d3-geo@1.7.1/node_modules/d3-geo/src/projection/resample.js", "../../../../node_modules/.pnpm/d3-geo@1.7.1/node_modules/d3-geo/src/projection/index.js", "../../../../node_modules/.pnpm/d3-geo@1.7.1/node_modules/d3-geo/src/projection/azimuthal.js", "../../../../node_modules/.pnpm/d3-geo@1.7.1/node_modules/d3-geo/src/projection/azimuthalEqualArea.js", "../../../../node_modules/.pnpm/d3-geo@1.7.1/node_modules/d3-geo/src/projection/azimuthalEquidistant.js", "../../../../node_modules/.pnpm/d3-geo@1.7.1/node_modules/d3-geo/src/projection/mercator.js", "../../../../node_modules/.pnpm/d3-geo@1.7.1/node_modules/d3-geo/src/projection/equirectangular.js", "../../../../node_modules/.pnpm/d3-geo@1.7.1/node_modules/d3-geo/src/projection/gnomonic.js", "../../../../node_modules/.pnpm/d3-geo@1.7.1/node_modules/d3-geo/src/projection/naturalEarth1.js", "../../../../node_modules/.pnpm/d3-geo@1.7.1/node_modules/d3-geo/src/projection/orthographic.js", "../../../../node_modules/.pnpm/d3-geo@1.7.1/node_modules/d3-geo/src/projection/stereographic.js", "../../../../node_modules/.pnpm/d3-geo@1.7.1/node_modules/d3-geo/src/projection/transverseMercator.js", "../../../../node_modules/.pnpm/@turf+convex@7.1.0/node_modules/@turf/convex/index.ts", "../../../../node_modules/.pnpm/@turf+clusters-kmeans@7.1.0/node_modules/@turf/clusters-kmeans/index.ts", "../../../../node_modules/.pnpm/topojson-server@3.0.1/node_modules/topojson-server/src/hash/point-hash.js", "../../../../node_modules/.pnpm/splaytree@3.1.2/node_modules/splaytree/dist/splay.esm.js", "../../../../node_modules/.pnpm/robust-predicates@3.0.2/node_modules/robust-predicates/esm/util.js", "../../../../node_modules/.pnpm/robust-predicates@3.0.2/node_modules/robust-predicates/esm/orient2d.js", "../../../../node_modules/.pnpm/robust-predicates@3.0.2/node_modules/robust-predicates/esm/orient3d.js", "../../../../node_modules/.pnpm/robust-predicates@3.0.2/node_modules/robust-predicates/esm/incircle.js", "../../../../node_modules/.pnpm/robust-predicates@3.0.2/node_modules/robust-predicates/esm/insphere.js", "../../../../node_modules/.pnpm/polygon-clipping@0.15.7/node_modules/polygon-clipping/dist/polygon-clipping.esm.js", "../../../../node_modules/.pnpm/@turf+great-circle@7.1.0/node_modules/@turf/great-circle/index.js", "../../../../node_modules/.pnpm/@turf+great-circle@7.1.0/node_modules/@turf/great-circle/lib/arc.js", "../../../../node_modules/.pnpm/marchingsquares@1.3.3/node_modules/marchingsquares/dist/marchingsquares-esm.js", "../../../../node_modules/.pnpm/@turf+shortest-path@7.1.0/node_modules/@turf/shortest-path/index.ts", "../../../../node_modules/.pnpm/@turf+shortest-path@7.1.0/node_modules/@turf/shortest-path/lib/javascript-astar.js", "../../../../node_modules/.pnpm/@turf+tesselate@7.1.0/node_modules/@turf/tesselate/index.ts", "../../../../node_modules/.pnpm/d3-voronoi@1.1.2/node_modules/d3-voronoi/src/RedBlackTree.js", "../../../../node_modules/.pnpm/d3-voronoi@1.1.2/node_modules/d3-voronoi/src/Edge.js", "../../../../node_modules/.pnpm/d3-voronoi@1.1.2/node_modules/d3-voronoi/src/Cell.js", "../../../../node_modules/.pnpm/d3-voronoi@1.1.2/node_modules/d3-voronoi/src/Circle.js", "../../../../node_modules/.pnpm/d3-voronoi@1.1.2/node_modules/d3-voronoi/src/Beach.js", "../../../../node_modules/.pnpm/d3-voronoi@1.1.2/node_modules/d3-voronoi/src/Diagram.js", "../../../node_modules/dls-map/es/composables/use-analysis/CesiumBufferAnalyze.mjs", "../../../node_modules/dls-map/es/utils/util.mjs", "../../../node_modules/dls-map/es/composables/use-entity/CesiumTrack.mjs", "../../../node_modules/dls-map/es/utils/helper/index.mjs"],
  "sourcesContent": ["/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/**\n * Adds the key-value `pair` to `map`.\n *\n * @private\n * @param {Object} map The map to modify.\n * @param {Array} pair The key-value pair to add.\n * @returns {Object} Returns `map`.\n */\nfunction addMapEntry(map, pair) {\n  // Don't return `map.set` because it's not chainable in IE 11.\n  map.set(pair[0], pair[1]);\n  return map;\n}\n\n/**\n * Adds `value` to `set`.\n *\n * @private\n * @param {Object} set The set to modify.\n * @param {*} value The value to add.\n * @returns {Object} Returns `set`.\n */\nfunction addSetEntry(set, value) {\n  // Don't return `set.add` because it's not chainable in IE 11.\n  set.add(value);\n  return set;\n}\n\n/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    getPrototype = overArg(Object.getPrototypeOf, Object),\n    objectCreate = Object.create,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  this.__data__ = new ListCache(entries);\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  return this.__data__['delete'](key);\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var cache = this.__data__;\n  if (cache instanceof ListCache) {\n    var pairs = cache.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      return this;\n    }\n    cache = this.__data__ = new MapCache(pairs);\n  }\n  cache.set(key, value);\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    object[key] = value;\n  }\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @param {boolean} [isFull] Specify a clone including symbols.\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, isDeep, isFull, customizer, key, object, stack) {\n  var result;\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      if (isHostObject(value)) {\n        return object ? value : {};\n      }\n      result = initCloneObject(isFunc ? {} : value);\n      if (!isDeep) {\n        return copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, baseClone, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (!isArr) {\n    var props = isFull ? getAllKeys(value) : keys(value);\n  }\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));\n  });\n  return result;\n}\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} prototype The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nfunction baseCreate(proto) {\n  return isObject(proto) ? objectCreate(proto) : {};\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  return objectToString.call(value);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var result = new buffer.constructor(buffer.length);\n  buffer.copy(result);\n  return result;\n}\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\n/**\n * Creates a clone of `map`.\n *\n * @private\n * @param {Object} map The map to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned map.\n */\nfunction cloneMap(map, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);\n  return arrayReduce(array, addMapEntry, new map.constructor);\n}\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\n/**\n * Creates a clone of `set`.\n *\n * @private\n * @param {Object} set The set to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned set.\n */\nfunction cloneSet(set, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);\n  return arrayReduce(array, addSetEntry, new set.constructor);\n}\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    assignValue(object, key, newValue === undefined ? source[key] : newValue);\n  }\n  return object;\n}\n\n/**\n * Copies own symbol properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Creates an array of the own enumerable symbol properties of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11,\n// for data views in Edge < 14, and promises in Node.js.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = objectToString.call(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : undefined;\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, cloneFunc, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return cloneMap(object, isDeep, cloneFunc);\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return cloneSet(object, isDeep, cloneFunc);\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, true, true);\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = cloneDeep;\n", "'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n", "!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).jsts=e()}(this,(function(){\"use strict\";function t(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}function e(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,\"value\"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function n(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}function i(t,e){if(\"function\"!=typeof e&&null!==e)throw new TypeError(\"Super expression must either be null or a function\");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&s(t,e)}function r(t){return r=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)},r(t)}function s(t,e){return s=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t},s(t,e)}function a(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}function o(t,e,n){return o=a()?Reflect.construct:function(t,e,n){var i=[null];i.push.apply(i,e);var r=new(Function.bind.apply(t,i));return n&&s(r,n.prototype),r},o.apply(null,arguments)}function u(t){var e=\"function\"==typeof Map?new Map:void 0;return u=function(t){if(null===t||(n=t,-1===Function.toString.call(n).indexOf(\"[native code]\")))return t;var n;if(\"function\"!=typeof t)throw new TypeError(\"Super expression must either be null or a function\");if(void 0!==e){if(e.has(t))return e.get(t);e.set(t,i)}function i(){return o(t,arguments,r(this).constructor)}return i.prototype=Object.create(t.prototype,{constructor:{value:i,enumerable:!1,writable:!0,configurable:!0}}),s(i,t)},u(t)}function l(t){if(void 0===t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return t}function h(t,e){if(e&&(\"object\"==typeof e||\"function\"==typeof e))return e;if(void 0!==e)throw new TypeError(\"Derived constructors may only return object or undefined\");return l(t)}function c(t){var e=a();return function(){var n,i=r(t);if(e){var s=r(this).constructor;n=Reflect.construct(i,arguments,s)}else n=i.apply(this,arguments);return h(this,n)}}function f(t,e,n){return f=\"undefined\"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var i=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=r(t)););return t}(t,e);if(i){var s=Object.getOwnPropertyDescriptor(i,e);return s.get?s.get.call(n):s.value}},f(t,e,n||t)}function v(t){return function(t){if(Array.isArray(t))return y(t)}(t)||function(t){if(\"undefined\"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t[\"@@iterator\"])return Array.from(t)}(t)||g(t)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function g(t,e){if(t){if(\"string\"==typeof t)return y(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return\"Object\"===n&&t.constructor&&(n=t.constructor.name),\"Map\"===n||\"Set\"===n?Array.from(t):\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?y(t,e):void 0}}function y(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,i=new Array(e);n<e;n++)i[n]=t[n];return i}function d(t,e){var n=\"undefined\"!=typeof Symbol&&t[Symbol.iterator]||t[\"@@iterator\"];if(!n){if(Array.isArray(t)||(n=g(t))||e&&t&&\"number\"==typeof t.length){n&&(t=n);var i=0,r=function(){};return{s:r,n:function(){return i>=t.length?{done:!0}:{done:!1,value:t[i++]}},e:function(t){throw t},f:r}}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}var s,a=!0,o=!1;return{s:function(){n=n.call(t)},n:function(){var t=n.next();return a=t.done,t},e:function(t){o=!0,s=t},f:function(){try{a||null==n.return||n.return()}finally{if(o)throw s}}}}var _=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"getEndCapStyle\",value:function(){return this._endCapStyle}},{key:\"isSingleSided\",value:function(){return this._isSingleSided}},{key:\"setQuadrantSegments\",value:function(t){this._quadrantSegments=t,0===this._quadrantSegments&&(this._joinStyle=e.JOIN_BEVEL),this._quadrantSegments<0&&(this._joinStyle=e.JOIN_MITRE,this._mitreLimit=Math.abs(this._quadrantSegments)),t<=0&&(this._quadrantSegments=1),this._joinStyle!==e.JOIN_ROUND&&(this._quadrantSegments=e.DEFAULT_QUADRANT_SEGMENTS)}},{key:\"getJoinStyle\",value:function(){return this._joinStyle}},{key:\"setJoinStyle\",value:function(t){this._joinStyle=t}},{key:\"setSimplifyFactor\",value:function(t){this._simplifyFactor=t<0?0:t}},{key:\"getSimplifyFactor\",value:function(){return this._simplifyFactor}},{key:\"getQuadrantSegments\",value:function(){return this._quadrantSegments}},{key:\"setEndCapStyle\",value:function(t){this._endCapStyle=t}},{key:\"getMitreLimit\",value:function(){return this._mitreLimit}},{key:\"setMitreLimit\",value:function(t){this._mitreLimit=t}},{key:\"setSingleSided\",value:function(t){this._isSingleSided=t}}],[{key:\"constructor_\",value:function(){if(this._quadrantSegments=e.DEFAULT_QUADRANT_SEGMENTS,this._endCapStyle=e.CAP_ROUND,this._joinStyle=e.JOIN_ROUND,this._mitreLimit=e.DEFAULT_MITRE_LIMIT,this._isSingleSided=!1,this._simplifyFactor=e.DEFAULT_SIMPLIFY_FACTOR,0===arguments.length);else if(1===arguments.length){var t=arguments[0];this.setQuadrantSegments(t)}else if(2===arguments.length){var n=arguments[0],i=arguments[1];this.setQuadrantSegments(n),this.setEndCapStyle(i)}else if(4===arguments.length){var r=arguments[0],s=arguments[1],a=arguments[2],o=arguments[3];this.setQuadrantSegments(r),this.setEndCapStyle(s),this.setJoinStyle(a),this.setMitreLimit(o)}}},{key:\"bufferDistanceError\",value:function(t){var e=Math.PI/2/t;return 1-Math.cos(e/2)}}]),e}();_.CAP_ROUND=1,_.CAP_FLAT=2,_.CAP_SQUARE=3,_.JOIN_ROUND=1,_.JOIN_MITRE=2,_.JOIN_BEVEL=3,_.DEFAULT_QUADRANT_SEGMENTS=8,_.DEFAULT_MITRE_LIMIT=5,_.DEFAULT_SIMPLIFY_FACTOR=.01;var p=function(e){i(s,e);var r=c(s);function s(e){var n;return t(this,s),(n=r.call(this,e)).name=Object.keys({Exception:s})[0],n}return n(s,[{key:\"toString\",value:function(){return this.message}}]),s}(u(Error)),m=function(e){i(r,e);var n=c(r);function r(e){var i;return t(this,r),(i=n.call(this,e)).name=Object.keys({IllegalArgumentException:r})[0],i}return r}(p),k=function(){function e(){t(this,e)}return n(e,[{key:\"filter\",value:function(t){}}]),e}();function x(){}function I(){}function E(){}var N,T,S,L,C,R,w,O,b=function(){function e(){t(this,e)}return n(e,null,[{key:\"equalsWithTolerance\",value:function(t,e,n){return Math.abs(t-e)<=n}}]),e}(),M=function(){function e(n,i){t(this,e),this.low=i||0,this.high=n||0}return n(e,null,[{key:\"toBinaryString\",value:function(t){var e,n=\"\";for(e=2147483648;e>0;e>>>=1)n+=(t.high&e)===e?\"1\":\"0\";for(e=2147483648;e>0;e>>>=1)n+=(t.low&e)===e?\"1\":\"0\";return n}}]),e}();function A(){}function P(){}A.NaN=NaN,A.isNaN=function(t){return Number.isNaN(t)},A.isInfinite=function(t){return!Number.isFinite(t)},A.MAX_VALUE=Number.MAX_VALUE,A.POSITIVE_INFINITY=Number.POSITIVE_INFINITY,A.NEGATIVE_INFINITY=Number.NEGATIVE_INFINITY,\"function\"==typeof Float64Array&&\"function\"==typeof Int32Array?(R=2146435072,w=new Float64Array(1),O=new Int32Array(w.buffer),A.doubleToLongBits=function(t){w[0]=t;var e=0|O[0],n=0|O[1];return(n&R)===R&&0!=(1048575&n)&&0!==e&&(e=0,n=2146959360),new M(n,e)},A.longBitsToDouble=function(t){return O[0]=t.low,O[1]=t.high,w[0]}):(N=1023,T=Math.log2,S=Math.floor,L=Math.pow,C=function(){for(var t=53;t>0;t--){var e=L(2,t)-1;if(S(T(e))+1===t)return e}return 0}(),A.doubleToLongBits=function(t){var e,n,i,r,s,a,o,u,l;if(t<0||1/t===Number.NEGATIVE_INFINITY?(a=1<<31,t=-t):a=0,0===t)return new M(u=a,l=0);if(t===1/0)return new M(u=2146435072|a,l=0);if(t!=t)return new M(u=2146959360,l=0);if(r=0,l=0,(e=S(t))>1)if(e<=C)(r=S(T(e)))<=20?(l=0,u=e<<20-r&1048575):(l=e%(n=L(2,i=r-20))<<32-i,u=e/n&1048575);else for(i=e,l=0;0!==(i=S(n=i/2));)r++,l>>>=1,l|=(1&u)<<31,u>>>=1,n!==i&&(u|=524288);if(o=r+N,s=0===e,e=t-e,r<52&&0!==e)for(i=0;;){if((n=2*e)>=1?(e=n-1,s?(o--,s=!1):(i<<=1,i|=1,r++)):(e=n,s?0==--o&&(r++,s=!1):(i<<=1,r++)),20===r)u|=i,i=0;else if(52===r){l|=i;break}if(1===n){r<20?u|=i<<20-r:r<52&&(l|=i<<52-r);break}}return u|=o<<20,new M(u|=a,l)},A.longBitsToDouble=function(t){var e,n,i,r,s=t.high,a=t.low,o=s&1<<31?-1:1;for(i=((2146435072&s)>>20)-N,r=0,n=1<<19,e=1;e<=20;e++)s&n&&(r+=L(2,-e)),n>>>=1;for(n=1<<31,e=21;e<=52;e++)a&n&&(r+=L(2,-e)),n>>>=1;if(-1023===i){if(0===r)return 0*o;i=-1022}else{if(1024===i)return 0===r?o/0:NaN;r+=1}return o*r*L(2,i)});var D=function(e){i(r,e);var n=c(r);function r(e){var i;return t(this,r),(i=n.call(this,e)).name=Object.keys({RuntimeException:r})[0],i}return r}(p),F=function(e){i(s,e);var r=c(s);function s(){var e;return t(this,s),e=r.call(this),s.constructor_.apply(l(e),arguments),e}return n(s,null,[{key:\"constructor_\",value:function(){if(0===arguments.length)D.constructor_.call(this);else if(1===arguments.length){var t=arguments[0];D.constructor_.call(this,t)}}}]),s}(D),G=function(){function e(){t(this,e)}return n(e,null,[{key:\"shouldNeverReachHere\",value:function(){if(0===arguments.length)e.shouldNeverReachHere(null);else if(1===arguments.length){var t=arguments[0];throw new F(\"Should never reach here\"+(null!==t?\": \"+t:\"\"))}}},{key:\"isTrue\",value:function(){if(1===arguments.length){var t=arguments[0];e.isTrue(t,null)}else if(2===arguments.length){var n=arguments[0],i=arguments[1];if(!n)throw null===i?new F:new F(i)}}},{key:\"equals\",value:function(){if(2===arguments.length){var t=arguments[0],n=arguments[1];e.equals(t,n,null)}else if(3===arguments.length){var i=arguments[0],r=arguments[1],s=arguments[2];if(!r.equals(i))throw new F(\"Expected \"+i+\" but encountered \"+r+(null!==s?\": \"+s:\"\"))}}}]),e}(),q=new ArrayBuffer(8),Y=new Float64Array(q),z=new Int32Array(q),X=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"getM\",value:function(){return A.NaN}},{key:\"setOrdinate\",value:function(t,n){switch(t){case e.X:this.x=n;break;case e.Y:this.y=n;break;case e.Z:this.setZ(n);break;default:throw new m(\"Invalid ordinate index: \"+t)}}},{key:\"equals2D\",value:function(){if(1===arguments.length){var t=arguments[0];return this.x===t.x&&this.y===t.y}if(2===arguments.length){var e=arguments[0],n=arguments[1];return!!b.equalsWithTolerance(this.x,e.x,n)&&!!b.equalsWithTolerance(this.y,e.y,n)}}},{key:\"setM\",value:function(t){throw new m(\"Invalid ordinate index: \"+e.M)}},{key:\"getZ\",value:function(){return this.z}},{key:\"getOrdinate\",value:function(t){switch(t){case e.X:return this.x;case e.Y:return this.y;case e.Z:return this.getZ()}throw new m(\"Invalid ordinate index: \"+t)}},{key:\"equals3D\",value:function(t){return this.x===t.x&&this.y===t.y&&(this.getZ()===t.getZ()||A.isNaN(this.getZ())&&A.isNaN(t.getZ()))}},{key:\"equals\",value:function(t){return t instanceof e&&this.equals2D(t)}},{key:\"equalInZ\",value:function(t,e){return b.equalsWithTolerance(this.getZ(),t.getZ(),e)}},{key:\"setX\",value:function(t){this.x=t}},{key:\"compareTo\",value:function(t){var e=t;return this.x<e.x?-1:this.x>e.x?1:this.y<e.y?-1:this.y>e.y?1:0}},{key:\"getX\",value:function(){return this.x}},{key:\"setZ\",value:function(t){this.z=t}},{key:\"clone\",value:function(){try{return null}catch(t){if(t instanceof CloneNotSupportedException)return G.shouldNeverReachHere(\"this shouldn't happen because this class is Cloneable\"),null;throw t}}},{key:\"copy\",value:function(){return new e(this)}},{key:\"toString\",value:function(){return\"(\"+this.x+\", \"+this.y+\", \"+this.getZ()+\")\"}},{key:\"distance3D\",value:function(t){var e=this.x-t.x,n=this.y-t.y,i=this.getZ()-t.getZ();return Math.sqrt(e*e+n*n+i*i)}},{key:\"getY\",value:function(){return this.y}},{key:\"setY\",value:function(t){this.y=t}},{key:\"distance\",value:function(t){var e=this.x-t.x,n=this.y-t.y;return Math.sqrt(e*e+n*n)}},{key:\"hashCode\",value:function(){var t=17;return t=37*(t=37*t+e.hashCode(this.x))+e.hashCode(this.y)}},{key:\"setCoordinate\",value:function(t){this.x=t.x,this.y=t.y,this.z=t.getZ()}},{key:\"interfaces_\",get:function(){return[x,I,E]}}],[{key:\"constructor_\",value:function(){if(this.x=null,this.y=null,this.z=null,0===arguments.length)e.constructor_.call(this,0,0);else if(1===arguments.length){var t=arguments[0];e.constructor_.call(this,t.x,t.y,t.getZ())}else if(2===arguments.length){var n=arguments[0],i=arguments[1];e.constructor_.call(this,n,i,e.NULL_ORDINATE)}else if(3===arguments.length){var r=arguments[0],s=arguments[1],a=arguments[2];this.x=r,this.y=s,this.z=a}}},{key:\"hashCode\",value:function(t){return Y[0]=t,z[0]^z[1]}}]),e}(),B=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"compare\",value:function(t,n){var i=e.compare(t.x,n.x);if(0!==i)return i;var r=e.compare(t.y,n.y);return 0!==r?r:this._dimensionsToTest<=2?0:e.compare(t.getZ(),n.getZ())}},{key:\"interfaces_\",get:function(){return[P]}}],[{key:\"constructor_\",value:function(){if(this._dimensionsToTest=2,0===arguments.length)e.constructor_.call(this,2);else if(1===arguments.length){var t=arguments[0];if(2!==t&&3!==t)throw new m(\"only 2 or 3 dimensions may be specified\");this._dimensionsToTest=t}}},{key:\"compare\",value:function(t,e){return t<e?-1:t>e?1:A.isNaN(t)?A.isNaN(e)?0:-1:A.isNaN(e)?1:0}}]),e}();X.DimensionalComparator=B,X.NULL_ORDINATE=A.NaN,X.X=0,X.Y=1,X.Z=2,X.M=3;var U=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"getArea\",value:function(){return this.getWidth()*this.getHeight()}},{key:\"equals\",value:function(t){if(!(t instanceof e))return!1;var n=t;return this.isNull()?n.isNull():this._maxx===n.getMaxX()&&this._maxy===n.getMaxY()&&this._minx===n.getMinX()&&this._miny===n.getMinY()}},{key:\"intersection\",value:function(t){if(this.isNull()||t.isNull()||!this.intersects(t))return new e;var n=this._minx>t._minx?this._minx:t._minx,i=this._miny>t._miny?this._miny:t._miny;return new e(n,this._maxx<t._maxx?this._maxx:t._maxx,i,this._maxy<t._maxy?this._maxy:t._maxy)}},{key:\"isNull\",value:function(){return this._maxx<this._minx}},{key:\"getMaxX\",value:function(){return this._maxx}},{key:\"covers\",value:function(){if(1===arguments.length){if(arguments[0]instanceof X){var t=arguments[0];return this.covers(t.x,t.y)}if(arguments[0]instanceof e){var n=arguments[0];return!this.isNull()&&!n.isNull()&&(n.getMinX()>=this._minx&&n.getMaxX()<=this._maxx&&n.getMinY()>=this._miny&&n.getMaxY()<=this._maxy)}}else if(2===arguments.length){var i=arguments[0],r=arguments[1];return!this.isNull()&&(i>=this._minx&&i<=this._maxx&&r>=this._miny&&r<=this._maxy)}}},{key:\"intersects\",value:function(){if(1===arguments.length){if(arguments[0]instanceof e){var t=arguments[0];return!this.isNull()&&!t.isNull()&&!(t._minx>this._maxx||t._maxx<this._minx||t._miny>this._maxy||t._maxy<this._miny)}if(arguments[0]instanceof X){var n=arguments[0];return this.intersects(n.x,n.y)}}else if(2===arguments.length){if(arguments[0]instanceof X&&arguments[1]instanceof X){var i=arguments[0],r=arguments[1];if(this.isNull())return!1;var s=i.x<r.x?i.x:r.x;if(s>this._maxx)return!1;var a=i.x>r.x?i.x:r.x;if(a<this._minx)return!1;var o=i.y<r.y?i.y:r.y;if(o>this._maxy)return!1;var u=i.y>r.y?i.y:r.y;return!(u<this._miny)}if(\"number\"==typeof arguments[0]&&\"number\"==typeof arguments[1]){var l=arguments[0],h=arguments[1];return!this.isNull()&&!(l>this._maxx||l<this._minx||h>this._maxy||h<this._miny)}}}},{key:\"getMinY\",value:function(){return this._miny}},{key:\"getDiameter\",value:function(){if(this.isNull())return 0;var t=this.getWidth(),e=this.getHeight();return Math.sqrt(t*t+e*e)}},{key:\"getMinX\",value:function(){return this._minx}},{key:\"expandToInclude\",value:function(){if(1===arguments.length){if(arguments[0]instanceof X){var t=arguments[0];this.expandToInclude(t.x,t.y)}else if(arguments[0]instanceof e){var n=arguments[0];if(n.isNull())return null;this.isNull()?(this._minx=n.getMinX(),this._maxx=n.getMaxX(),this._miny=n.getMinY(),this._maxy=n.getMaxY()):(n._minx<this._minx&&(this._minx=n._minx),n._maxx>this._maxx&&(this._maxx=n._maxx),n._miny<this._miny&&(this._miny=n._miny),n._maxy>this._maxy&&(this._maxy=n._maxy))}}else if(2===arguments.length){var i=arguments[0],r=arguments[1];this.isNull()?(this._minx=i,this._maxx=i,this._miny=r,this._maxy=r):(i<this._minx&&(this._minx=i),i>this._maxx&&(this._maxx=i),r<this._miny&&(this._miny=r),r>this._maxy&&(this._maxy=r))}}},{key:\"minExtent\",value:function(){if(this.isNull())return 0;var t=this.getWidth(),e=this.getHeight();return t<e?t:e}},{key:\"getWidth\",value:function(){return this.isNull()?0:this._maxx-this._minx}},{key:\"compareTo\",value:function(t){var e=t;return this.isNull()?e.isNull()?0:-1:e.isNull()?1:this._minx<e._minx?-1:this._minx>e._minx?1:this._miny<e._miny?-1:this._miny>e._miny?1:this._maxx<e._maxx?-1:this._maxx>e._maxx?1:this._maxy<e._maxy?-1:this._maxy>e._maxy?1:0}},{key:\"translate\",value:function(t,e){if(this.isNull())return null;this.init(this.getMinX()+t,this.getMaxX()+t,this.getMinY()+e,this.getMaxY()+e)}},{key:\"copy\",value:function(){return new e(this)}},{key:\"toString\",value:function(){return\"Env[\"+this._minx+\" : \"+this._maxx+\", \"+this._miny+\" : \"+this._maxy+\"]\"}},{key:\"setToNull\",value:function(){this._minx=0,this._maxx=-1,this._miny=0,this._maxy=-1}},{key:\"disjoint\",value:function(t){return!(!this.isNull()&&!t.isNull())||(t._minx>this._maxx||t._maxx<this._minx||t._miny>this._maxy||t._maxy<this._miny)}},{key:\"getHeight\",value:function(){return this.isNull()?0:this._maxy-this._miny}},{key:\"maxExtent\",value:function(){if(this.isNull())return 0;var t=this.getWidth(),e=this.getHeight();return t>e?t:e}},{key:\"expandBy\",value:function(){if(1===arguments.length){var t=arguments[0];this.expandBy(t,t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];if(this.isNull())return null;this._minx-=e,this._maxx+=e,this._miny-=n,this._maxy+=n,(this._minx>this._maxx||this._miny>this._maxy)&&this.setToNull()}}},{key:\"contains\",value:function(){if(1===arguments.length){if(arguments[0]instanceof e){var t=arguments[0];return this.covers(t)}if(arguments[0]instanceof X){var n=arguments[0];return this.covers(n)}}else if(2===arguments.length){var i=arguments[0],r=arguments[1];return this.covers(i,r)}}},{key:\"centre\",value:function(){return this.isNull()?null:new X((this.getMinX()+this.getMaxX())/2,(this.getMinY()+this.getMaxY())/2)}},{key:\"init\",value:function(){if(0===arguments.length)this.setToNull();else if(1===arguments.length){if(arguments[0]instanceof X){var t=arguments[0];this.init(t.x,t.x,t.y,t.y)}else if(arguments[0]instanceof e){var n=arguments[0];this._minx=n._minx,this._maxx=n._maxx,this._miny=n._miny,this._maxy=n._maxy}}else if(2===arguments.length){var i=arguments[0],r=arguments[1];this.init(i.x,r.x,i.y,r.y)}else if(4===arguments.length){var s=arguments[0],a=arguments[1],o=arguments[2],u=arguments[3];s<a?(this._minx=s,this._maxx=a):(this._minx=a,this._maxx=s),o<u?(this._miny=o,this._maxy=u):(this._miny=u,this._maxy=o)}}},{key:\"getMaxY\",value:function(){return this._maxy}},{key:\"distance\",value:function(t){if(this.intersects(t))return 0;var e=0;this._maxx<t._minx?e=t._minx-this._maxx:this._minx>t._maxx&&(e=this._minx-t._maxx);var n=0;return this._maxy<t._miny?n=t._miny-this._maxy:this._miny>t._maxy&&(n=this._miny-t._maxy),0===e?n:0===n?e:Math.sqrt(e*e+n*n)}},{key:\"hashCode\",value:function(){var t=17;return t=37*(t=37*(t=37*(t=37*t+X.hashCode(this._minx))+X.hashCode(this._maxx))+X.hashCode(this._miny))+X.hashCode(this._maxy)}},{key:\"interfaces_\",get:function(){return[x,E]}}],[{key:\"constructor_\",value:function(){if(this._minx=null,this._maxx=null,this._miny=null,this._maxy=null,0===arguments.length)this.init();else if(1===arguments.length){if(arguments[0]instanceof X){var t=arguments[0];this.init(t.x,t.x,t.y,t.y)}else if(arguments[0]instanceof e){var n=arguments[0];this.init(n)}}else if(2===arguments.length){var i=arguments[0],r=arguments[1];this.init(i.x,r.x,i.y,r.y)}else if(4===arguments.length){var s=arguments[0],a=arguments[1],o=arguments[2],u=arguments[3];this.init(s,a,o,u)}}},{key:\"intersects\",value:function(){if(3===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2];return n.x>=(t.x<e.x?t.x:e.x)&&n.x<=(t.x>e.x?t.x:e.x)&&n.y>=(t.y<e.y?t.y:e.y)&&n.y<=(t.y>e.y?t.y:e.y)}if(4===arguments.length){var i=arguments[0],r=arguments[1],s=arguments[2],a=arguments[3],o=Math.min(s.x,a.x),u=Math.max(s.x,a.x),l=Math.min(i.x,r.x),h=Math.max(i.x,r.x);return!(l>u)&&(!(h<o)&&(o=Math.min(s.y,a.y),u=Math.max(s.y,a.y),l=Math.min(i.y,r.y),h=Math.max(i.y,r.y),!(l>u)&&!(h<o)))}}}]),e}(),V=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"isGeometryCollection\",value:function(){return this.getTypeCode()===e.TYPECODE_GEOMETRYCOLLECTION}},{key:\"getFactory\",value:function(){return this._factory}},{key:\"getGeometryN\",value:function(t){return this}},{key:\"getArea\",value:function(){return 0}},{key:\"isRectangle\",value:function(){return!1}},{key:\"equalsExact\",value:function(t){return this===t||this.equalsExact(t,0)}},{key:\"geometryChanged\",value:function(){this.apply(e.geometryChangedFilter)}},{key:\"geometryChangedAction\",value:function(){this._envelope=null}},{key:\"equalsNorm\",value:function(t){return null!==t&&this.norm().equalsExact(t.norm())}},{key:\"getLength\",value:function(){return 0}},{key:\"getNumGeometries\",value:function(){return 1}},{key:\"compareTo\",value:function(){var t;if(1===arguments.length){var e=arguments[0];return t=e,this.getTypeCode()!==t.getTypeCode()?this.getTypeCode()-t.getTypeCode():this.isEmpty()&&t.isEmpty()?0:this.isEmpty()?-1:t.isEmpty()?1:this.compareToSameClass(e)}if(2===arguments.length){var n=arguments[0],i=arguments[1];return t=n,this.getTypeCode()!==t.getTypeCode()?this.getTypeCode()-t.getTypeCode():this.isEmpty()&&t.isEmpty()?0:this.isEmpty()?-1:t.isEmpty()?1:this.compareToSameClass(n,i)}}},{key:\"getUserData\",value:function(){return this._userData}},{key:\"getSRID\",value:function(){return this._SRID}},{key:\"getEnvelope\",value:function(){return this.getFactory().toGeometry(this.getEnvelopeInternal())}},{key:\"checkNotGeometryCollection\",value:function(t){if(t.getTypeCode()===e.TYPECODE_GEOMETRYCOLLECTION)throw new m(\"This method does not support GeometryCollection arguments\")}},{key:\"equal\",value:function(t,e,n){return 0===n?t.equals(e):t.distance(e)<=n}},{key:\"norm\",value:function(){var t=this.copy();return t.normalize(),t}},{key:\"reverse\",value:function(){var t=this.reverseInternal();return null!=this.envelope&&(t.envelope=this.envelope.copy()),t.setSRID(this.getSRID()),t}},{key:\"copy\",value:function(){var t=this.copyInternal();return t.envelope=null==this._envelope?null:this._envelope.copy(),t._SRID=this._SRID,t._userData=this._userData,t}},{key:\"getPrecisionModel\",value:function(){return this._factory.getPrecisionModel()}},{key:\"getEnvelopeInternal\",value:function(){return null===this._envelope&&(this._envelope=this.computeEnvelopeInternal()),new U(this._envelope)}},{key:\"setSRID\",value:function(t){this._SRID=t}},{key:\"setUserData\",value:function(t){this._userData=t}},{key:\"compare\",value:function(t,e){for(var n=t.iterator(),i=e.iterator();n.hasNext()&&i.hasNext();){var r=n.next(),s=i.next(),a=r.compareTo(s);if(0!==a)return a}return n.hasNext()?1:i.hasNext()?-1:0}},{key:\"hashCode\",value:function(){return this.getEnvelopeInternal().hashCode()}},{key:\"isEquivalentClass\",value:function(t){return this.getClass()===t.getClass()}},{key:\"isGeometryCollectionOrDerived\",value:function(){return this.getTypeCode()===e.TYPECODE_GEOMETRYCOLLECTION||this.getTypeCode()===e.TYPECODE_MULTIPOINT||this.getTypeCode()===e.TYPECODE_MULTILINESTRING||this.getTypeCode()===e.TYPECODE_MULTIPOLYGON}},{key:\"interfaces_\",get:function(){return[I,x,E]}},{key:\"getClass\",value:function(){return e}}],[{key:\"hasNonEmptyElements\",value:function(t){for(var e=0;e<t.length;e++)if(!t[e].isEmpty())return!0;return!1}},{key:\"hasNullElements\",value:function(t){for(var e=0;e<t.length;e++)if(null===t[e])return!0;return!1}}]),e}();V.constructor_=function(t){t&&(this._envelope=null,this._userData=null,this._factory=t,this._SRID=t.getSRID())},V.TYPECODE_POINT=0,V.TYPECODE_MULTIPOINT=1,V.TYPECODE_LINESTRING=2,V.TYPECODE_LINEARRING=3,V.TYPECODE_MULTILINESTRING=4,V.TYPECODE_POLYGON=5,V.TYPECODE_MULTIPOLYGON=6,V.TYPECODE_GEOMETRYCOLLECTION=7,V.TYPENAME_POINT=\"Point\",V.TYPENAME_MULTIPOINT=\"MultiPoint\",V.TYPENAME_LINESTRING=\"LineString\",V.TYPENAME_LINEARRING=\"LinearRing\",V.TYPENAME_MULTILINESTRING=\"MultiLineString\",V.TYPENAME_POLYGON=\"Polygon\",V.TYPENAME_MULTIPOLYGON=\"MultiPolygon\",V.TYPENAME_GEOMETRYCOLLECTION=\"GeometryCollection\",V.geometryChangedFilter={get interfaces_(){return[k]},filter:function(t){t.geometryChangedAction()}};var H=function(){function e(){t(this,e)}return n(e,null,[{key:\"toLocationSymbol\",value:function(t){switch(t){case e.EXTERIOR:return\"e\";case e.BOUNDARY:return\"b\";case e.INTERIOR:return\"i\";case e.NONE:return\"-\"}throw new m(\"Unknown location value: \"+t)}}]),e}();H.INTERIOR=0,H.BOUNDARY=1,H.EXTERIOR=2,H.NONE=-1;var Z=function(){function e(){t(this,e)}return n(e,[{key:\"add\",value:function(){}},{key:\"addAll\",value:function(){}},{key:\"isEmpty\",value:function(){}},{key:\"iterator\",value:function(){}},{key:\"size\",value:function(){}},{key:\"toArray\",value:function(){}},{key:\"remove\",value:function(){}}]),e}(),j=function(e){i(r,e);var n=c(r);function r(e){var i;return t(this,r),(i=n.call(this,e)).name=Object.keys({NoSuchElementException:r})[0],i}return r}(p),W=function(e){i(r,e);var n=c(r);function r(e){var i;return t(this,r),(i=n.call(this,e)).name=Object.keys({UnsupportedOperationException:r})[0],i}return r}(p),K=function(e){i(s,e);var r=c(s);function s(){return t(this,s),r.apply(this,arguments)}return n(s,[{key:\"contains\",value:function(){}}]),s}(Z),J=function(e,r){i(a,e);var s=c(a);function a(e){var n;return t(this,a),(n=s.call(this)).map=new Map,e instanceof Z&&n.addAll(e),n}return n(a,[{key:\"contains\",value:function(t){var e=t.hashCode?t.hashCode():t;return!!this.map.has(e)}},{key:\"add\",value:function(t){var e=t.hashCode?t.hashCode():t;return!this.map.has(e)&&!!this.map.set(e,t)}},{key:\"addAll\",value:function(t){var e,n=d(t);try{for(n.s();!(e=n.n()).done;){var i=e.value;this.add(i)}}catch(t){n.e(t)}finally{n.f()}return!0}},{key:\"remove\",value:function(){throw new W}},{key:\"size\",value:function(){return this.map.size}},{key:\"isEmpty\",value:function(){return 0===this.map.size}},{key:\"toArray\",value:function(){return Array.from(this.map.values())}},{key:\"iterator\",value:function(){return new Q(this.map)}},{key:r,value:function(){return this.map}}]),a}(K,Symbol.iterator),Q=function(){function e(n){t(this,e),this.iterator=n.values();var i=this.iterator.next(),r=i.done,s=i.value;this.done=r,this.value=s}return n(e,[{key:\"next\",value:function(){if(this.done)throw new j;var t=this.value,e=this.iterator.next(),n=e.done,i=e.value;return this.done=n,this.value=i,t}},{key:\"hasNext\",value:function(){return!this.done}},{key:\"remove\",value:function(){throw new W}}]),e}(),$=function(){function e(){t(this,e)}return n(e,null,[{key:\"opposite\",value:function(t){return t===e.LEFT?e.RIGHT:t===e.RIGHT?e.LEFT:t}}]),e}();$.ON=0,$.LEFT=1,$.RIGHT=2;var tt=function(e){i(r,e);var n=c(r);function r(e){var i;return t(this,r),(i=n.call(this,e)).name=Object.keys({EmptyStackException:r})[0],i}return r}(p),et=function(e){i(r,e);var n=c(r);function r(e){var i;return t(this,r),(i=n.call(this,e)).name=Object.keys({IndexOutOfBoundsException:r})[0],i}return r}(p),nt=function(e){i(s,e);var r=c(s);function s(){return t(this,s),r.apply(this,arguments)}return n(s,[{key:\"get\",value:function(){}},{key:\"set\",value:function(){}},{key:\"isEmpty\",value:function(){}}]),s}(Z),it=function(e){i(s,e);var r=c(s);function s(){var e;return t(this,s),(e=r.call(this)).array=[],e}return n(s,[{key:\"add\",value:function(t){return this.array.push(t),!0}},{key:\"get\",value:function(t){if(t<0||t>=this.size())throw new et;return this.array[t]}},{key:\"push\",value:function(t){return this.array.push(t),t}},{key:\"pop\",value:function(){if(0===this.array.length)throw new tt;return this.array.pop()}},{key:\"peek\",value:function(){if(0===this.array.length)throw new tt;return this.array[this.array.length-1]}},{key:\"empty\",value:function(){return 0===this.array.length}},{key:\"isEmpty\",value:function(){return this.empty()}},{key:\"search\",value:function(t){return this.array.indexOf(t)}},{key:\"size\",value:function(){return this.array.length}},{key:\"toArray\",value:function(){return this.array.slice()}}]),s}(nt);function rt(t,e){return t.interfaces_&&t.interfaces_.indexOf(e)>-1}var st=function(){function e(n){t(this,e),this.str=n}return n(e,[{key:\"append\",value:function(t){this.str+=t}},{key:\"setCharAt\",value:function(t,e){this.str=this.str.substr(0,t)+e+this.str.substr(t+1)}},{key:\"toString\",value:function(){return this.str}}]),e}(),at=function(){function e(n){t(this,e),this.value=n}return n(e,[{key:\"intValue\",value:function(){return this.value}},{key:\"compareTo\",value:function(t){return this.value<t?-1:this.value>t?1:0}}],[{key:\"compare\",value:function(t,e){return t<e?-1:t>e?1:0}},{key:\"isNan\",value:function(t){return Number.isNaN(t)}},{key:\"valueOf\",value:function(t){return new e(t)}}]),e}(),ot=function(){function e(){t(this,e)}return n(e,null,[{key:\"isWhitespace\",value:function(t){return t<=32&&t>=0||127===t}},{key:\"toUpperCase\",value:function(t){return t.toUpperCase()}}]),e}(),ut=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"le\",value:function(t){return this._hi<t._hi||this._hi===t._hi&&this._lo<=t._lo}},{key:\"extractSignificantDigits\",value:function(t,n){var i=this.abs(),r=e.magnitude(i._hi),s=e.TEN.pow(r);(i=i.divide(s)).gt(e.TEN)?(i=i.divide(e.TEN),r+=1):i.lt(e.ONE)&&(i=i.multiply(e.TEN),r-=1);for(var a=r+1,o=new st,u=e.MAX_PRINT_DIGITS-1,l=0;l<=u;l++){t&&l===a&&o.append(\".\");var h=Math.trunc(i._hi);if(h<0)break;var c=!1,f=0;h>9?(c=!0,f=\"9\"):f=\"0\"+h,o.append(f),i=i.subtract(e.valueOf(h)).multiply(e.TEN),c&&i.selfAdd(e.TEN);var v=!0,g=e.magnitude(i._hi);if(g<0&&Math.abs(g)>=u-l&&(v=!1),!v)break}return n[0]=r,o.toString()}},{key:\"sqr\",value:function(){return this.multiply(this)}},{key:\"doubleValue\",value:function(){return this._hi+this._lo}},{key:\"subtract\",value:function(){if(arguments[0]instanceof e){var t=arguments[0];return this.add(t.negate())}if(\"number\"==typeof arguments[0]){var n=arguments[0];return this.add(-n)}}},{key:\"equals\",value:function(){if(1===arguments.length&&arguments[0]instanceof e){var t=arguments[0];return this._hi===t._hi&&this._lo===t._lo}}},{key:\"isZero\",value:function(){return 0===this._hi&&0===this._lo}},{key:\"selfSubtract\",value:function(){if(arguments[0]instanceof e){var t=arguments[0];return this.isNaN()?this:this.selfAdd(-t._hi,-t._lo)}if(\"number\"==typeof arguments[0]){var n=arguments[0];return this.isNaN()?this:this.selfAdd(-n,0)}}},{key:\"getSpecialNumberString\",value:function(){return this.isZero()?\"0.0\":this.isNaN()?\"NaN \":null}},{key:\"min\",value:function(t){return this.le(t)?this:t}},{key:\"selfDivide\",value:function(){if(1===arguments.length){if(arguments[0]instanceof e){var t=arguments[0];return this.selfDivide(t._hi,t._lo)}if(\"number\"==typeof arguments[0]){var n=arguments[0];return this.selfDivide(n,0)}}else if(2===arguments.length){var i=arguments[0],r=arguments[1],s=null,a=null,o=null,u=null,l=null,h=null,c=null,f=null;return l=this._hi/i,f=(s=(h=e.SPLIT*l)-(s=h-l))*(o=(f=e.SPLIT*i)-(o=f-i))-(c=l*i)+s*(u=i-o)+(a=l-s)*o+a*u,f=l+(h=(this._hi-c-f+this._lo-l*r)/i),this._hi=f,this._lo=l-f+h,this}}},{key:\"dump\",value:function(){return\"DD<\"+this._hi+\", \"+this._lo+\">\"}},{key:\"divide\",value:function(){if(arguments[0]instanceof e){var t=arguments[0],n=null,i=null,r=null,s=null,a=null,o=null,u=null,l=null;i=(a=this._hi/t._hi)-(n=(o=e.SPLIT*a)-(n=o-a)),l=n*(r=(l=e.SPLIT*t._hi)-(r=l-t._hi))-(u=a*t._hi)+n*(s=t._hi-r)+i*r+i*s;var h=l=a+(o=(this._hi-u-l+this._lo-a*t._lo)/t._hi),c=a-l+o;return new e(h,c)}if(\"number\"==typeof arguments[0]){var f=arguments[0];return A.isNaN(f)?e.createNaN():e.copy(this).selfDivide(f,0)}}},{key:\"ge\",value:function(t){return this._hi>t._hi||this._hi===t._hi&&this._lo>=t._lo}},{key:\"pow\",value:function(t){if(0===t)return e.valueOf(1);var n=new e(this),i=e.valueOf(1),r=Math.abs(t);if(r>1)for(;r>0;)r%2==1&&i.selfMultiply(n),(r/=2)>0&&(n=n.sqr());else i=n;return t<0?i.reciprocal():i}},{key:\"ceil\",value:function(){if(this.isNaN())return e.NaN;var t=Math.ceil(this._hi),n=0;return t===this._hi&&(n=Math.ceil(this._lo)),new e(t,n)}},{key:\"compareTo\",value:function(t){var e=t;return this._hi<e._hi?-1:this._hi>e._hi?1:this._lo<e._lo?-1:this._lo>e._lo?1:0}},{key:\"rint\",value:function(){return this.isNaN()?this:this.add(.5).floor()}},{key:\"setValue\",value:function(){if(arguments[0]instanceof e){var t=arguments[0];return this.init(t),this}if(\"number\"==typeof arguments[0]){var n=arguments[0];return this.init(n),this}}},{key:\"max\",value:function(t){return this.ge(t)?this:t}},{key:\"sqrt\",value:function(){if(this.isZero())return e.valueOf(0);if(this.isNegative())return e.NaN;var t=1/Math.sqrt(this._hi),n=this._hi*t,i=e.valueOf(n),r=this.subtract(i.sqr())._hi*(.5*t);return i.add(r)}},{key:\"selfAdd\",value:function(){if(1===arguments.length){if(arguments[0]instanceof e){var t=arguments[0];return this.selfAdd(t._hi,t._lo)}if(\"number\"==typeof arguments[0]){var n=arguments[0],i=null,r=null,s=null,a=null,o=null,u=null;return a=(s=this._hi+n)-(o=s-this._hi),r=(u=(a=n-o+(this._hi-a))+this._lo)+(s-(i=s+u)),this._hi=i+r,this._lo=r+(i-this._hi),this}}else if(2===arguments.length){var l=arguments[0],h=arguments[1],c=null,f=null,v=null,g=null,y=null,d=null,_=null;g=this._hi+l,f=this._lo+h,y=g-(d=g-this._hi),v=f-(_=f-this._lo);var p=(c=g+(d=(y=l-d+(this._hi-y))+f))+(d=(v=h-_+(this._lo-v))+(d+(g-c))),m=d+(c-p);return this._hi=p,this._lo=m,this}}},{key:\"selfMultiply\",value:function(){if(1===arguments.length){if(arguments[0]instanceof e){var t=arguments[0];return this.selfMultiply(t._hi,t._lo)}if(\"number\"==typeof arguments[0]){var n=arguments[0];return this.selfMultiply(n,0)}}else if(2===arguments.length){var i=arguments[0],r=arguments[1],s=null,a=null,o=null,u=null,l=null,h=null;s=(l=e.SPLIT*this._hi)-this._hi,h=e.SPLIT*i,s=l-s,a=this._hi-s,o=h-i;var c=(l=this._hi*i)+(h=s*(o=h-o)-l+s*(u=i-o)+a*o+a*u+(this._hi*r+this._lo*i)),f=h+(s=l-c);return this._hi=c,this._lo=f,this}}},{key:\"selfSqr\",value:function(){return this.selfMultiply(this)}},{key:\"floor\",value:function(){if(this.isNaN())return e.NaN;var t=Math.floor(this._hi),n=0;return t===this._hi&&(n=Math.floor(this._lo)),new e(t,n)}},{key:\"negate\",value:function(){return this.isNaN()?this:new e(-this._hi,-this._lo)}},{key:\"clone\",value:function(){try{return null}catch(t){if(t instanceof CloneNotSupportedException)return null;throw t}}},{key:\"multiply\",value:function(){if(arguments[0]instanceof e){var t=arguments[0];return t.isNaN()?e.createNaN():e.copy(this).selfMultiply(t)}if(\"number\"==typeof arguments[0]){var n=arguments[0];return A.isNaN(n)?e.createNaN():e.copy(this).selfMultiply(n,0)}}},{key:\"isNaN\",value:function(){return A.isNaN(this._hi)}},{key:\"intValue\",value:function(){return Math.trunc(this._hi)}},{key:\"toString\",value:function(){var t=e.magnitude(this._hi);return t>=-3&&t<=20?this.toStandardNotation():this.toSciNotation()}},{key:\"toStandardNotation\",value:function(){var t=this.getSpecialNumberString();if(null!==t)return t;var n=new Array(1).fill(null),i=this.extractSignificantDigits(!0,n),r=n[0]+1,s=i;if(\".\"===i.charAt(0))s=\"0\"+i;else if(r<0)s=\"0.\"+e.stringOfChar(\"0\",-r)+i;else if(-1===i.indexOf(\".\")){var a=r-i.length;s=i+e.stringOfChar(\"0\",a)+\".0\"}return this.isNegative()?\"-\"+s:s}},{key:\"reciprocal\",value:function(){var t,n,i,r,s=null,a=null,o=null,u=null;t=(i=1/this._hi)-(s=(o=e.SPLIT*i)-(s=o-i)),a=(u=e.SPLIT*this._hi)-this._hi;var l=i+(o=(1-(r=i*this._hi)-(u=s*(a=u-a)-r+s*(n=this._hi-a)+t*a+t*n)-i*this._lo)/this._hi);return new e(l,i-l+o)}},{key:\"toSciNotation\",value:function(){if(this.isZero())return e.SCI_NOT_ZERO;var t=this.getSpecialNumberString();if(null!==t)return t;var n=new Array(1).fill(null),i=this.extractSignificantDigits(!1,n),r=e.SCI_NOT_EXPONENT_CHAR+n[0];if(\"0\"===i.charAt(0))throw new IllegalStateException(\"Found leading zero: \"+i);var s=\"\";i.length>1&&(s=i.substring(1));var a=i.charAt(0)+\".\"+s;return this.isNegative()?\"-\"+a+r:a+r}},{key:\"abs\",value:function(){return this.isNaN()?e.NaN:this.isNegative()?this.negate():new e(this)}},{key:\"isPositive\",value:function(){return this._hi>0||0===this._hi&&this._lo>0}},{key:\"lt\",value:function(t){return this._hi<t._hi||this._hi===t._hi&&this._lo<t._lo}},{key:\"add\",value:function(){if(arguments[0]instanceof e){var t=arguments[0];return e.copy(this).selfAdd(t)}if(\"number\"==typeof arguments[0]){var n=arguments[0];return e.copy(this).selfAdd(n)}}},{key:\"init\",value:function(){if(1===arguments.length){if(\"number\"==typeof arguments[0]){var t=arguments[0];this._hi=t,this._lo=0}else if(arguments[0]instanceof e){var n=arguments[0];this._hi=n._hi,this._lo=n._lo}}else if(2===arguments.length){var i=arguments[0],r=arguments[1];this._hi=i,this._lo=r}}},{key:\"gt\",value:function(t){return this._hi>t._hi||this._hi===t._hi&&this._lo>t._lo}},{key:\"isNegative\",value:function(){return this._hi<0||0===this._hi&&this._lo<0}},{key:\"trunc\",value:function(){return this.isNaN()?e.NaN:this.isPositive()?this.floor():this.ceil()}},{key:\"signum\",value:function(){return this._hi>0?1:this._hi<0?-1:this._lo>0?1:this._lo<0?-1:0}},{key:\"interfaces_\",get:function(){return[E,x,I]}}],[{key:\"constructor_\",value:function(){if(this._hi=0,this._lo=0,0===arguments.length)this.init(0);else if(1===arguments.length){if(\"number\"==typeof arguments[0]){var t=arguments[0];this.init(t)}else if(arguments[0]instanceof e){var n=arguments[0];this.init(n)}else if(\"string\"==typeof arguments[0]){var i=arguments[0];e.constructor_.call(this,e.parse(i))}}else if(2===arguments.length){var r=arguments[0],s=arguments[1];this.init(r,s)}}},{key:\"determinant\",value:function(){if(\"number\"==typeof arguments[3]&&\"number\"==typeof arguments[2]&&\"number\"==typeof arguments[0]&&\"number\"==typeof arguments[1]){var t=arguments[0],n=arguments[1],i=arguments[2],r=arguments[3];return e.determinant(e.valueOf(t),e.valueOf(n),e.valueOf(i),e.valueOf(r))}if(arguments[3]instanceof e&&arguments[2]instanceof e&&arguments[0]instanceof e&&arguments[1]instanceof e){var s=arguments[0],a=arguments[1],o=arguments[2],u=arguments[3],l=s.multiply(u).selfSubtract(a.multiply(o));return l}}},{key:\"sqr\",value:function(t){return e.valueOf(t).selfMultiply(t)}},{key:\"valueOf\",value:function(){if(\"string\"==typeof arguments[0]){var t=arguments[0];return e.parse(t)}if(\"number\"==typeof arguments[0]){var n=arguments[0];return new e(n)}}},{key:\"sqrt\",value:function(t){return e.valueOf(t).sqrt()}},{key:\"parse\",value:function(t){for(var n=0,i=t.length;ot.isWhitespace(t.charAt(n));)n++;var r=!1;if(n<i){var s=t.charAt(n);\"-\"!==s&&\"+\"!==s||(n++,\"-\"===s&&(r=!0))}for(var a=new e,o=0,u=0,l=0,h=!1;!(n>=i);){var c=t.charAt(n);if(n++,ot.isDigit(c)){var f=c-\"0\";a.selfMultiply(e.TEN),a.selfAdd(f),o++}else{if(\".\"!==c){if(\"e\"===c||\"E\"===c){var v=t.substring(n);try{l=at.parseInt(v)}catch(e){throw e instanceof NumberFormatException?new NumberFormatException(\"Invalid exponent \"+v+\" in string \"+t):e}break}throw new NumberFormatException(\"Unexpected character '\"+c+\"' at position \"+n+\" in string \"+t)}u=o,h=!0}}var g=a;h||(u=o);var y=o-u-l;if(0===y)g=a;else if(y>0){var d=e.TEN.pow(y);g=a.divide(d)}else if(y<0){var _=e.TEN.pow(-y);g=a.multiply(_)}return r?g.negate():g}},{key:\"createNaN\",value:function(){return new e(A.NaN,A.NaN)}},{key:\"copy\",value:function(t){return new e(t)}},{key:\"magnitude\",value:function(t){var e=Math.abs(t),n=Math.log(e)/Math.log(10),i=Math.trunc(Math.floor(n));return 10*Math.pow(10,i)<=e&&(i+=1),i}},{key:\"stringOfChar\",value:function(t,e){for(var n=new st,i=0;i<e;i++)n.append(t);return n.toString()}}]),e}();ut.PI=new ut(3.141592653589793,12246467991473532e-32),ut.TWO_PI=new ut(6.283185307179586,24492935982947064e-32),ut.PI_2=new ut(1.5707963267948966,6123233995736766e-32),ut.E=new ut(2.718281828459045,14456468917292502e-32),ut.NaN=new ut(A.NaN,A.NaN),ut.EPS=123259516440783e-46,ut.SPLIT=134217729,ut.MAX_PRINT_DIGITS=32,ut.TEN=ut.valueOf(10),ut.ONE=ut.valueOf(1),ut.SCI_NOT_EXPONENT_CHAR=\"E\",ut.SCI_NOT_ZERO=\"0.0E0\";var lt=function(){function e(){t(this,e)}return n(e,null,[{key:\"orientationIndex\",value:function(t,n,i){var r=e.orientationIndexFilter(t,n,i);if(r<=1)return r;var s=ut.valueOf(n.x).selfAdd(-t.x),a=ut.valueOf(n.y).selfAdd(-t.y),o=ut.valueOf(i.x).selfAdd(-n.x),u=ut.valueOf(i.y).selfAdd(-n.y);return s.selfMultiply(u).selfSubtract(a.selfMultiply(o)).signum()}},{key:\"signOfDet2x2\",value:function(){if(arguments[3]instanceof ut&&arguments[2]instanceof ut&&arguments[0]instanceof ut&&arguments[1]instanceof ut){var t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3],r=t.multiply(i).selfSubtract(e.multiply(n));return r.signum()}if(\"number\"==typeof arguments[3]&&\"number\"==typeof arguments[2]&&\"number\"==typeof arguments[0]&&\"number\"==typeof arguments[1]){var s=arguments[0],a=arguments[1],o=arguments[2],u=arguments[3],l=ut.valueOf(s),h=ut.valueOf(a),c=ut.valueOf(o),f=ut.valueOf(u),v=l.multiply(f).selfSubtract(h.multiply(c));return v.signum()}}},{key:\"intersection\",value:function(t,e,n,i){var r=new ut(t.y).selfSubtract(e.y),s=new ut(e.x).selfSubtract(t.x),a=new ut(t.x).selfMultiply(e.y).selfSubtract(new ut(e.x).selfMultiply(t.y)),o=new ut(n.y).selfSubtract(i.y),u=new ut(i.x).selfSubtract(n.x),l=new ut(n.x).selfMultiply(i.y).selfSubtract(new ut(i.x).selfMultiply(n.y)),h=s.multiply(l).selfSubtract(u.multiply(a)),c=o.multiply(a).selfSubtract(r.multiply(l)),f=r.multiply(u).selfSubtract(o.multiply(s)),v=h.selfDivide(f).doubleValue(),g=c.selfDivide(f).doubleValue();return A.isNaN(v)||A.isInfinite(v)||A.isNaN(g)||A.isInfinite(g)?null:new X(v,g)}},{key:\"orientationIndexFilter\",value:function(t,n,i){var r=null,s=(t.x-i.x)*(n.y-i.y),a=(t.y-i.y)*(n.x-i.x),o=s-a;if(s>0){if(a<=0)return e.signum(o);r=s+a}else{if(!(s<0))return e.signum(o);if(a>=0)return e.signum(o);r=-s-a}var u=e.DP_SAFE_EPSILON*r;return o>=u||-o>=u?e.signum(o):2}},{key:\"signum\",value:function(t){return t>0?1:t<0?-1:0}}]),e}();lt.DP_SAFE_EPSILON=1e-15;var ht=function(){function e(){t(this,e)}return n(e,[{key:\"getM\",value:function(t){if(this.hasM()){var e=this.getDimension()-this.getMeasures();return this.getOrdinate(t,e)}return A.NaN}},{key:\"setOrdinate\",value:function(t,e,n){}},{key:\"getZ\",value:function(t){return this.hasZ()?this.getOrdinate(t,2):A.NaN}},{key:\"size\",value:function(){}},{key:\"getOrdinate\",value:function(t,e){}},{key:\"getCoordinate\",value:function(){}},{key:\"getCoordinateCopy\",value:function(t){}},{key:\"createCoordinate\",value:function(){}},{key:\"getDimension\",value:function(){}},{key:\"hasM\",value:function(){return this.getMeasures()>0}},{key:\"getX\",value:function(t){}},{key:\"hasZ\",value:function(){return this.getDimension()-this.getMeasures()>2}},{key:\"getMeasures\",value:function(){return 0}},{key:\"expandEnvelope\",value:function(t){}},{key:\"copy\",value:function(){}},{key:\"getY\",value:function(t){}},{key:\"toCoordinateArray\",value:function(){}},{key:\"interfaces_\",get:function(){return[I]}}]),e}();ht.X=0,ht.Y=1,ht.Z=2,ht.M=3;var ct=function(){function e(){t(this,e)}return n(e,null,[{key:\"index\",value:function(t,e,n){return lt.orientationIndex(t,e,n)}},{key:\"isCCW\",value:function(){if(arguments[0]instanceof Array){var t=arguments[0],n=t.length-1;if(n<3)throw new m(\"Ring has fewer than 4 points, so orientation cannot be determined\");for(var i=t[0],r=0,s=1;s<=n;s++){var a=t[s];a.y>i.y&&(i=a,r=s)}var o=r;do{(o-=1)<0&&(o=n)}while(t[o].equals2D(i)&&o!==r);var u=r;do{u=(u+1)%n}while(t[u].equals2D(i)&&u!==r);var l=t[o],h=t[u];if(l.equals2D(i)||h.equals2D(i)||l.equals2D(h))return!1;var c=e.index(l,i,h),f=null;return f=0===c?l.x>h.x:c>0,f}if(rt(arguments[0],ht)){var v=arguments[0],g=v.size()-1;if(g<3)throw new m(\"Ring has fewer than 4 points, so orientation cannot be determined\");for(var y=v.getCoordinate(0),d=0,_=1;_<=g;_++){var p=v.getCoordinate(_);p.y>y.y&&(y=p,d=_)}var k=null,x=d;do{(x-=1)<0&&(x=g),k=v.getCoordinate(x)}while(k.equals2D(y)&&x!==d);var I=null,E=d;do{E=(E+1)%g,I=v.getCoordinate(E)}while(I.equals2D(y)&&E!==d);if(k.equals2D(y)||I.equals2D(y)||k.equals2D(I))return!1;var N=e.index(k,y,I);return 0===N?k.x>I.x:N>0}}}]),e}();ct.CLOCKWISE=-1,ct.RIGHT=ct.CLOCKWISE,ct.COUNTERCLOCKWISE=1,ct.LEFT=ct.COUNTERCLOCKWISE,ct.COLLINEAR=0,ct.STRAIGHT=ct.COLLINEAR;var ft=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"getCoordinate\",value:function(){return this._minCoord}},{key:\"getRightmostSide\",value:function(t,e){var n=this.getRightmostSideOfSegment(t,e);return n<0&&(n=this.getRightmostSideOfSegment(t,e-1)),n<0&&(this._minCoord=null,this.checkForRightmostCoordinate(t)),n}},{key:\"findRightmostEdgeAtVertex\",value:function(){var t=this._minDe.getEdge().getCoordinates();G.isTrue(this._minIndex>0&&this._minIndex<t.length,\"rightmost point expected to be interior vertex of edge\");var e=t[this._minIndex-1],n=t[this._minIndex+1],i=ct.index(this._minCoord,n,e),r=!1;(e.y<this._minCoord.y&&n.y<this._minCoord.y&&i===ct.COUNTERCLOCKWISE||e.y>this._minCoord.y&&n.y>this._minCoord.y&&i===ct.CLOCKWISE)&&(r=!0),r&&(this._minIndex=this._minIndex-1)}},{key:\"getRightmostSideOfSegment\",value:function(t,e){var n=t.getEdge().getCoordinates();if(e<0||e+1>=n.length)return-1;if(n[e].y===n[e+1].y)return-1;var i=$.LEFT;return n[e].y<n[e+1].y&&(i=$.RIGHT),i}},{key:\"getEdge\",value:function(){return this._orientedDe}},{key:\"checkForRightmostCoordinate\",value:function(t){for(var e=t.getEdge().getCoordinates(),n=0;n<e.length-1;n++)(null===this._minCoord||e[n].x>this._minCoord.x)&&(this._minDe=t,this._minIndex=n,this._minCoord=e[n])}},{key:\"findRightmostEdgeAtNode\",value:function(){var t=this._minDe.getNode().getEdges();this._minDe=t.getRightmostEdge(),this._minDe.isForward()||(this._minDe=this._minDe.getSym(),this._minIndex=this._minDe.getEdge().getCoordinates().length-1)}},{key:\"findEdge\",value:function(t){for(var e=t.iterator();e.hasNext();){var n=e.next();n.isForward()&&this.checkForRightmostCoordinate(n)}G.isTrue(0!==this._minIndex||this._minCoord.equals(this._minDe.getCoordinate()),\"inconsistency in rightmost processing\"),0===this._minIndex?this.findRightmostEdgeAtNode():this.findRightmostEdgeAtVertex(),this._orientedDe=this._minDe,this.getRightmostSide(this._minDe,this._minIndex)===$.LEFT&&(this._orientedDe=this._minDe.getSym())}}],[{key:\"constructor_\",value:function(){this._minIndex=-1,this._minCoord=null,this._minDe=null,this._orientedDe=null}}]),e}(),vt=function(e){i(s,e);var r=c(s);function s(e,n){var i;return t(this,s),(i=r.call(this,n?e+\" [ \"+n+\" ]\":e)).pt=n?new X(n):void 0,i.name=Object.keys({TopologyException:s})[0],i}return n(s,[{key:\"getCoordinate\",value:function(){return this.pt}}]),s}(D),gt=function(){function e(){t(this,e),this.array=[]}return n(e,[{key:\"addLast\",value:function(t){this.array.push(t)}},{key:\"removeFirst\",value:function(){return this.array.shift()}},{key:\"isEmpty\",value:function(){return 0===this.array.length}}]),e}(),yt=function(e,r){i(a,e);var s=c(a);function a(e){var n;return t(this,a),(n=s.call(this)).array=[],e instanceof Z&&n.addAll(e),n}return n(a,[{key:\"interfaces_\",get:function(){return[nt,Z]}},{key:\"ensureCapacity\",value:function(){}},{key:\"add\",value:function(t){return 1===arguments.length?this.array.push(t):this.array.splice(arguments[0],0,arguments[1]),!0}},{key:\"clear\",value:function(){this.array=[]}},{key:\"addAll\",value:function(t){var e,n=d(t);try{for(n.s();!(e=n.n()).done;){var i=e.value;this.array.push(i)}}catch(t){n.e(t)}finally{n.f()}}},{key:\"set\",value:function(t,e){var n=this.array[t];return this.array[t]=e,n}},{key:\"iterator\",value:function(){return new dt(this)}},{key:\"get\",value:function(t){if(t<0||t>=this.size())throw new et;return this.array[t]}},{key:\"isEmpty\",value:function(){return 0===this.array.length}},{key:\"sort\",value:function(t){t?this.array.sort((function(e,n){return t.compare(e,n)})):this.array.sort()}},{key:\"size\",value:function(){return this.array.length}},{key:\"toArray\",value:function(){return this.array.slice()}},{key:\"remove\",value:function(t){for(var e=0,n=this.array.length;e<n;e++)if(this.array[e]===t)return!!this.array.splice(e,1);return!1}},{key:r,value:function(){return this.array.values()}}]),a}(nt,Symbol.iterator),dt=function(){function e(n){t(this,e),this.arrayList=n,this.position=0}return n(e,[{key:\"next\",value:function(){if(this.position===this.arrayList.size())throw new j;return this.arrayList.get(this.position++)}},{key:\"hasNext\",value:function(){return this.position<this.arrayList.size()}},{key:\"set\",value:function(t){return this.arrayList.set(this.position-1,t)}},{key:\"remove\",value:function(){this.arrayList.remove(this.arrayList.get(this.position))}}]),e}(),_t=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"clearVisitedEdges\",value:function(){for(var t=this._dirEdgeList.iterator();t.hasNext();){t.next().setVisited(!1)}}},{key:\"getRightmostCoordinate\",value:function(){return this._rightMostCoord}},{key:\"computeNodeDepth\",value:function(t){for(var e=null,n=t.getEdges().iterator();n.hasNext();){var i=n.next();if(i.isVisited()||i.getSym().isVisited()){e=i;break}}if(null===e)throw new vt(\"unable to find edge to compute depths at \"+t.getCoordinate());t.getEdges().computeDepths(e);for(var r=t.getEdges().iterator();r.hasNext();){var s=r.next();s.setVisited(!0),this.copySymDepths(s)}}},{key:\"computeDepth\",value:function(t){this.clearVisitedEdges();var e=this._finder.getEdge();e.getNode(),e.getLabel(),e.setEdgeDepths($.RIGHT,t),this.copySymDepths(e),this.computeDepths(e)}},{key:\"create\",value:function(t){this.addReachable(t),this._finder.findEdge(this._dirEdgeList),this._rightMostCoord=this._finder.getCoordinate()}},{key:\"findResultEdges\",value:function(){for(var t=this._dirEdgeList.iterator();t.hasNext();){var e=t.next();e.getDepth($.RIGHT)>=1&&e.getDepth($.LEFT)<=0&&!e.isInteriorAreaEdge()&&e.setInResult(!0)}}},{key:\"computeDepths\",value:function(t){var e=new J,n=new gt,i=t.getNode();for(n.addLast(i),e.add(i),t.setVisited(!0);!n.isEmpty();){var r=n.removeFirst();e.add(r),this.computeNodeDepth(r);for(var s=r.getEdges().iterator();s.hasNext();){var a=s.next().getSym();if(!a.isVisited()){var o=a.getNode();e.contains(o)||(n.addLast(o),e.add(o))}}}}},{key:\"compareTo\",value:function(t){var e=t;return this._rightMostCoord.x<e._rightMostCoord.x?-1:this._rightMostCoord.x>e._rightMostCoord.x?1:0}},{key:\"getEnvelope\",value:function(){if(null===this._env){for(var t=new U,e=this._dirEdgeList.iterator();e.hasNext();)for(var n=e.next().getEdge().getCoordinates(),i=0;i<n.length-1;i++)t.expandToInclude(n[i]);this._env=t}return this._env}},{key:\"addReachable\",value:function(t){var e=new it;for(e.add(t);!e.empty();){var n=e.pop();this.add(n,e)}}},{key:\"copySymDepths\",value:function(t){var e=t.getSym();e.setDepth($.LEFT,t.getDepth($.RIGHT)),e.setDepth($.RIGHT,t.getDepth($.LEFT))}},{key:\"add\",value:function(t,e){t.setVisited(!0),this._nodes.add(t);for(var n=t.getEdges().iterator();n.hasNext();){var i=n.next();this._dirEdgeList.add(i);var r=i.getSym().getNode();r.isVisited()||e.push(r)}}},{key:\"getNodes\",value:function(){return this._nodes}},{key:\"getDirectedEdges\",value:function(){return this._dirEdgeList}},{key:\"interfaces_\",get:function(){return[x]}}],[{key:\"constructor_\",value:function(){this._finder=null,this._dirEdgeList=new yt,this._nodes=new yt,this._rightMostCoord=null,this._env=null,this._finder=new ft}}]),e}(),pt=function(){function e(){t(this,e)}return n(e,null,[{key:\"intersection\",value:function(t,e,n,i){var r=t.x<e.x?t.x:e.x,s=t.y<e.y?t.y:e.y,a=t.x>e.x?t.x:e.x,o=t.y>e.y?t.y:e.y,u=n.x<i.x?n.x:i.x,l=n.y<i.y?n.y:i.y,h=n.x>i.x?n.x:i.x,c=n.y>i.y?n.y:i.y,f=((r>u?r:u)+(a<h?a:h))/2,v=((s>l?s:l)+(o<c?o:c))/2,g=t.x-f,y=t.y-v,d=e.x-f,_=e.y-v,p=n.x-f,m=n.y-v,k=i.x-f,x=i.y-v,I=y-_,E=d-g,N=g*_-d*y,T=m-x,S=k-p,L=p*x-k*m,C=I*S-T*E,R=(E*L-S*N)/C,w=(T*N-I*L)/C;return A.isNaN(R)||A.isInfinite(R)||A.isNaN(w)||A.isInfinite(w)?null:new X(R+f,w+v)}}]),e}(),mt=function(){function e(){t(this,e)}return n(e,null,[{key:\"arraycopy\",value:function(t,e,n,i,r){for(var s=0,a=e;a<e+r;a++)n[i+s]=t[a],s++}},{key:\"getProperty\",value:function(t){return{\"line.separator\":\"\\n\"}[t]}}]),e}(),kt=function(){function e(){t(this,e)}return n(e,null,[{key:\"log10\",value:function(t){var n=Math.log(t);return A.isInfinite(n)||A.isNaN(n)?n:n/e.LOG_10}},{key:\"min\",value:function(t,e,n,i){var r=t;return e<r&&(r=e),n<r&&(r=n),i<r&&(r=i),r}},{key:\"clamp\",value:function(){if(\"number\"==typeof arguments[2]&&\"number\"==typeof arguments[0]&&\"number\"==typeof arguments[1]){var t=arguments[0],e=arguments[1],n=arguments[2];return t<e?e:t>n?n:t}if(Number.isInteger(arguments[2])&&Number.isInteger(arguments[0])&&Number.isInteger(arguments[1])){var i=arguments[0],r=arguments[1],s=arguments[2];return i<r?r:i>s?s:i}}},{key:\"wrap\",value:function(t,e){return t<0?e- -t%e:t%e}},{key:\"max\",value:function(){if(3===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2],i=t;return e>i&&(i=e),n>i&&(i=n),i}if(4===arguments.length){var r=arguments[0],s=arguments[1],a=arguments[2],o=arguments[3],u=r;return s>u&&(u=s),a>u&&(u=a),o>u&&(u=o),u}}},{key:\"average\",value:function(t,e){return(t+e)/2}}]),e}();kt.LOG_10=Math.log(10);var xt=function(){function e(){t(this,e)}return n(e,null,[{key:\"segmentToSegment\",value:function(t,n,i,r){if(t.equals(n))return e.pointToSegment(t,i,r);if(i.equals(r))return e.pointToSegment(r,t,n);var s=!1;if(U.intersects(t,n,i,r)){var a=(n.x-t.x)*(r.y-i.y)-(n.y-t.y)*(r.x-i.x);if(0===a)s=!0;else{var o=(t.y-i.y)*(r.x-i.x)-(t.x-i.x)*(r.y-i.y),u=((t.y-i.y)*(n.x-t.x)-(t.x-i.x)*(n.y-t.y))/a,l=o/a;(l<0||l>1||u<0||u>1)&&(s=!0)}}else s=!0;return s?kt.min(e.pointToSegment(t,i,r),e.pointToSegment(n,i,r),e.pointToSegment(i,t,n),e.pointToSegment(r,t,n)):0}},{key:\"pointToSegment\",value:function(t,e,n){if(e.x===n.x&&e.y===n.y)return t.distance(e);var i=(n.x-e.x)*(n.x-e.x)+(n.y-e.y)*(n.y-e.y),r=((t.x-e.x)*(n.x-e.x)+(t.y-e.y)*(n.y-e.y))/i;if(r<=0)return t.distance(e);if(r>=1)return t.distance(n);var s=((e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y))/i;return Math.abs(s)*Math.sqrt(i)}},{key:\"pointToLinePerpendicular\",value:function(t,e,n){var i=(n.x-e.x)*(n.x-e.x)+(n.y-e.y)*(n.y-e.y),r=((e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y))/i;return Math.abs(r)*Math.sqrt(i)}},{key:\"pointToSegmentString\",value:function(t,n){if(0===n.length)throw new m(\"Line array must contain at least one vertex\");for(var i=t.distance(n[0]),r=0;r<n.length-1;r++){var s=e.pointToSegment(t,n[r],n[r+1]);s<i&&(i=s)}return i}}]),e}(),It=function(){function e(){t(this,e)}return n(e,[{key:\"create\",value:function(){if(1===arguments.length)arguments[0]instanceof Array||rt(arguments[0],ht);else if(2===arguments.length);else if(3===arguments.length){var t=arguments[0],e=arguments[1];return this.create(t,e)}}}]),e}(),Et=function(){function e(){t(this,e)}return n(e,[{key:\"filter\",value:function(t){}}]),e}(),Nt=function(){function e(){t(this,e)}return n(e,null,[{key:\"ofLine\",value:function(t){var e=t.size();if(e<=1)return 0;var n=0,i=new X;t.getCoordinate(0,i);for(var r=i.x,s=i.y,a=1;a<e;a++){t.getCoordinate(a,i);var o=i.x,u=i.y,l=o-r,h=u-s;n+=Math.sqrt(l*l+h*h),r=o,s=u}return n}}]),e}(),Tt=function e(){t(this,e)},St=function(){function e(){t(this,e)}return n(e,null,[{key:\"copyCoord\",value:function(t,e,n,i){for(var r=Math.min(t.getDimension(),n.getDimension()),s=0;s<r;s++)n.setOrdinate(i,s,t.getOrdinate(e,s))}},{key:\"isRing\",value:function(t){var e=t.size();return 0===e||!(e<=3)&&(t.getOrdinate(0,ht.X)===t.getOrdinate(e-1,ht.X)&&t.getOrdinate(0,ht.Y)===t.getOrdinate(e-1,ht.Y))}},{key:\"scroll\",value:function(){if(2===arguments.length){if(rt(arguments[0],ht)&&Number.isInteger(arguments[1])){var t=arguments[0],n=arguments[1];e.scroll(t,n,e.isRing(t))}else if(rt(arguments[0],ht)&&arguments[1]instanceof X){var i=arguments[0],r=arguments[1],s=e.indexOf(r,i);if(s<=0)return null;e.scroll(i,s)}}else if(3===arguments.length){var a=arguments[0],o=arguments[1],u=arguments[2],l=o;if(l<=0)return null;for(var h=a.copy(),c=u?a.size()-1:a.size(),f=0;f<c;f++)for(var v=0;v<a.getDimension();v++)a.setOrdinate(f,v,h.getOrdinate((o+f)%c,v));if(u)for(var g=0;g<a.getDimension();g++)a.setOrdinate(c,g,a.getOrdinate(0,g))}}},{key:\"isEqual\",value:function(t,e){var n=t.size();if(n!==e.size())return!1;for(var i=Math.min(t.getDimension(),e.getDimension()),r=0;r<n;r++)for(var s=0;s<i;s++){var a=t.getOrdinate(r,s),o=e.getOrdinate(r,s);if(t.getOrdinate(r,s)!==e.getOrdinate(r,s)&&(!A.isNaN(a)||!A.isNaN(o)))return!1}return!0}},{key:\"minCoordinateIndex\",value:function(){if(1===arguments.length){var t=arguments[0];return e.minCoordinateIndex(t,0,t.size()-1)}if(3===arguments.length){for(var n=arguments[0],i=arguments[1],r=arguments[2],s=-1,a=null,o=i;o<=r;o++){var u=n.getCoordinate(o);(null===a||a.compareTo(u)>0)&&(a=u,s=o)}return s}}},{key:\"extend\",value:function(t,n,i){var r=t.create(i,n.getDimension()),s=n.size();if(e.copy(n,0,r,0,s),s>0)for(var a=s;a<i;a++)e.copy(n,s-1,r,a,1);return r}},{key:\"reverse\",value:function(t){for(var n=t.size()-1,i=Math.trunc(n/2),r=0;r<=i;r++)e.swap(t,r,n-r)}},{key:\"swap\",value:function(t,e,n){if(e===n)return null;for(var i=0;i<t.getDimension();i++){var r=t.getOrdinate(e,i);t.setOrdinate(e,i,t.getOrdinate(n,i)),t.setOrdinate(n,i,r)}}},{key:\"copy\",value:function(t,n,i,r,s){for(var a=0;a<s;a++)e.copyCoord(t,n+a,i,r+a)}},{key:\"ensureValidRing\",value:function(t,n){var i=n.size();return 0===i?n:i<=3?e.createClosedRing(t,n,4):n.getOrdinate(0,ht.X)===n.getOrdinate(i-1,ht.X)&&n.getOrdinate(0,ht.Y)===n.getOrdinate(i-1,ht.Y)?n:e.createClosedRing(t,n,i+1)}},{key:\"indexOf\",value:function(t,e){for(var n=0;n<e.size();n++)if(t.x===e.getOrdinate(n,ht.X)&&t.y===e.getOrdinate(n,ht.Y))return n;return-1}},{key:\"createClosedRing\",value:function(t,n,i){var r=t.create(i,n.getDimension()),s=n.size();e.copy(n,0,r,0,s);for(var a=s;a<i;a++)e.copy(n,0,r,a,1);return r}},{key:\"minCoordinate\",value:function(t){for(var e=null,n=0;n<t.size();n++){var i=t.getCoordinate(n);(null===e||e.compareTo(i)>0)&&(e=i)}return e}}]),e}(),Lt=function(){function e(){t(this,e)}return n(e,null,[{key:\"toDimensionSymbol\",value:function(t){switch(t){case e.FALSE:return e.SYM_FALSE;case e.TRUE:return e.SYM_TRUE;case e.DONTCARE:return e.SYM_DONTCARE;case e.P:return e.SYM_P;case e.L:return e.SYM_L;case e.A:return e.SYM_A}throw new m(\"Unknown dimension value: \"+t)}},{key:\"toDimensionValue\",value:function(t){switch(ot.toUpperCase(t)){case e.SYM_FALSE:return e.FALSE;case e.SYM_TRUE:return e.TRUE;case e.SYM_DONTCARE:return e.DONTCARE;case e.SYM_P:return e.P;case e.SYM_L:return e.L;case e.SYM_A:return e.A}throw new m(\"Unknown dimension symbol: \"+t)}}]),e}();Lt.P=0,Lt.L=1,Lt.A=2,Lt.FALSE=-1,Lt.TRUE=-2,Lt.DONTCARE=-3,Lt.SYM_FALSE=\"F\",Lt.SYM_TRUE=\"T\",Lt.SYM_DONTCARE=\"*\",Lt.SYM_P=\"0\",Lt.SYM_L=\"1\",Lt.SYM_A=\"2\";var Ct=function(){function e(){t(this,e)}return n(e,[{key:\"filter\",value:function(t){}}]),e}(),Rt=function(){function e(){t(this,e)}return n(e,[{key:\"filter\",value:function(t,e){}},{key:\"isDone\",value:function(){}},{key:\"isGeometryChanged\",value:function(){}}]),e}(),wt=function(e){i(a,e);var s=c(a);function a(){var e;return t(this,a),e=s.call(this),a.constructor_.apply(l(e),arguments),e}return n(a,[{key:\"computeEnvelopeInternal\",value:function(){return this.isEmpty()?new U:this._points.expandEnvelope(new U)}},{key:\"isRing\",value:function(){return this.isClosed()&&this.isSimple()}},{key:\"getCoordinates\",value:function(){return this._points.toCoordinateArray()}},{key:\"copyInternal\",value:function(){return new a(this._points.copy(),this._factory)}},{key:\"equalsExact\",value:function(){if(2===arguments.length&&\"number\"==typeof arguments[1]&&arguments[0]instanceof V){var t=arguments[0],e=arguments[1];if(!this.isEquivalentClass(t))return!1;var n=t;if(this._points.size()!==n._points.size())return!1;for(var i=0;i<this._points.size();i++)if(!this.equal(this._points.getCoordinate(i),n._points.getCoordinate(i),e))return!1;return!0}return f(r(a.prototype),\"equalsExact\",this).apply(this,arguments)}},{key:\"normalize\",value:function(){for(var t=0;t<Math.trunc(this._points.size()/2);t++){var e=this._points.size()-1-t;if(!this._points.getCoordinate(t).equals(this._points.getCoordinate(e))){if(this._points.getCoordinate(t).compareTo(this._points.getCoordinate(e))>0){var n=this._points.copy();St.reverse(n),this._points=n}return null}}}},{key:\"getCoordinate\",value:function(){return this.isEmpty()?null:this._points.getCoordinate(0)}},{key:\"getBoundaryDimension\",value:function(){return this.isClosed()?Lt.FALSE:0}},{key:\"isClosed\",value:function(){return!this.isEmpty()&&this.getCoordinateN(0).equals2D(this.getCoordinateN(this.getNumPoints()-1))}},{key:\"reverseInternal\",value:function(){var t=this._points.copy();return St.reverse(t),this.getFactory().createLineString(t)}},{key:\"getEndPoint\",value:function(){return this.isEmpty()?null:this.getPointN(this.getNumPoints()-1)}},{key:\"getTypeCode\",value:function(){return V.TYPECODE_LINESTRING}},{key:\"getDimension\",value:function(){return 1}},{key:\"getLength\",value:function(){return Nt.ofLine(this._points)}},{key:\"getNumPoints\",value:function(){return this._points.size()}},{key:\"compareToSameClass\",value:function(){if(1===arguments.length){for(var t=arguments[0],e=t,n=0,i=0;n<this._points.size()&&i<e._points.size();){var r=this._points.getCoordinate(n).compareTo(e._points.getCoordinate(i));if(0!==r)return r;n++,i++}return n<this._points.size()?1:i<e._points.size()?-1:0}if(2===arguments.length){var s=arguments[0],a=arguments[1],o=s;return a.compare(this._points,o._points)}}},{key:\"apply\",value:function(){if(rt(arguments[0],Et))for(var t=arguments[0],e=0;e<this._points.size();e++)t.filter(this._points.getCoordinate(e));else if(rt(arguments[0],Rt)){var n=arguments[0];if(0===this._points.size())return null;for(var i=0;i<this._points.size()&&(n.filter(this._points,i),!n.isDone());i++);n.isGeometryChanged()&&this.geometryChanged()}else if(rt(arguments[0],Ct)){var r=arguments[0];r.filter(this)}else if(rt(arguments[0],k)){var s=arguments[0];s.filter(this)}}},{key:\"getBoundary\",value:function(){throw new W}},{key:\"isEquivalentClass\",value:function(t){return t instanceof a}},{key:\"getCoordinateN\",value:function(t){return this._points.getCoordinate(t)}},{key:\"getGeometryType\",value:function(){return V.TYPENAME_LINESTRING}},{key:\"getCoordinateSequence\",value:function(){return this._points}},{key:\"isEmpty\",value:function(){return 0===this._points.size()}},{key:\"init\",value:function(t){if(null===t&&(t=this.getFactory().getCoordinateSequenceFactory().create([])),1===t.size())throw new m(\"Invalid number of points in LineString (found \"+t.size()+\" - must be 0 or >= 2)\");this._points=t}},{key:\"isCoordinate\",value:function(t){for(var e=0;e<this._points.size();e++)if(this._points.getCoordinate(e).equals(t))return!0;return!1}},{key:\"getStartPoint\",value:function(){return this.isEmpty()?null:this.getPointN(0)}},{key:\"getPointN\",value:function(t){return this.getFactory().createPoint(this._points.getCoordinate(t))}},{key:\"interfaces_\",get:function(){return[Tt]}}],[{key:\"constructor_\",value:function(){if(this._points=null,0===arguments.length);else if(2===arguments.length){var t=arguments[0],e=arguments[1];V.constructor_.call(this,e),this.init(t)}}}]),a}(V),Ot=function e(){t(this,e)},bt=function(e){i(a,e);var s=c(a);function a(){var e;return t(this,a),e=s.call(this),a.constructor_.apply(l(e),arguments),e}return n(a,[{key:\"computeEnvelopeInternal\",value:function(){if(this.isEmpty())return new U;var t=new U;return t.expandToInclude(this._coordinates.getX(0),this._coordinates.getY(0)),t}},{key:\"getCoordinates\",value:function(){return this.isEmpty()?[]:[this.getCoordinate()]}},{key:\"copyInternal\",value:function(){return new a(this._coordinates.copy(),this._factory)}},{key:\"equalsExact\",value:function(){if(2===arguments.length&&\"number\"==typeof arguments[1]&&arguments[0]instanceof V){var t=arguments[0],e=arguments[1];return!!this.isEquivalentClass(t)&&(!(!this.isEmpty()||!t.isEmpty())||this.isEmpty()===t.isEmpty()&&this.equal(t.getCoordinate(),this.getCoordinate(),e))}return f(r(a.prototype),\"equalsExact\",this).apply(this,arguments)}},{key:\"normalize\",value:function(){}},{key:\"getCoordinate\",value:function(){return 0!==this._coordinates.size()?this._coordinates.getCoordinate(0):null}},{key:\"getBoundaryDimension\",value:function(){return Lt.FALSE}},{key:\"reverseInternal\",value:function(){return this.getFactory().createPoint(this._coordinates.copy())}},{key:\"getTypeCode\",value:function(){return V.TYPECODE_POINT}},{key:\"getDimension\",value:function(){return 0}},{key:\"getNumPoints\",value:function(){return this.isEmpty()?0:1}},{key:\"getX\",value:function(){if(null===this.getCoordinate())throw new IllegalStateException(\"getX called on empty Point\");return this.getCoordinate().x}},{key:\"compareToSameClass\",value:function(){if(1===arguments.length){var t=arguments[0],e=t;return this.getCoordinate().compareTo(e.getCoordinate())}if(2===arguments.length){var n=arguments[0],i=arguments[1],r=n;return i.compare(this._coordinates,r._coordinates)}}},{key:\"apply\",value:function(){if(rt(arguments[0],Et)){var t=arguments[0];if(this.isEmpty())return null;t.filter(this.getCoordinate())}else if(rt(arguments[0],Rt)){var e=arguments[0];if(this.isEmpty())return null;e.filter(this._coordinates,0),e.isGeometryChanged()&&this.geometryChanged()}else if(rt(arguments[0],Ct)){var n=arguments[0];n.filter(this)}else if(rt(arguments[0],k)){var i=arguments[0];i.filter(this)}}},{key:\"getBoundary\",value:function(){return this.getFactory().createGeometryCollection()}},{key:\"getGeometryType\",value:function(){return V.TYPENAME_POINT}},{key:\"getCoordinateSequence\",value:function(){return this._coordinates}},{key:\"getY\",value:function(){if(null===this.getCoordinate())throw new IllegalStateException(\"getY called on empty Point\");return this.getCoordinate().y}},{key:\"isEmpty\",value:function(){return 0===this._coordinates.size()}},{key:\"init\",value:function(t){null===t&&(t=this.getFactory().getCoordinateSequenceFactory().create([])),G.isTrue(t.size()<=1),this._coordinates=t}},{key:\"isSimple\",value:function(){return!0}},{key:\"interfaces_\",get:function(){return[Ot]}}],[{key:\"constructor_\",value:function(){this._coordinates=null;var t=arguments[0],e=arguments[1];V.constructor_.call(this,e),this.init(t)}}]),a}(V),Mt=function(){function e(){t(this,e)}return n(e,null,[{key:\"ofRing\",value:function(){if(arguments[0]instanceof Array){var t=arguments[0];return Math.abs(e.ofRingSigned(t))}if(rt(arguments[0],ht)){var n=arguments[0];return Math.abs(e.ofRingSigned(n))}}},{key:\"ofRingSigned\",value:function(){if(arguments[0]instanceof Array){var t=arguments[0];if(t.length<3)return 0;for(var e=0,n=t[0].x,i=1;i<t.length-1;i++){var r=t[i].x-n,s=t[i+1].y,a=t[i-1].y;e+=r*(a-s)}return e/2}if(rt(arguments[0],ht)){var o=arguments[0],u=o.size();if(u<3)return 0;var l=new X,h=new X,c=new X;o.getCoordinate(0,h),o.getCoordinate(1,c);var f=h.x;c.x-=f;for(var v=0,g=1;g<u-1;g++)l.y=h.y,h.x=c.x,h.y=c.y,o.getCoordinate(g+1,c),c.x-=f,v+=h.x*(l.y-c.y);return v/2}}}]),e}(),At=function(){function e(){t(this,e)}return n(e,null,[{key:\"sort\",value:function(){var t=arguments,e=arguments[0];if(1===arguments.length)e.sort((function(t,e){return t.compareTo(e)}));else if(2===arguments.length)e.sort((function(e,n){return t[1].compare(e,n)}));else if(3===arguments.length){var n=e.slice(arguments[1],arguments[2]);n.sort();var i=e.slice(0,arguments[1]).concat(n,e.slice(arguments[2],e.length));e.splice(0,e.length);var r,s=d(i);try{for(s.s();!(r=s.n()).done;){var a=r.value;e.push(a)}}catch(t){s.e(t)}finally{s.f()}}else if(4===arguments.length){var o=e.slice(arguments[1],arguments[2]);o.sort((function(e,n){return t[3].compare(e,n)}));var u=e.slice(0,arguments[1]).concat(o,e.slice(arguments[2],e.length));e.splice(0,e.length);var l,h=d(u);try{for(h.s();!(l=h.n()).done;){var c=l.value;e.push(c)}}catch(t){h.e(t)}finally{h.f()}}}},{key:\"asList\",value:function(t){var e,n=new yt,i=d(t);try{for(i.s();!(e=i.n()).done;){var r=e.value;n.add(r)}}catch(t){i.e(t)}finally{i.f()}return n}},{key:\"copyOf\",value:function(t,e){return t.slice(0,e)}}]),e}(),Pt=function e(){t(this,e)},Dt=function(e){i(a,e);var s=c(a);function a(){var e;return t(this,a),e=s.call(this),a.constructor_.apply(l(e),arguments),e}return n(a,[{key:\"computeEnvelopeInternal\",value:function(){return this._shell.getEnvelopeInternal()}},{key:\"getCoordinates\",value:function(){if(this.isEmpty())return[];for(var t=new Array(this.getNumPoints()).fill(null),e=-1,n=this._shell.getCoordinates(),i=0;i<n.length;i++)t[++e]=n[i];for(var r=0;r<this._holes.length;r++)for(var s=this._holes[r].getCoordinates(),a=0;a<s.length;a++)t[++e]=s[a];return t}},{key:\"getArea\",value:function(){var t=0;t+=Mt.ofRing(this._shell.getCoordinateSequence());for(var e=0;e<this._holes.length;e++)t-=Mt.ofRing(this._holes[e].getCoordinateSequence());return t}},{key:\"copyInternal\",value:function(){for(var t=this._shell.copy(),e=new Array(this._holes.length).fill(null),n=0;n<this._holes.length;n++)e[n]=this._holes[n].copy();return new a(t,e,this._factory)}},{key:\"isRectangle\",value:function(){if(0!==this.getNumInteriorRing())return!1;if(null===this._shell)return!1;if(5!==this._shell.getNumPoints())return!1;for(var t=this._shell.getCoordinateSequence(),e=this.getEnvelopeInternal(),n=0;n<5;n++){var i=t.getX(n);if(i!==e.getMinX()&&i!==e.getMaxX())return!1;var r=t.getY(n);if(r!==e.getMinY()&&r!==e.getMaxY())return!1}for(var s=t.getX(0),a=t.getY(0),o=1;o<=4;o++){var u=t.getX(o),l=t.getY(o);if(u!==s===(l!==a))return!1;s=u,a=l}return!0}},{key:\"equalsExact\",value:function(){if(2===arguments.length&&\"number\"==typeof arguments[1]&&arguments[0]instanceof V){var t=arguments[0],e=arguments[1];if(!this.isEquivalentClass(t))return!1;var n=t,i=this._shell,s=n._shell;if(!i.equalsExact(s,e))return!1;if(this._holes.length!==n._holes.length)return!1;for(var o=0;o<this._holes.length;o++)if(!this._holes[o].equalsExact(n._holes[o],e))return!1;return!0}return f(r(a.prototype),\"equalsExact\",this).apply(this,arguments)}},{key:\"normalize\",value:function(){if(0===arguments.length){this._shell=this.normalized(this._shell,!0);for(var t=0;t<this._holes.length;t++)this._holes[t]=this.normalized(this._holes[t],!1);At.sort(this._holes)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];if(e.isEmpty())return null;var i=e.getCoordinateSequence(),r=St.minCoordinateIndex(i,0,i.size()-2);St.scroll(i,r,!0),ct.isCCW(i)===n&&St.reverse(i)}}},{key:\"getCoordinate\",value:function(){return this._shell.getCoordinate()}},{key:\"getNumInteriorRing\",value:function(){return this._holes.length}},{key:\"getBoundaryDimension\",value:function(){return 1}},{key:\"reverseInternal\",value:function(){for(var t=this.getExteriorRing().reverse(),e=new Array(this.getNumInteriorRing()).fill(null),n=0;n<e.length;n++)e[n]=this.getInteriorRingN(n).reverse();return this.getFactory().createPolygon(t,e)}},{key:\"getTypeCode\",value:function(){return V.TYPECODE_POLYGON}},{key:\"getDimension\",value:function(){return 2}},{key:\"getLength\",value:function(){var t=0;t+=this._shell.getLength();for(var e=0;e<this._holes.length;e++)t+=this._holes[e].getLength();return t}},{key:\"getNumPoints\",value:function(){for(var t=this._shell.getNumPoints(),e=0;e<this._holes.length;e++)t+=this._holes[e].getNumPoints();return t}},{key:\"convexHull\",value:function(){return this.getExteriorRing().convexHull()}},{key:\"normalized\",value:function(t,e){var n=t.copy();return this.normalize(n,e),n}},{key:\"compareToSameClass\",value:function(){if(1===arguments.length){var t=arguments[0],e=this._shell,n=t._shell;return e.compareToSameClass(n)}if(2===arguments.length){var i=arguments[0],r=arguments[1],s=i,a=this._shell,o=s._shell,u=a.compareToSameClass(o,r);if(0!==u)return u;for(var l=this.getNumInteriorRing(),h=s.getNumInteriorRing(),c=0;c<l&&c<h;){var f=this.getInteriorRingN(c),v=s.getInteriorRingN(c),g=f.compareToSameClass(v,r);if(0!==g)return g;c++}return c<l?1:c<h?-1:0}}},{key:\"apply\",value:function(){if(rt(arguments[0],Et)){var t=arguments[0];this._shell.apply(t);for(var e=0;e<this._holes.length;e++)this._holes[e].apply(t)}else if(rt(arguments[0],Rt)){var n=arguments[0];if(this._shell.apply(n),!n.isDone())for(var i=0;i<this._holes.length&&(this._holes[i].apply(n),!n.isDone());i++);n.isGeometryChanged()&&this.geometryChanged()}else if(rt(arguments[0],Ct)){var r=arguments[0];r.filter(this)}else if(rt(arguments[0],k)){var s=arguments[0];s.filter(this),this._shell.apply(s);for(var a=0;a<this._holes.length;a++)this._holes[a].apply(s)}}},{key:\"getBoundary\",value:function(){if(this.isEmpty())return this.getFactory().createMultiLineString();var t=new Array(this._holes.length+1).fill(null);t[0]=this._shell;for(var e=0;e<this._holes.length;e++)t[e+1]=this._holes[e];return t.length<=1?this.getFactory().createLinearRing(t[0].getCoordinateSequence()):this.getFactory().createMultiLineString(t)}},{key:\"getGeometryType\",value:function(){return V.TYPENAME_POLYGON}},{key:\"getExteriorRing\",value:function(){return this._shell}},{key:\"isEmpty\",value:function(){return this._shell.isEmpty()}},{key:\"getInteriorRingN\",value:function(t){return this._holes[t]}},{key:\"interfaces_\",get:function(){return[Pt]}}],[{key:\"constructor_\",value:function(){this._shell=null,this._holes=null;var t=arguments[0],e=arguments[1],n=arguments[2];if(V.constructor_.call(this,n),null===t&&(t=this.getFactory().createLinearRing()),null===e&&(e=[]),V.hasNullElements(e))throw new m(\"holes must not contain null elements\");if(t.isEmpty()&&V.hasNonEmptyElements(e))throw new m(\"shell is empty but holes are not\");this._shell=t,this._holes=e}}]),a}(V),Ft=function(e){i(r,e);var n=c(r);function r(){return t(this,r),n.apply(this,arguments)}return r}(K),Gt=function(e){i(s,e);var r=c(s);function s(e){var n;return t(this,s),(n=r.call(this)).array=[],e instanceof Z&&n.addAll(e),n}return n(s,[{key:\"contains\",value:function(t){var e,n=d(this.array);try{for(n.s();!(e=n.n()).done;){if(0===e.value.compareTo(t))return!0}}catch(t){n.e(t)}finally{n.f()}return!1}},{key:\"add\",value:function(t){if(this.contains(t))return!1;for(var e=0,n=this.array.length;e<n;e++){if(1===this.array[e].compareTo(t))return!!this.array.splice(e,0,t)}return this.array.push(t),!0}},{key:\"addAll\",value:function(t){var e,n=d(t);try{for(n.s();!(e=n.n()).done;){var i=e.value;this.add(i)}}catch(t){n.e(t)}finally{n.f()}return!0}},{key:\"remove\",value:function(){throw new W}},{key:\"size\",value:function(){return this.array.length}},{key:\"isEmpty\",value:function(){return 0===this.array.length}},{key:\"toArray\",value:function(){return this.array.slice()}},{key:\"iterator\",value:function(){return new qt(this.array)}}]),s}(Ft),qt=function(){function e(n){t(this,e),this.array=n,this.position=0}return n(e,[{key:\"next\",value:function(){if(this.position===this.array.length)throw new j;return this.array[this.position++]}},{key:\"hasNext\",value:function(){return this.position<this.array.length}},{key:\"remove\",value:function(){throw new W}}]),e}(),Yt=function(e){i(a,e);var s=c(a);function a(){var e;return t(this,a),e=s.call(this),a.constructor_.apply(l(e),arguments),e}return n(a,[{key:\"computeEnvelopeInternal\",value:function(){for(var t=new U,e=0;e<this._geometries.length;e++)t.expandToInclude(this._geometries[e].getEnvelopeInternal());return t}},{key:\"getGeometryN\",value:function(t){return this._geometries[t]}},{key:\"getCoordinates\",value:function(){for(var t=new Array(this.getNumPoints()).fill(null),e=-1,n=0;n<this._geometries.length;n++)for(var i=this._geometries[n].getCoordinates(),r=0;r<i.length;r++)t[++e]=i[r];return t}},{key:\"getArea\",value:function(){for(var t=0,e=0;e<this._geometries.length;e++)t+=this._geometries[e].getArea();return t}},{key:\"copyInternal\",value:function(){for(var t=new Array(this._geometries.length).fill(null),e=0;e<t.length;e++)t[e]=this._geometries[e].copy();return new a(t,this._factory)}},{key:\"equalsExact\",value:function(){if(2===arguments.length&&\"number\"==typeof arguments[1]&&arguments[0]instanceof V){var t=arguments[0],e=arguments[1];if(!this.isEquivalentClass(t))return!1;var n=t;if(this._geometries.length!==n._geometries.length)return!1;for(var i=0;i<this._geometries.length;i++)if(!this._geometries[i].equalsExact(n._geometries[i],e))return!1;return!0}return f(r(a.prototype),\"equalsExact\",this).apply(this,arguments)}},{key:\"normalize\",value:function(){for(var t=0;t<this._geometries.length;t++)this._geometries[t].normalize();At.sort(this._geometries)}},{key:\"getCoordinate\",value:function(){return this.isEmpty()?null:this._geometries[0].getCoordinate()}},{key:\"getBoundaryDimension\",value:function(){for(var t=Lt.FALSE,e=0;e<this._geometries.length;e++)t=Math.max(t,this._geometries[e].getBoundaryDimension());return t}},{key:\"reverseInternal\",value:function(){for(var t=this._geometries.length,e=new yt(t),n=0;n<t;n++)e.add(this._geometries[n].reverse());return this.getFactory().buildGeometry(e)}},{key:\"getTypeCode\",value:function(){return V.TYPECODE_GEOMETRYCOLLECTION}},{key:\"getDimension\",value:function(){for(var t=Lt.FALSE,e=0;e<this._geometries.length;e++)t=Math.max(t,this._geometries[e].getDimension());return t}},{key:\"getLength\",value:function(){for(var t=0,e=0;e<this._geometries.length;e++)t+=this._geometries[e].getLength();return t}},{key:\"getNumPoints\",value:function(){for(var t=0,e=0;e<this._geometries.length;e++)t+=this._geometries[e].getNumPoints();return t}},{key:\"getNumGeometries\",value:function(){return this._geometries.length}},{key:\"compareToSameClass\",value:function(){if(1===arguments.length){var t=arguments[0],e=new Gt(At.asList(this._geometries)),n=new Gt(At.asList(t._geometries));return this.compare(e,n)}if(2===arguments.length){for(var i=arguments[0],r=arguments[1],s=i,a=this.getNumGeometries(),o=s.getNumGeometries(),u=0;u<a&&u<o;){var l=this.getGeometryN(u),h=s.getGeometryN(u),c=l.compareToSameClass(h,r);if(0!==c)return c;u++}return u<a?1:u<o?-1:0}}},{key:\"apply\",value:function(){if(rt(arguments[0],Et))for(var t=arguments[0],e=0;e<this._geometries.length;e++)this._geometries[e].apply(t);else if(rt(arguments[0],Rt)){var n=arguments[0];if(0===this._geometries.length)return null;for(var i=0;i<this._geometries.length&&(this._geometries[i].apply(n),!n.isDone());i++);n.isGeometryChanged()&&this.geometryChanged()}else if(rt(arguments[0],Ct)){var r=arguments[0];r.filter(this);for(var s=0;s<this._geometries.length;s++)this._geometries[s].apply(r)}else if(rt(arguments[0],k)){var a=arguments[0];a.filter(this);for(var o=0;o<this._geometries.length;o++)this._geometries[o].apply(a)}}},{key:\"getBoundary\",value:function(){return V.checkNotGeometryCollection(this),G.shouldNeverReachHere(),null}},{key:\"getGeometryType\",value:function(){return V.TYPENAME_GEOMETRYCOLLECTION}},{key:\"isEmpty\",value:function(){for(var t=0;t<this._geometries.length;t++)if(!this._geometries[t].isEmpty())return!1;return!0}}],[{key:\"constructor_\",value:function(){if(this._geometries=null,0===arguments.length);else if(2===arguments.length){var t=arguments[0],e=arguments[1];if(V.constructor_.call(this,e),null===t&&(t=[]),V.hasNullElements(t))throw new m(\"geometries must not contain null elements\");this._geometries=t}}}]),a}(V),zt=function(e){i(a,e);var s=c(a);function a(){var e;return t(this,a),e=s.call(this),a.constructor_.apply(l(e),arguments),e}return n(a,[{key:\"copyInternal\",value:function(){for(var t=new Array(this._geometries.length).fill(null),e=0;e<t.length;e++)t[e]=this._geometries[e].copy();return new a(t,this._factory)}},{key:\"isValid\",value:function(){return!0}},{key:\"equalsExact\",value:function(){if(2===arguments.length&&\"number\"==typeof arguments[1]&&arguments[0]instanceof V){var t=arguments[0],e=arguments[1];return!!this.isEquivalentClass(t)&&f(r(a.prototype),\"equalsExact\",this).call(this,t,e)}return f(r(a.prototype),\"equalsExact\",this).apply(this,arguments)}},{key:\"getCoordinate\",value:function(){if(1===arguments.length&&Number.isInteger(arguments[0])){var t=arguments[0];return this._geometries[t].getCoordinate()}return f(r(a.prototype),\"getCoordinate\",this).apply(this,arguments)}},{key:\"getBoundaryDimension\",value:function(){return Lt.FALSE}},{key:\"getTypeCode\",value:function(){return V.TYPECODE_MULTIPOINT}},{key:\"getDimension\",value:function(){return 0}},{key:\"getBoundary\",value:function(){return this.getFactory().createGeometryCollection()}},{key:\"getGeometryType\",value:function(){return V.TYPENAME_MULTIPOINT}},{key:\"interfaces_\",get:function(){return[Ot]}}],[{key:\"constructor_\",value:function(){var t=arguments[0],e=arguments[1];Yt.constructor_.call(this,t,e)}}]),a}(Yt),Xt=function(e){i(a,e);var s=c(a);function a(){var e;return t(this,a),e=s.call(this),a.constructor_.apply(l(e),arguments),e}return n(a,[{key:\"copyInternal\",value:function(){return new a(this._points.copy(),this._factory)}},{key:\"getBoundaryDimension\",value:function(){return Lt.FALSE}},{key:\"isClosed\",value:function(){return!!this.isEmpty()||f(r(a.prototype),\"isClosed\",this).call(this)}},{key:\"reverseInternal\",value:function(){var t=this._points.copy();return St.reverse(t),this.getFactory().createLinearRing(t)}},{key:\"getTypeCode\",value:function(){return V.TYPECODE_LINEARRING}},{key:\"validateConstruction\",value:function(){if(!this.isEmpty()&&!f(r(a.prototype),\"isClosed\",this).call(this))throw new m(\"Points of LinearRing do not form a closed linestring\");if(this.getCoordinateSequence().size()>=1&&this.getCoordinateSequence().size()<a.MINIMUM_VALID_SIZE)throw new m(\"Invalid number of points in LinearRing (found \"+this.getCoordinateSequence().size()+\" - must be 0 or >= 4)\")}},{key:\"getGeometryType\",value:function(){return V.TYPENAME_LINEARRING}}],[{key:\"constructor_\",value:function(){var t=arguments[0],e=arguments[1];wt.constructor_.call(this,t,e),this.validateConstruction()}}]),a}(wt);Xt.MINIMUM_VALID_SIZE=4;var Bt=function(e){i(s,e);var r=c(s);function s(){var e;return t(this,s),e=r.call(this),s.constructor_.apply(l(e),arguments),e}return n(s,[{key:\"setOrdinate\",value:function(t,e){switch(t){case s.X:this.x=e;break;case s.Y:this.y=e;break;default:throw new m(\"Invalid ordinate index: \"+t)}}},{key:\"getZ\",value:function(){return X.NULL_ORDINATE}},{key:\"getOrdinate\",value:function(t){switch(t){case s.X:return this.x;case s.Y:return this.y}throw new m(\"Invalid ordinate index: \"+t)}},{key:\"setZ\",value:function(t){throw new m(\"CoordinateXY dimension 2 does not support z-ordinate\")}},{key:\"copy\",value:function(){return new s(this)}},{key:\"toString\",value:function(){return\"(\"+this.x+\", \"+this.y+\")\"}},{key:\"setCoordinate\",value:function(t){this.x=t.x,this.y=t.y,this.z=t.getZ()}}],[{key:\"constructor_\",value:function(){if(0===arguments.length)X.constructor_.call(this);else if(1===arguments.length){if(arguments[0]instanceof s){var t=arguments[0];X.constructor_.call(this,t.x,t.y)}else if(arguments[0]instanceof X){var e=arguments[0];X.constructor_.call(this,e.x,e.y)}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];X.constructor_.call(this,n,i,X.NULL_ORDINATE)}}}]),s}(X);Bt.X=0,Bt.Y=1,Bt.Z=-1,Bt.M=-1;var Ut=function(e){i(s,e);var r=c(s);function s(){var e;return t(this,s),e=r.call(this),s.constructor_.apply(l(e),arguments),e}return n(s,[{key:\"getM\",value:function(){return this._m}},{key:\"setOrdinate\",value:function(t,e){switch(t){case s.X:this.x=e;break;case s.Y:this.y=e;break;case s.M:this._m=e;break;default:throw new m(\"Invalid ordinate index: \"+t)}}},{key:\"setM\",value:function(t){this._m=t}},{key:\"getZ\",value:function(){return X.NULL_ORDINATE}},{key:\"getOrdinate\",value:function(t){switch(t){case s.X:return this.x;case s.Y:return this.y;case s.M:return this._m}throw new m(\"Invalid ordinate index: \"+t)}},{key:\"setZ\",value:function(t){throw new m(\"CoordinateXY dimension 2 does not support z-ordinate\")}},{key:\"copy\",value:function(){return new s(this)}},{key:\"toString\",value:function(){return\"(\"+this.x+\", \"+this.y+\" m=\"+this.getM()+\")\"}},{key:\"setCoordinate\",value:function(t){this.x=t.x,this.y=t.y,this.z=t.getZ(),this._m=t.getM()}}],[{key:\"constructor_\",value:function(){if(this._m=null,0===arguments.length)X.constructor_.call(this),this._m=0;else if(1===arguments.length){if(arguments[0]instanceof s){var t=arguments[0];X.constructor_.call(this,t.x,t.y),this._m=t._m}else if(arguments[0]instanceof X){var e=arguments[0];X.constructor_.call(this,e.x,e.y),this._m=this.getM()}}else if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2];X.constructor_.call(this,n,i,X.NULL_ORDINATE),this._m=r}}}]),s}(X);Ut.X=0,Ut.Y=1,Ut.Z=-1,Ut.M=2;var Vt=function(e){i(s,e);var r=c(s);function s(){var e;return t(this,s),e=r.call(this),s.constructor_.apply(l(e),arguments),e}return n(s,[{key:\"getM\",value:function(){return this._m}},{key:\"setOrdinate\",value:function(t,e){switch(t){case X.X:this.x=e;break;case X.Y:this.y=e;break;case X.Z:this.z=e;break;case X.M:this._m=e;break;default:throw new m(\"Invalid ordinate index: \"+t)}}},{key:\"setM\",value:function(t){this._m=t}},{key:\"getOrdinate\",value:function(t){switch(t){case X.X:return this.x;case X.Y:return this.y;case X.Z:return this.getZ();case X.M:return this.getM()}throw new m(\"Invalid ordinate index: \"+t)}},{key:\"copy\",value:function(){return new s(this)}},{key:\"toString\",value:function(){return\"(\"+this.x+\", \"+this.y+\", \"+this.getZ()+\" m=\"+this.getM()+\")\"}},{key:\"setCoordinate\",value:function(t){this.x=t.x,this.y=t.y,this.z=t.getZ(),this._m=t.getM()}}],[{key:\"constructor_\",value:function(){if(this._m=null,0===arguments.length)X.constructor_.call(this),this._m=0;else if(1===arguments.length){if(arguments[0]instanceof s){var t=arguments[0];X.constructor_.call(this,t),this._m=t._m}else if(arguments[0]instanceof X){var e=arguments[0];X.constructor_.call(this,e),this._m=this.getM()}}else if(4===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2],a=arguments[3];X.constructor_.call(this,n,i,r),this._m=a}}}]),s}(X),Ht=function(){function e(){t(this,e)}return n(e,null,[{key:\"measures\",value:function(t){return t instanceof Bt?0:t instanceof Ut||t instanceof Vt?1:0}},{key:\"dimension\",value:function(t){return t instanceof Bt?2:t instanceof Ut?3:t instanceof Vt?4:3}},{key:\"create\",value:function(){if(1===arguments.length){var t=arguments[0];return e.create(t,0)}if(2===arguments.length){var n=arguments[0],i=arguments[1];return 2===n?new Bt:3===n&&0===i?new X:3===n&&1===i?new Ut:4===n&&1===i?new Vt:new X}}}]),e}(),Zt=function(e){i(a,e);var s=c(a);function a(){var e;return t(this,a),e=s.call(this),a.constructor_.apply(l(e),arguments),e}return n(a,[{key:\"getCoordinate\",value:function(t){return this.get(t)}},{key:\"addAll\",value:function(){if(2===arguments.length&&\"boolean\"==typeof arguments[1]&&rt(arguments[0],Z)){for(var t=arguments[0],e=arguments[1],n=!1,i=t.iterator();i.hasNext();)this.add(i.next(),e),n=!0;return n}return f(r(a.prototype),\"addAll\",this).apply(this,arguments)}},{key:\"clone\",value:function(){for(var t=f(r(a.prototype),\"clone\",this).call(this),e=0;e<this.size();e++)t.add(e,this.get(e).clone());return t}},{key:\"toCoordinateArray\",value:function(){if(0===arguments.length)return this.toArray(a.coordArrayType);if(1===arguments.length){var t=arguments[0];if(t)return this.toArray(a.coordArrayType);for(var e=this.size(),n=new Array(e).fill(null),i=0;i<e;i++)n[i]=this.get(e-i-1);return n}}},{key:\"add\",value:function(){if(1===arguments.length){var t=arguments[0];return f(r(a.prototype),\"add\",this).call(this,t)}if(2===arguments.length){if(arguments[0]instanceof Array&&\"boolean\"==typeof arguments[1]){var e=arguments[0],n=arguments[1];return this.add(e,n,!0),!0}if(arguments[0]instanceof X&&\"boolean\"==typeof arguments[1]){var i=arguments[0],s=arguments[1];if(!s&&this.size()>=1){var o=this.get(this.size()-1);if(o.equals2D(i))return null}f(r(a.prototype),\"add\",this).call(this,i)}else if(arguments[0]instanceof Object&&\"boolean\"==typeof arguments[1]){var u=arguments[0],l=arguments[1];return this.add(u,l),!0}}else if(3===arguments.length){if(\"boolean\"==typeof arguments[2]&&arguments[0]instanceof Array&&\"boolean\"==typeof arguments[1]){var h=arguments[0],c=arguments[1],v=arguments[2];if(v)for(var g=0;g<h.length;g++)this.add(h[g],c);else for(var y=h.length-1;y>=0;y--)this.add(h[y],c);return!0}if(\"boolean\"==typeof arguments[2]&&Number.isInteger(arguments[0])&&arguments[1]instanceof X){var d=arguments[0],_=arguments[1],p=arguments[2];if(!p){var m=this.size();if(m>0){if(d>0){var k=this.get(d-1);if(k.equals2D(_))return null}if(d<m){var x=this.get(d);if(x.equals2D(_))return null}}}f(r(a.prototype),\"add\",this).call(this,d,_)}}else if(4===arguments.length){var I=arguments[0],E=arguments[1],N=arguments[2],T=arguments[3],S=1;N>T&&(S=-1);for(var L=N;L!==T;L+=S)this.add(I[L],E);return!0}}},{key:\"closeRing\",value:function(){if(this.size()>0){var t=this.get(0).copy();this.add(t,!1)}}}],[{key:\"constructor_\",value:function(){if(0===arguments.length);else if(1===arguments.length){var t=arguments[0];this.ensureCapacity(t.length),this.add(t,!0)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.ensureCapacity(e.length),this.add(e,n)}}}]),a}(yt);Zt.coordArrayType=new Array(0).fill(null);var jt=function(){function e(){t(this,e)}return n(e,null,[{key:\"isRing\",value:function(t){return!(t.length<4)&&!!t[0].equals2D(t[t.length-1])}},{key:\"ptNotInList\",value:function(t,n){for(var i=0;i<t.length;i++){var r=t[i];if(e.indexOf(r,n)<0)return r}return null}},{key:\"scroll\",value:function(t,n){var i=e.indexOf(n,t);if(i<0)return null;var r=new Array(t.length).fill(null);mt.arraycopy(t,i,r,0,t.length-i),mt.arraycopy(t,0,r,t.length-i,i),mt.arraycopy(r,0,t,0,t.length)}},{key:\"equals\",value:function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];if(t===e)return!0;if(null===t||null===e)return!1;if(t.length!==e.length)return!1;for(var n=0;n<t.length;n++)if(!t[n].equals(e[n]))return!1;return!0}if(3===arguments.length){var i=arguments[0],r=arguments[1],s=arguments[2];if(i===r)return!0;if(null===i||null===r)return!1;if(i.length!==r.length)return!1;for(var a=0;a<i.length;a++)if(0!==s.compare(i[a],r[a]))return!1;return!0}}},{key:\"intersection\",value:function(t,e){for(var n=new Zt,i=0;i<t.length;i++)e.intersects(t[i])&&n.add(t[i],!0);return n.toCoordinateArray()}},{key:\"measures\",value:function(t){if(null===t||0===t.length)return 0;var e,n=0,i=d(t);try{for(i.s();!(e=i.n()).done;){var r=e.value;n=Math.max(n,Ht.measures(r))}}catch(t){i.e(t)}finally{i.f()}return n}},{key:\"hasRepeatedPoints\",value:function(t){for(var e=1;e<t.length;e++)if(t[e-1].equals(t[e]))return!0;return!1}},{key:\"removeRepeatedPoints\",value:function(t){return e.hasRepeatedPoints(t)?new Zt(t,!1).toCoordinateArray():t}},{key:\"reverse\",value:function(t){for(var e=t.length-1,n=Math.trunc(e/2),i=0;i<=n;i++){var r=t[i];t[i]=t[e-i],t[e-i]=r}}},{key:\"removeNull\",value:function(t){for(var e=0,n=0;n<t.length;n++)null!==t[n]&&e++;var i=new Array(e).fill(null);if(0===e)return i;for(var r=0,s=0;s<t.length;s++)null!==t[s]&&(i[r++]=t[s]);return i}},{key:\"copyDeep\",value:function(){if(1===arguments.length){for(var t=arguments[0],e=new Array(t.length).fill(null),n=0;n<t.length;n++)e[n]=t[n].copy();return e}if(5===arguments.length)for(var i=arguments[0],r=arguments[1],s=arguments[2],a=arguments[3],o=arguments[4],u=0;u<o;u++)s[a+u]=i[r+u].copy()}},{key:\"isEqualReversed\",value:function(t,e){for(var n=0;n<t.length;n++){var i=t[n],r=e[t.length-n-1];if(0!==i.compareTo(r))return!1}return!0}},{key:\"envelope\",value:function(t){for(var e=new U,n=0;n<t.length;n++)e.expandToInclude(t[n]);return e}},{key:\"toCoordinateArray\",value:function(t){return t.toArray(e.coordArrayType)}},{key:\"dimension\",value:function(t){if(null===t||0===t.length)return 3;var e,n=0,i=d(t);try{for(i.s();!(e=i.n()).done;){var r=e.value;n=Math.max(n,Ht.dimension(r))}}catch(t){i.e(t)}finally{i.f()}return n}},{key:\"atLeastNCoordinatesOrNothing\",value:function(t,e){return e.length>=t?e:[]}},{key:\"indexOf\",value:function(t,e){for(var n=0;n<e.length;n++)if(t.equals(e[n]))return n;return-1}},{key:\"increasingDirection\",value:function(t){for(var e=0;e<Math.trunc(t.length/2);e++){var n=t.length-1-e,i=t[e].compareTo(t[n]);if(0!==i)return i}return 1}},{key:\"compare\",value:function(t,e){for(var n=0;n<t.length&&n<e.length;){var i=t[n].compareTo(e[n]);if(0!==i)return i;n++}return n<e.length?-1:n<t.length?1:0}},{key:\"minCoordinate\",value:function(t){for(var e=null,n=0;n<t.length;n++)(null===e||e.compareTo(t[n])>0)&&(e=t[n]);return e}},{key:\"extract\",value:function(t,e,n){e=kt.clamp(e,0,t.length);var i=(n=kt.clamp(n,-1,t.length))-e+1;n<0&&(i=0),e>=t.length&&(i=0),n<e&&(i=0);var r=new Array(i).fill(null);if(0===i)return r;for(var s=0,a=e;a<=n;a++)r[s++]=t[a];return r}}]),e}(),Wt=function(){function e(){t(this,e)}return n(e,[{key:\"compare\",value:function(t,e){var n=t,i=e;return jt.compare(n,i)}},{key:\"interfaces_\",get:function(){return[P]}}]),e}(),Kt=function(){function e(){t(this,e)}return n(e,[{key:\"compare\",value:function(t,e){var n=t,i=e;if(n.length<i.length)return-1;if(n.length>i.length)return 1;if(0===n.length)return 0;var r=jt.compare(n,i);return jt.isEqualReversed(n,i)?0:r}},{key:\"OLDcompare\",value:function(t,e){var n=t,i=e;if(n.length<i.length)return-1;if(n.length>i.length)return 1;if(0===n.length)return 0;for(var r=jt.increasingDirection(n),s=jt.increasingDirection(i),a=r>0?0:n.length-1,o=s>0?0:n.length-1,u=0;u<n.length;u++){var l=n[a].compareTo(i[o]);if(0!==l)return l;a+=r,o+=s}return 0}},{key:\"interfaces_\",get:function(){return[P]}}]),e}();jt.ForwardComparator=Wt,jt.BidirectionalComparator=Kt,jt.coordArrayType=new Array(0).fill(null);var Jt=function(){function e(n){t(this,e),this.str=n}return n(e,[{key:\"append\",value:function(t){this.str+=t}},{key:\"setCharAt\",value:function(t,e){this.str=this.str.substr(0,t)+e+this.str.substr(t+1)}},{key:\"toString\",value:function(){return this.str}}]),e}(),Qt=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"getM\",value:function(t){return this.hasM()?this._coordinates[t].getM():A.NaN}},{key:\"setOrdinate\",value:function(t,e,n){switch(e){case ht.X:this._coordinates[t].x=n;break;case ht.Y:this._coordinates[t].y=n;break;default:this._coordinates[t].setOrdinate(e,n)}}},{key:\"getZ\",value:function(t){return this.hasZ()?this._coordinates[t].getZ():A.NaN}},{key:\"size\",value:function(){return this._coordinates.length}},{key:\"getOrdinate\",value:function(t,e){switch(e){case ht.X:return this._coordinates[t].x;case ht.Y:return this._coordinates[t].y;default:return this._coordinates[t].getOrdinate(e)}}},{key:\"getCoordinate\",value:function(){if(1===arguments.length){var t=arguments[0];return this._coordinates[t]}if(2===arguments.length){var e=arguments[0],n=arguments[1];n.setCoordinate(this._coordinates[e])}}},{key:\"getCoordinateCopy\",value:function(t){var e=this.createCoordinate();return e.setCoordinate(this._coordinates[t]),e}},{key:\"createCoordinate\",value:function(){return Ht.create(this.getDimension(),this.getMeasures())}},{key:\"getDimension\",value:function(){return this._dimension}},{key:\"getX\",value:function(t){return this._coordinates[t].x}},{key:\"getMeasures\",value:function(){return this._measures}},{key:\"expandEnvelope\",value:function(t){for(var e=0;e<this._coordinates.length;e++)t.expandToInclude(this._coordinates[e]);return t}},{key:\"copy\",value:function(){for(var t=new Array(this.size()).fill(null),n=0;n<this._coordinates.length;n++){var i=this.createCoordinate();i.setCoordinate(this._coordinates[n]),t[n]=i}return new e(t,this._dimension,this._measures)}},{key:\"toString\",value:function(){if(this._coordinates.length>0){var t=new Jt(17*this._coordinates.length);t.append(\"(\"),t.append(this._coordinates[0]);for(var e=1;e<this._coordinates.length;e++)t.append(\", \"),t.append(this._coordinates[e]);return t.append(\")\"),t.toString()}return\"()\"}},{key:\"getY\",value:function(t){return this._coordinates[t].y}},{key:\"toCoordinateArray\",value:function(){return this._coordinates}},{key:\"interfaces_\",get:function(){return[ht,E]}}],[{key:\"constructor_\",value:function(){if(this._dimension=3,this._measures=0,this._coordinates=null,1===arguments.length){if(arguments[0]instanceof Array){var t=arguments[0];e.constructor_.call(this,t,jt.dimension(t),jt.measures(t))}else if(Number.isInteger(arguments[0])){var n=arguments[0];this._coordinates=new Array(n).fill(null);for(var i=0;i<n;i++)this._coordinates[i]=new X}else if(rt(arguments[0],ht)){var r=arguments[0];if(null===r)return this._coordinates=new Array(0).fill(null),null;this._dimension=r.getDimension(),this._measures=r.getMeasures(),this._coordinates=new Array(r.size()).fill(null);for(var s=0;s<this._coordinates.length;s++)this._coordinates[s]=r.getCoordinateCopy(s)}}else if(2===arguments.length){if(arguments[0]instanceof Array&&Number.isInteger(arguments[1])){var a=arguments[0],o=arguments[1];e.constructor_.call(this,a,o,jt.measures(a))}else if(Number.isInteger(arguments[0])&&Number.isInteger(arguments[1])){var u=arguments[0],l=arguments[1];this._coordinates=new Array(u).fill(null),this._dimension=l;for(var h=0;h<u;h++)this._coordinates[h]=Ht.create(l)}}else if(3===arguments.length)if(Number.isInteger(arguments[2])&&arguments[0]instanceof Array&&Number.isInteger(arguments[1])){var c=arguments[0],f=arguments[1],v=arguments[2];this._dimension=f,this._measures=v,this._coordinates=null===c?new Array(0).fill(null):c}else if(Number.isInteger(arguments[2])&&Number.isInteger(arguments[0])&&Number.isInteger(arguments[1])){var g=arguments[0],y=arguments[1],d=arguments[2];this._coordinates=new Array(g).fill(null),this._dimension=y,this._measures=d;for(var _=0;_<g;_++)this._coordinates[_]=this.createCoordinate()}}}]),e}(),$t=function(){function e(){t(this,e)}return n(e,[{key:\"readResolve\",value:function(){return e.instance()}},{key:\"create\",value:function(){if(1===arguments.length){if(arguments[0]instanceof Array){var t=arguments[0];return new Qt(t)}if(rt(arguments[0],ht)){var e=arguments[0];return new Qt(e)}}else{if(2===arguments.length){var n=arguments[0],i=arguments[1];return i>3&&(i=3),i<2&&(i=2),new Qt(n,i)}if(3===arguments.length){var r=arguments[0],s=arguments[1],a=arguments[2],o=s-a;return a>1&&(a=1),o>3&&(o=3),o<2&&(o=2),new Qt(r,o+a,a)}}}},{key:\"interfaces_\",get:function(){return[It,E]}}],[{key:\"instance\",value:function(){return e.instanceObject}}]),e}();$t.instanceObject=new $t;var te=function(e){i(a,e);var s=c(a);function a(){var e;return t(this,a),e=s.call(this),a.constructor_.apply(l(e),arguments),e}return n(a,[{key:\"copyInternal\",value:function(){for(var t=new Array(this._geometries.length).fill(null),e=0;e<t.length;e++)t[e]=this._geometries[e].copy();return new a(t,this._factory)}},{key:\"equalsExact\",value:function(){if(2===arguments.length&&\"number\"==typeof arguments[1]&&arguments[0]instanceof V){var t=arguments[0],e=arguments[1];return!!this.isEquivalentClass(t)&&f(r(a.prototype),\"equalsExact\",this).call(this,t,e)}return f(r(a.prototype),\"equalsExact\",this).apply(this,arguments)}},{key:\"getBoundaryDimension\",value:function(){return 1}},{key:\"getTypeCode\",value:function(){return V.TYPECODE_MULTIPOLYGON}},{key:\"getDimension\",value:function(){return 2}},{key:\"getBoundary\",value:function(){if(this.isEmpty())return this.getFactory().createMultiLineString();for(var t=new yt,e=0;e<this._geometries.length;e++)for(var n=this._geometries[e].getBoundary(),i=0;i<n.getNumGeometries();i++)t.add(n.getGeometryN(i));var r=new Array(t.size()).fill(null);return this.getFactory().createMultiLineString(t.toArray(r))}},{key:\"getGeometryType\",value:function(){return V.TYPENAME_MULTIPOLYGON}},{key:\"interfaces_\",get:function(){return[Pt]}}],[{key:\"constructor_\",value:function(){var t=arguments[0],e=arguments[1];Yt.constructor_.call(this,t,e)}}]),a}(Yt),ee=function(){function e(){t(this,e)}return n(e,[{key:\"get\",value:function(){}},{key:\"put\",value:function(){}},{key:\"size\",value:function(){}},{key:\"values\",value:function(){}},{key:\"entrySet\",value:function(){}}]),e}(),ne=function(e){i(s,e);var r=c(s);function s(){var e;return t(this,s),(e=r.call(this)).map=new Map,e}return n(s,[{key:\"get\",value:function(t){return this.map.get(t)||null}},{key:\"put\",value:function(t,e){return this.map.set(t,e),e}},{key:\"values\",value:function(){for(var t=new yt,e=this.map.values(),n=e.next();!n.done;)t.add(n.value),n=e.next();return t}},{key:\"entrySet\",value:function(){var t=new J;return this.map.entries().forEach((function(e){return t.add(e)})),t}},{key:\"size\",value:function(){return this.map.size()}}]),s}(ee),ie=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"equals\",value:function(t){if(!(t instanceof e))return!1;var n=t;return this._modelType===n._modelType&&this._scale===n._scale}},{key:\"compareTo\",value:function(t){var e=t,n=this.getMaximumSignificantDigits(),i=e.getMaximumSignificantDigits();return at.compare(n,i)}},{key:\"getScale\",value:function(){return this._scale}},{key:\"isFloating\",value:function(){return this._modelType===e.FLOATING||this._modelType===e.FLOATING_SINGLE}},{key:\"getType\",value:function(){return this._modelType}},{key:\"toString\",value:function(){var t=\"UNKNOWN\";return this._modelType===e.FLOATING?t=\"Floating\":this._modelType===e.FLOATING_SINGLE?t=\"Floating-Single\":this._modelType===e.FIXED&&(t=\"Fixed (Scale=\"+this.getScale()+\")\"),t}},{key:\"makePrecise\",value:function(){if(\"number\"==typeof arguments[0]){var t=arguments[0];if(A.isNaN(t))return t;if(this._modelType===e.FLOATING_SINGLE){return t}return this._modelType===e.FIXED?Math.round(t*this._scale)/this._scale:t}if(arguments[0]instanceof X){var n=arguments[0];if(this._modelType===e.FLOATING)return null;n.x=this.makePrecise(n.x),n.y=this.makePrecise(n.y)}}},{key:\"getMaximumSignificantDigits\",value:function(){var t=16;return this._modelType===e.FLOATING?t=16:this._modelType===e.FLOATING_SINGLE?t=6:this._modelType===e.FIXED&&(t=1+Math.trunc(Math.ceil(Math.log(this.getScale())/Math.log(10)))),t}},{key:\"setScale\",value:function(t){this._scale=Math.abs(t)}},{key:\"interfaces_\",get:function(){return[E,x]}}],[{key:\"constructor_\",value:function(){if(this._modelType=null,this._scale=null,0===arguments.length)this._modelType=e.FLOATING;else if(1===arguments.length)if(arguments[0]instanceof re){var t=arguments[0];this._modelType=t,t===e.FIXED&&this.setScale(1)}else if(\"number\"==typeof arguments[0]){var n=arguments[0];this._modelType=e.FIXED,this.setScale(n)}else if(arguments[0]instanceof e){var i=arguments[0];this._modelType=i._modelType,this._scale=i._scale}}},{key:\"mostPrecise\",value:function(t,e){return t.compareTo(e)>=0?t:e}}]),e}(),re=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"readResolve\",value:function(){return e.nameToTypeMap.get(this._name)}},{key:\"toString\",value:function(){return this._name}},{key:\"interfaces_\",get:function(){return[E]}}],[{key:\"constructor_\",value:function(){this._name=null;var t=arguments[0];this._name=t,e.nameToTypeMap.put(t,this)}}]),e}();re.nameToTypeMap=new ne,ie.Type=re,ie.FIXED=new re(\"FIXED\"),ie.FLOATING=new re(\"FLOATING\"),ie.FLOATING_SINGLE=new re(\"FLOATING SINGLE\"),ie.maximumPreciseValue=9007199254740992;var se=function(e){i(a,e);var s=c(a);function a(){var e;return t(this,a),e=s.call(this),a.constructor_.apply(l(e),arguments),e}return n(a,[{key:\"copyInternal\",value:function(){for(var t=new Array(this._geometries.length).fill(null),e=0;e<t.length;e++)t[e]=this._geometries[e].copy();return new a(t,this._factory)}},{key:\"equalsExact\",value:function(){if(2===arguments.length&&\"number\"==typeof arguments[1]&&arguments[0]instanceof V){var t=arguments[0],e=arguments[1];return!!this.isEquivalentClass(t)&&f(r(a.prototype),\"equalsExact\",this).call(this,t,e)}return f(r(a.prototype),\"equalsExact\",this).apply(this,arguments)}},{key:\"getBoundaryDimension\",value:function(){return this.isClosed()?Lt.FALSE:0}},{key:\"isClosed\",value:function(){if(this.isEmpty())return!1;for(var t=0;t<this._geometries.length;t++)if(!this._geometries[t].isClosed())return!1;return!0}},{key:\"getTypeCode\",value:function(){return V.TYPECODE_MULTILINESTRING}},{key:\"getDimension\",value:function(){return 1}},{key:\"getBoundary\",value:function(){throw new W}},{key:\"getGeometryType\",value:function(){return V.TYPENAME_MULTILINESTRING}},{key:\"interfaces_\",get:function(){return[Tt]}}],[{key:\"constructor_\",value:function(){var t=arguments[0],e=arguments[1];Yt.constructor_.call(this,t,e)}}]),a}(Yt),ae=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"createEmpty\",value:function(t){switch(t){case-1:return this.createGeometryCollection();case 0:return this.createPoint();case 1:return this.createLineString();case 2:return this.createPolygon();default:throw new m(\"Invalid dimension: \"+t)}}},{key:\"toGeometry\",value:function(t){return t.isNull()?this.createPoint():t.getMinX()===t.getMaxX()&&t.getMinY()===t.getMaxY()?this.createPoint(new X(t.getMinX(),t.getMinY())):t.getMinX()===t.getMaxX()||t.getMinY()===t.getMaxY()?this.createLineString([new X(t.getMinX(),t.getMinY()),new X(t.getMaxX(),t.getMaxY())]):this.createPolygon(this.createLinearRing([new X(t.getMinX(),t.getMinY()),new X(t.getMinX(),t.getMaxY()),new X(t.getMaxX(),t.getMaxY()),new X(t.getMaxX(),t.getMinY()),new X(t.getMinX(),t.getMinY())]),null)}},{key:\"createLineString\",value:function(){if(0===arguments.length)return this.createLineString(this.getCoordinateSequenceFactory().create([]));if(1===arguments.length){if(arguments[0]instanceof Array){var t=arguments[0];return this.createLineString(null!==t?this.getCoordinateSequenceFactory().create(t):null)}if(rt(arguments[0],ht)){var e=arguments[0];return new wt(e,this)}}}},{key:\"createMultiLineString\",value:function(){if(0===arguments.length)return new se(null,this);if(1===arguments.length){var t=arguments[0];return new se(t,this)}}},{key:\"buildGeometry\",value:function(t){for(var n=null,i=!1,r=!1,s=t.iterator();s.hasNext();){var a=s.next(),o=a.getTypeCode();null===n&&(n=o),o!==n&&(i=!0),a instanceof Yt&&(r=!0)}if(null===n)return this.createGeometryCollection();if(i||r)return this.createGeometryCollection(e.toGeometryArray(t));var u=t.iterator().next();if(t.size()>1){if(u instanceof Dt)return this.createMultiPolygon(e.toPolygonArray(t));if(u instanceof wt)return this.createMultiLineString(e.toLineStringArray(t));if(u instanceof bt)return this.createMultiPoint(e.toPointArray(t));G.shouldNeverReachHere(\"Unhandled geometry type: \"+u.getGeometryType())}return u}},{key:\"createMultiPointFromCoords\",value:function(t){return this.createMultiPoint(null!==t?this.getCoordinateSequenceFactory().create(t):null)}},{key:\"createPoint\",value:function(){if(0===arguments.length)return this.createPoint(this.getCoordinateSequenceFactory().create([]));if(1===arguments.length){if(arguments[0]instanceof X){var t=arguments[0];return this.createPoint(null!==t?this.getCoordinateSequenceFactory().create([t]):null)}if(rt(arguments[0],ht)){var e=arguments[0];return new bt(e,this)}}}},{key:\"getCoordinateSequenceFactory\",value:function(){return this._coordinateSequenceFactory}},{key:\"createPolygon\",value:function(){if(0===arguments.length)return this.createPolygon(null,null);if(1===arguments.length){if(rt(arguments[0],ht)){var t=arguments[0];return this.createPolygon(this.createLinearRing(t))}if(arguments[0]instanceof Array){var e=arguments[0];return this.createPolygon(this.createLinearRing(e))}if(arguments[0]instanceof Xt){var n=arguments[0];return this.createPolygon(n,null)}}else if(2===arguments.length){var i=arguments[0],r=arguments[1];return new Dt(i,r,this)}}},{key:\"getSRID\",value:function(){return this._SRID}},{key:\"createGeometryCollection\",value:function(){if(0===arguments.length)return new Yt(null,this);if(1===arguments.length){var t=arguments[0];return new Yt(t,this)}}},{key:\"getPrecisionModel\",value:function(){return this._precisionModel}},{key:\"createLinearRing\",value:function(){if(0===arguments.length)return this.createLinearRing(this.getCoordinateSequenceFactory().create([]));if(1===arguments.length){if(arguments[0]instanceof Array){var t=arguments[0];return this.createLinearRing(null!==t?this.getCoordinateSequenceFactory().create(t):null)}if(rt(arguments[0],ht)){var e=arguments[0];return new Xt(e,this)}}}},{key:\"createMultiPolygon\",value:function(){if(0===arguments.length)return new te(null,this);if(1===arguments.length){var t=arguments[0];return new te(t,this)}}},{key:\"createMultiPoint\",value:function(){if(0===arguments.length)return new zt(null,this);if(1===arguments.length){if(arguments[0]instanceof Array){var t=arguments[0];return new zt(t,this)}if(rt(arguments[0],ht)){var e=arguments[0];if(null===e)return this.createMultiPoint(new Array(0).fill(null));for(var n=new Array(e.size()).fill(null),i=0;i<e.size();i++){var r=this.getCoordinateSequenceFactory().create(1,e.getDimension(),e.getMeasures());St.copy(e,i,r,0,1),n[i]=this.createPoint(r)}return this.createMultiPoint(n)}}}},{key:\"interfaces_\",get:function(){return[E]}}],[{key:\"constructor_\",value:function(){if(this._precisionModel=null,this._coordinateSequenceFactory=null,this._SRID=null,0===arguments.length)e.constructor_.call(this,new ie,0);else if(1===arguments.length){if(rt(arguments[0],It)){var t=arguments[0];e.constructor_.call(this,new ie,0,t)}else if(arguments[0]instanceof ie){var n=arguments[0];e.constructor_.call(this,n,0,e.getDefaultCoordinateSequenceFactory())}}else if(2===arguments.length){var i=arguments[0],r=arguments[1];e.constructor_.call(this,i,r,e.getDefaultCoordinateSequenceFactory())}else if(3===arguments.length){var s=arguments[0],a=arguments[1],o=arguments[2];this._precisionModel=s,this._coordinateSequenceFactory=o,this._SRID=a}}},{key:\"toMultiPolygonArray\",value:function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)}},{key:\"toGeometryArray\",value:function(t){if(null===t)return null;var e=new Array(t.size()).fill(null);return t.toArray(e)}},{key:\"getDefaultCoordinateSequenceFactory\",value:function(){return $t.instance()}},{key:\"toMultiLineStringArray\",value:function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)}},{key:\"toLineStringArray\",value:function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)}},{key:\"toMultiPointArray\",value:function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)}},{key:\"toLinearRingArray\",value:function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)}},{key:\"toPointArray\",value:function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)}},{key:\"toPolygonArray\",value:function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)}},{key:\"createPointFromInternalCoord\",value:function(t,e){return e.getPrecisionModel().makePrecise(t),e.getFactory().createPoint(t)}}]),e}(),oe=\"XY\",ue=\"XYZ\",le=\"XYM\",he=\"XYZM\",ce={POINT:\"Point\",LINE_STRING:\"LineString\",LINEAR_RING:\"LinearRing\",POLYGON:\"Polygon\",MULTI_POINT:\"MultiPoint\",MULTI_LINE_STRING:\"MultiLineString\",MULTI_POLYGON:\"MultiPolygon\",GEOMETRY_COLLECTION:\"GeometryCollection\",CIRCLE:\"Circle\"},fe=\"EMPTY\",ve=1,ge=2,ye=3,de=4,_e=5,pe=6,me={};for(var ke in ce)me[ke]=ce[ke].toUpperCase();var xe=function(){function e(n){t(this,e),this.wkt=n,this.index_=-1}return n(e,[{key:\"isAlpha_\",value:function(t){return t>=\"a\"&&t<=\"z\"||t>=\"A\"&&t<=\"Z\"}},{key:\"isNumeric_\",value:function(t,e){return t>=\"0\"&&t<=\"9\"||\".\"==t&&!(void 0!==e&&e)}},{key:\"isWhiteSpace_\",value:function(t){return\" \"==t||\"\\t\"==t||\"\\r\"==t||\"\\n\"==t}},{key:\"nextChar_\",value:function(){return this.wkt.charAt(++this.index_)}},{key:\"nextToken\",value:function(){var t,e=this.nextChar_(),n=this.index_,i=e;if(\"(\"==e)t=ge;else if(\",\"==e)t=_e;else if(\")\"==e)t=ye;else if(this.isNumeric_(e)||\"-\"==e)t=de,i=this.readNumber_();else if(this.isAlpha_(e))t=ve,i=this.readText_();else{if(this.isWhiteSpace_(e))return this.nextToken();if(\"\"!==e)throw new Error(\"Unexpected character: \"+e);t=pe}return{position:n,value:i,type:t}}},{key:\"readNumber_\",value:function(){var t,e=this.index_,n=!1,i=!1;do{\".\"==t?n=!0:\"e\"!=t&&\"E\"!=t||(i=!0),t=this.nextChar_()}while(this.isNumeric_(t,n)||!i&&(\"e\"==t||\"E\"==t)||i&&(\"-\"==t||\"+\"==t));return parseFloat(this.wkt.substring(e,this.index_--))}},{key:\"readText_\",value:function(){var t,e=this.index_;do{t=this.nextChar_()}while(this.isAlpha_(t));return this.wkt.substring(e,this.index_--).toUpperCase()}}]),e}(),Ie=function(){function e(n,i){t(this,e),this.lexer_=n,this.token_,this.layout_=oe,this.factory=i}return n(e,[{key:\"consume_\",value:function(){this.token_=this.lexer_.nextToken()}},{key:\"isTokenType\",value:function(t){return this.token_.type==t}},{key:\"match\",value:function(t){var e=this.isTokenType(t);return e&&this.consume_(),e}},{key:\"parse\",value:function(){return this.consume_(),this.parseGeometry_()}},{key:\"parseGeometryLayout_\",value:function(){var t=oe,e=this.token_;if(this.isTokenType(ve)){var n=e.value;\"Z\"===n?t=ue:\"M\"===n?t=le:\"ZM\"===n&&(t=he),t!==oe&&this.consume_()}return t}},{key:\"parseGeometryCollectionText_\",value:function(){if(this.match(ge)){var t=[];do{t.push(this.parseGeometry_())}while(this.match(_e));if(this.match(ye))return t}else if(this.isEmptyGeometry_())return[];throw new Error(this.formatErrorMessage_())}},{key:\"parsePointText_\",value:function(){if(this.match(ge)){var t=this.parsePoint_();if(this.match(ye))return t}else if(this.isEmptyGeometry_())return null;throw new Error(this.formatErrorMessage_())}},{key:\"parseLineStringText_\",value:function(){if(this.match(ge)){var t=this.parsePointList_();if(this.match(ye))return t}else if(this.isEmptyGeometry_())return[];throw new Error(this.formatErrorMessage_())}},{key:\"parsePolygonText_\",value:function(){if(this.match(ge)){var t=this.parseLineStringTextList_();if(this.match(ye))return t}else if(this.isEmptyGeometry_())return[];throw new Error(this.formatErrorMessage_())}},{key:\"parseMultiPointText_\",value:function(){var t;if(this.match(ge)){if(t=this.token_.type==ge?this.parsePointTextList_():this.parsePointList_(),this.match(ye))return t}else if(this.isEmptyGeometry_())return[];throw new Error(this.formatErrorMessage_())}},{key:\"parseMultiLineStringText_\",value:function(){if(this.match(ge)){var t=this.parseLineStringTextList_();if(this.match(ye))return t}else if(this.isEmptyGeometry_())return[];throw new Error(this.formatErrorMessage_())}},{key:\"parseMultiPolygonText_\",value:function(){if(this.match(ge)){var t=this.parsePolygonTextList_();if(this.match(ye))return t}else if(this.isEmptyGeometry_())return[];throw new Error(this.formatErrorMessage_())}},{key:\"parsePoint_\",value:function(){for(var t=[],e=this.layout_.length,n=0;n<e;++n){var i=this.token_;if(!this.match(de))break;t.push(i.value)}if(t.length==e)return t;throw new Error(this.formatErrorMessage_())}},{key:\"parsePointList_\",value:function(){for(var t=[this.parsePoint_()];this.match(_e);)t.push(this.parsePoint_());return t}},{key:\"parsePointTextList_\",value:function(){for(var t=[this.parsePointText_()];this.match(_e);)t.push(this.parsePointText_());return t}},{key:\"parseLineStringTextList_\",value:function(){for(var t=[this.parseLineStringText_()];this.match(_e);)t.push(this.parseLineStringText_());return t}},{key:\"parsePolygonTextList_\",value:function(){for(var t=[this.parsePolygonText_()];this.match(_e);)t.push(this.parsePolygonText_());return t}},{key:\"isEmptyGeometry_\",value:function(){var t=this.isTokenType(ve)&&this.token_.value==fe;return t&&this.consume_(),t}},{key:\"formatErrorMessage_\",value:function(){return\"Unexpected `\"+this.token_.value+\"` at position \"+this.token_.position+\" in `\"+this.lexer_.wkt+\"`\"}},{key:\"parseGeometry_\",value:function(){var t=this.factory,e=function(t){return o(X,v(t))},n=function(n){var i=n.map((function(n){return t.createLinearRing(n.map(e))}));return i.length>1?t.createPolygon(i[0],i.slice(1)):t.createPolygon(i[0])},i=this.token_;if(this.match(ve)){var r=i.value;if(this.layout_=this.parseGeometryLayout_(),\"GEOMETRYCOLLECTION\"==r){var s=this.parseGeometryCollectionText_();return t.createGeometryCollection(s)}switch(r){case\"POINT\":var a=this.parsePointText_();return a?t.createPoint(o(X,v(a))):t.createPoint();case\"LINESTRING\":var u=this.parseLineStringText_().map(e);return t.createLineString(u);case\"LINEARRING\":var l=this.parseLineStringText_().map(e);return t.createLinearRing(l);case\"POLYGON\":var h=this.parsePolygonText_();return h&&0!==h.length?n(h):t.createPolygon();case\"MULTIPOINT\":var c=this.parseMultiPointText_();if(!c||0===c.length)return t.createMultiPoint();var f=c.map(e).map((function(e){return t.createPoint(e)}));return t.createMultiPoint(f);case\"MULTILINESTRING\":var g=this.parseMultiLineStringText_().map((function(n){return t.createLineString(n.map(e))}));return t.createMultiLineString(g);case\"MULTIPOLYGON\":var y=this.parseMultiPolygonText_();if(!y||0===y.length)return t.createMultiPolygon();var d=y.map(n);return t.createMultiPolygon(d);default:throw new Error(\"Invalid geometry type: \"+r)}}throw new Error(this.formatErrorMessage_())}}]),e}();function Ee(t){if(t.isEmpty())return\"\";var e=t.getCoordinate(),n=[e.x,e.y];return void 0===e.z||Number.isNaN(e.z)||n.push(e.z),void 0===e.m||Number.isNaN(e.m)||n.push(e.m),n.join(\" \")}function Ne(t){for(var e=t.getCoordinates().map((function(t){var e=[t.x,t.y];return void 0===t.z||Number.isNaN(t.z)||e.push(t.z),void 0===t.m||Number.isNaN(t.m)||e.push(t.m),e})),n=[],i=0,r=e.length;i<r;++i)n.push(e[i].join(\" \"));return n.join(\", \")}function Te(t){var e=[];e.push(\"(\"+Ne(t.getExteriorRing())+\")\");for(var n=0,i=t.getNumInteriorRing();n<i;++n)e.push(\"(\"+Ne(t.getInteriorRingN(n))+\")\");return e.join(\", \")}var Se={Point:Ee,LineString:Ne,LinearRing:Ne,Polygon:Te,MultiPoint:function(t){for(var e=[],n=0,i=t.getNumGeometries();n<i;++n)e.push(\"(\"+Ee(t.getGeometryN(n))+\")\");return e.join(\", \")},MultiLineString:function(t){for(var e=[],n=0,i=t.getNumGeometries();n<i;++n)e.push(\"(\"+Ne(t.getGeometryN(n))+\")\");return e.join(\", \")},MultiPolygon:function(t){for(var e=[],n=0,i=t.getNumGeometries();n<i;++n)e.push(\"(\"+Te(t.getGeometryN(n))+\")\");return e.join(\", \")},GeometryCollection:function(t){for(var e=[],n=0,i=t.getNumGeometries();n<i;++n)e.push(Le(t.getGeometryN(n)));return e.join(\", \")}};function Le(t){var e=t.getGeometryType(),n=Se[e];e=e.toUpperCase();var i=function(t){var e=\"\";if(t.isEmpty())return e;var n=t.getCoordinate();return void 0===n.z||Number.isNaN(n.z)||(e+=\"Z\"),void 0===n.m||Number.isNaN(n.m)||(e+=\"M\"),e}(t);return i.length>0&&(e+=\" \"+i),t.isEmpty()?e+\" \"+fe:e+\" (\"+n(t)+\")\"}var Ce=function(){function e(n){t(this,e),this.geometryFactory=n||new ae,this.precisionModel=this.geometryFactory.getPrecisionModel()}return n(e,[{key:\"read\",value:function(t){var e=new xe(t);return new Ie(e,this.geometryFactory).parse()}},{key:\"write\",value:function(t){return Le(t)}}]),e}(),Re=function(){function e(n){t(this,e),this.parser=new Ce(n)}return n(e,[{key:\"write\",value:function(t){return this.parser.write(t)}}],[{key:\"toLineString\",value:function(t,e){if(2!==arguments.length)throw new Error(\"Not implemented\");return\"LINESTRING ( \"+t.x+\" \"+t.y+\", \"+e.x+\" \"+e.y+\" )\"}}]),e}(),we=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"getIndexAlongSegment\",value:function(t,e){return this.computeIntLineIndex(),this._intLineIndex[t][e]}},{key:\"getTopologySummary\",value:function(){var t=new Jt;return this.isEndPoint()&&t.append(\" endpoint\"),this._isProper&&t.append(\" proper\"),this.isCollinear()&&t.append(\" collinear\"),t.toString()}},{key:\"computeIntersection\",value:function(t,e,n,i){this._inputLines[0][0]=t,this._inputLines[0][1]=e,this._inputLines[1][0]=n,this._inputLines[1][1]=i,this._result=this.computeIntersect(t,e,n,i)}},{key:\"getIntersectionNum\",value:function(){return this._result}},{key:\"computeIntLineIndex\",value:function(){if(0===arguments.length)null===this._intLineIndex&&(this._intLineIndex=Array(2).fill().map((function(){return Array(2)})),this.computeIntLineIndex(0),this.computeIntLineIndex(1));else if(1===arguments.length){var t=arguments[0],e=this.getEdgeDistance(t,0),n=this.getEdgeDistance(t,1);e>n?(this._intLineIndex[t][0]=0,this._intLineIndex[t][1]=1):(this._intLineIndex[t][0]=1,this._intLineIndex[t][1]=0)}}},{key:\"isProper\",value:function(){return this.hasIntersection()&&this._isProper}},{key:\"setPrecisionModel\",value:function(t){this._precisionModel=t}},{key:\"isInteriorIntersection\",value:function(){if(0===arguments.length)return!!this.isInteriorIntersection(0)||!!this.isInteriorIntersection(1);if(1===arguments.length){for(var t=arguments[0],e=0;e<this._result;e++)if(!this._intPt[e].equals2D(this._inputLines[t][0])&&!this._intPt[e].equals2D(this._inputLines[t][1]))return!0;return!1}}},{key:\"getIntersection\",value:function(t){return this._intPt[t]}},{key:\"isEndPoint\",value:function(){return this.hasIntersection()&&!this._isProper}},{key:\"hasIntersection\",value:function(){return this._result!==e.NO_INTERSECTION}},{key:\"getEdgeDistance\",value:function(t,n){return e.computeEdgeDistance(this._intPt[n],this._inputLines[t][0],this._inputLines[t][1])}},{key:\"isCollinear\",value:function(){return this._result===e.COLLINEAR_INTERSECTION}},{key:\"toString\",value:function(){return Re.toLineString(this._inputLines[0][0],this._inputLines[0][1])+\" - \"+Re.toLineString(this._inputLines[1][0],this._inputLines[1][1])+this.getTopologySummary()}},{key:\"getEndpoint\",value:function(t,e){return this._inputLines[t][e]}},{key:\"isIntersection\",value:function(t){for(var e=0;e<this._result;e++)if(this._intPt[e].equals2D(t))return!0;return!1}},{key:\"getIntersectionAlongSegment\",value:function(t,e){return this.computeIntLineIndex(),this._intPt[this._intLineIndex[t][e]]}}],[{key:\"constructor_\",value:function(){this._result=null,this._inputLines=Array(2).fill().map((function(){return Array(2)})),this._intPt=new Array(2).fill(null),this._intLineIndex=null,this._isProper=null,this._pa=null,this._pb=null,this._precisionModel=null,this._intPt[0]=new X,this._intPt[1]=new X,this._pa=this._intPt[0],this._pb=this._intPt[1],this._result=0}},{key:\"computeEdgeDistance\",value:function(t,e,n){var i=Math.abs(n.x-e.x),r=Math.abs(n.y-e.y),s=-1;if(t.equals(e))s=0;else if(t.equals(n))s=i>r?i:r;else{var a=Math.abs(t.x-e.x),o=Math.abs(t.y-e.y);0!==(s=i>r?a:o)||t.equals(e)||(s=Math.max(a,o))}return G.isTrue(!(0===s&&!t.equals(e)),\"Bad distance calculation\"),s}},{key:\"nonRobustComputeEdgeDistance\",value:function(t,e,n){var i=t.x-e.x,r=t.y-e.y,s=Math.sqrt(i*i+r*r);return G.isTrue(!(0===s&&!t.equals(e)),\"Invalid distance calculation\"),s}}]),e}();we.DONT_INTERSECT=0,we.DO_INTERSECT=1,we.COLLINEAR=2,we.NO_INTERSECTION=0,we.POINT_INTERSECTION=1,we.COLLINEAR_INTERSECTION=2;var Oe=function(e){i(a,e);var s=c(a);function a(){return t(this,a),s.call(this)}return n(a,[{key:\"isInSegmentEnvelopes\",value:function(t){var e=new U(this._inputLines[0][0],this._inputLines[0][1]),n=new U(this._inputLines[1][0],this._inputLines[1][1]);return e.contains(t)&&n.contains(t)}},{key:\"computeIntersection\",value:function(){if(3!==arguments.length)return f(r(a.prototype),\"computeIntersection\",this).apply(this,arguments);var t=arguments[0],e=arguments[1],n=arguments[2];if(this._isProper=!1,U.intersects(e,n,t)&&0===ct.index(e,n,t)&&0===ct.index(n,e,t))return this._isProper=!0,(t.equals(e)||t.equals(n))&&(this._isProper=!1),this._result=we.POINT_INTERSECTION,null;this._result=we.NO_INTERSECTION}},{key:\"intersection\",value:function(t,e,n,i){var r=this.intersectionSafe(t,e,n,i);return this.isInSegmentEnvelopes(r)||(r=new X(a.nearestEndpoint(t,e,n,i))),null!==this._precisionModel&&this._precisionModel.makePrecise(r),r}},{key:\"checkDD\",value:function(t,e,n,i,r){var s=lt.intersection(t,e,n,i),a=this.isInSegmentEnvelopes(s);mt.out.println(\"DD in env = \"+a+\"  --------------------- \"+s),r.distance(s)>1e-4&&mt.out.println(\"Distance = \"+r.distance(s))}},{key:\"intersectionSafe\",value:function(t,e,n,i){var r=pt.intersection(t,e,n,i);return null===r&&(r=a.nearestEndpoint(t,e,n,i)),r}},{key:\"computeCollinearIntersection\",value:function(t,e,n,i){var r=U.intersects(t,e,n),s=U.intersects(t,e,i),a=U.intersects(n,i,t),o=U.intersects(n,i,e);return r&&s?(this._intPt[0]=n,this._intPt[1]=i,we.COLLINEAR_INTERSECTION):a&&o?(this._intPt[0]=t,this._intPt[1]=e,we.COLLINEAR_INTERSECTION):r&&a?(this._intPt[0]=n,this._intPt[1]=t,!n.equals(t)||s||o?we.COLLINEAR_INTERSECTION:we.POINT_INTERSECTION):r&&o?(this._intPt[0]=n,this._intPt[1]=e,!n.equals(e)||s||a?we.COLLINEAR_INTERSECTION:we.POINT_INTERSECTION):s&&a?(this._intPt[0]=i,this._intPt[1]=t,!i.equals(t)||r||o?we.COLLINEAR_INTERSECTION:we.POINT_INTERSECTION):s&&o?(this._intPt[0]=i,this._intPt[1]=e,!i.equals(e)||r||a?we.COLLINEAR_INTERSECTION:we.POINT_INTERSECTION):we.NO_INTERSECTION}},{key:\"computeIntersect\",value:function(t,e,n,i){if(this._isProper=!1,!U.intersects(t,e,n,i))return we.NO_INTERSECTION;var r=ct.index(t,e,n),s=ct.index(t,e,i);if(r>0&&s>0||r<0&&s<0)return we.NO_INTERSECTION;var a=ct.index(n,i,t),o=ct.index(n,i,e);return a>0&&o>0||a<0&&o<0?we.NO_INTERSECTION:0===r&&0===s&&0===a&&0===o?this.computeCollinearIntersection(t,e,n,i):(0===r||0===s||0===a||0===o?(this._isProper=!1,t.equals2D(n)||t.equals2D(i)?this._intPt[0]=t:e.equals2D(n)||e.equals2D(i)?this._intPt[0]=e:0===r?this._intPt[0]=new X(n):0===s?this._intPt[0]=new X(i):0===a?this._intPt[0]=new X(t):0===o&&(this._intPt[0]=new X(e))):(this._isProper=!0,this._intPt[0]=this.intersection(t,e,n,i)),we.POINT_INTERSECTION)}}],[{key:\"nearestEndpoint\",value:function(t,e,n,i){var r=t,s=xt.pointToSegment(t,n,i),a=xt.pointToSegment(e,n,i);return a<s&&(s=a,r=e),(a=xt.pointToSegment(n,t,e))<s&&(s=a,r=n),(a=xt.pointToSegment(i,t,e))<s&&(s=a,r=i),r}}]),a}(we),be=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"countSegment\",value:function(t,e){if(t.x<this._p.x&&e.x<this._p.x)return null;if(this._p.x===e.x&&this._p.y===e.y)return this._isPointOnSegment=!0,null;if(t.y===this._p.y&&e.y===this._p.y){var n=t.x,i=e.x;return n>i&&(n=e.x,i=t.x),this._p.x>=n&&this._p.x<=i&&(this._isPointOnSegment=!0),null}if(t.y>this._p.y&&e.y<=this._p.y||e.y>this._p.y&&t.y<=this._p.y){var r=ct.index(t,e,this._p);if(r===ct.COLLINEAR)return this._isPointOnSegment=!0,null;e.y<t.y&&(r=-r),r===ct.LEFT&&this._crossingCount++}}},{key:\"isPointInPolygon\",value:function(){return this.getLocation()!==H.EXTERIOR}},{key:\"getLocation\",value:function(){return this._isPointOnSegment?H.BOUNDARY:this._crossingCount%2==1?H.INTERIOR:H.EXTERIOR}},{key:\"isOnSegment\",value:function(){return this._isPointOnSegment}}],[{key:\"constructor_\",value:function(){this._p=null,this._crossingCount=0,this._isPointOnSegment=!1;var t=arguments[0];this._p=t}},{key:\"locatePointInRing\",value:function(){if(arguments[0]instanceof X&&rt(arguments[1],ht)){for(var t=arguments[0],n=arguments[1],i=new e(t),r=new X,s=new X,a=1;a<n.size();a++)if(n.getCoordinate(a,r),n.getCoordinate(a-1,s),i.countSegment(r,s),i.isOnSegment())return i.getLocation();return i.getLocation()}if(arguments[0]instanceof X&&arguments[1]instanceof Array){for(var o=arguments[0],u=arguments[1],l=new e(o),h=1;h<u.length;h++){var c=u[h],f=u[h-1];if(l.countSegment(c,f),l.isOnSegment())return l.getLocation()}return l.getLocation()}}}]),e}(),Me=function(){function e(){t(this,e)}return n(e,null,[{key:\"isOnLine\",value:function(){if(arguments[0]instanceof X&&rt(arguments[1],ht)){for(var t=arguments[0],e=arguments[1],n=new Oe,i=new X,r=new X,s=e.size(),a=1;a<s;a++)if(e.getCoordinate(a-1,i),e.getCoordinate(a,r),n.computeIntersection(t,i,r),n.hasIntersection())return!0;return!1}if(arguments[0]instanceof X&&arguments[1]instanceof Array){for(var o=arguments[0],u=arguments[1],l=new Oe,h=1;h<u.length;h++){var c=u[h-1],f=u[h];if(l.computeIntersection(o,c,f),l.hasIntersection())return!0}return!1}}},{key:\"locateInRing\",value:function(t,e){return be.locatePointInRing(t,e)}},{key:\"isInRing\",value:function(t,n){return e.locateInRing(t,n)!==H.EXTERIOR}}]),e}(),Ae=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"setAllLocations\",value:function(t){for(var e=0;e<this.location.length;e++)this.location[e]=t}},{key:\"isNull\",value:function(){for(var t=0;t<this.location.length;t++)if(this.location[t]!==H.NONE)return!1;return!0}},{key:\"setAllLocationsIfNull\",value:function(t){for(var e=0;e<this.location.length;e++)this.location[e]===H.NONE&&(this.location[e]=t)}},{key:\"isLine\",value:function(){return 1===this.location.length}},{key:\"merge\",value:function(t){if(t.location.length>this.location.length){var e=new Array(3).fill(null);e[$.ON]=this.location[$.ON],e[$.LEFT]=H.NONE,e[$.RIGHT]=H.NONE,this.location=e}for(var n=0;n<this.location.length;n++)this.location[n]===H.NONE&&n<t.location.length&&(this.location[n]=t.location[n])}},{key:\"getLocations\",value:function(){return this.location}},{key:\"flip\",value:function(){if(this.location.length<=1)return null;var t=this.location[$.LEFT];this.location[$.LEFT]=this.location[$.RIGHT],this.location[$.RIGHT]=t}},{key:\"toString\",value:function(){var t=new st;return this.location.length>1&&t.append(H.toLocationSymbol(this.location[$.LEFT])),t.append(H.toLocationSymbol(this.location[$.ON])),this.location.length>1&&t.append(H.toLocationSymbol(this.location[$.RIGHT])),t.toString()}},{key:\"setLocations\",value:function(t,e,n){this.location[$.ON]=t,this.location[$.LEFT]=e,this.location[$.RIGHT]=n}},{key:\"get\",value:function(t){return t<this.location.length?this.location[t]:H.NONE}},{key:\"isArea\",value:function(){return this.location.length>1}},{key:\"isAnyNull\",value:function(){for(var t=0;t<this.location.length;t++)if(this.location[t]===H.NONE)return!0;return!1}},{key:\"setLocation\",value:function(){if(1===arguments.length){var t=arguments[0];this.setLocation($.ON,t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.location[e]=n}}},{key:\"init\",value:function(t){this.location=new Array(t).fill(null),this.setAllLocations(H.NONE)}},{key:\"isEqualOnSide\",value:function(t,e){return this.location[e]===t.location[e]}},{key:\"allPositionsEqual\",value:function(t){for(var e=0;e<this.location.length;e++)if(this.location[e]!==t)return!1;return!0}}],[{key:\"constructor_\",value:function(){if(this.location=null,1===arguments.length){if(arguments[0]instanceof Array){var t=arguments[0];this.init(t.length)}else if(Number.isInteger(arguments[0])){var n=arguments[0];this.init(1),this.location[$.ON]=n}else if(arguments[0]instanceof e){var i=arguments[0];if(this.init(i.location.length),null!==i)for(var r=0;r<this.location.length;r++)this.location[r]=i.location[r]}}else if(3===arguments.length){var s=arguments[0],a=arguments[1],o=arguments[2];this.init(3),this.location[$.ON]=s,this.location[$.LEFT]=a,this.location[$.RIGHT]=o}}}]),e}(),Pe=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"getGeometryCount\",value:function(){var t=0;return this.elt[0].isNull()||t++,this.elt[1].isNull()||t++,t}},{key:\"setAllLocations\",value:function(t,e){this.elt[t].setAllLocations(e)}},{key:\"isNull\",value:function(t){return this.elt[t].isNull()}},{key:\"setAllLocationsIfNull\",value:function(){if(1===arguments.length){var t=arguments[0];this.setAllLocationsIfNull(0,t),this.setAllLocationsIfNull(1,t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.elt[e].setAllLocationsIfNull(n)}}},{key:\"isLine\",value:function(t){return this.elt[t].isLine()}},{key:\"merge\",value:function(t){for(var e=0;e<2;e++)null===this.elt[e]&&null!==t.elt[e]?this.elt[e]=new Ae(t.elt[e]):this.elt[e].merge(t.elt[e])}},{key:\"flip\",value:function(){this.elt[0].flip(),this.elt[1].flip()}},{key:\"getLocation\",value:function(){if(1===arguments.length){var t=arguments[0];return this.elt[t].get($.ON)}if(2===arguments.length){var e=arguments[0],n=arguments[1];return this.elt[e].get(n)}}},{key:\"toString\",value:function(){var t=new st;return null!==this.elt[0]&&(t.append(\"A:\"),t.append(this.elt[0].toString())),null!==this.elt[1]&&(t.append(\" B:\"),t.append(this.elt[1].toString())),t.toString()}},{key:\"isArea\",value:function(){if(0===arguments.length)return this.elt[0].isArea()||this.elt[1].isArea();if(1===arguments.length){var t=arguments[0];return this.elt[t].isArea()}}},{key:\"isAnyNull\",value:function(t){return this.elt[t].isAnyNull()}},{key:\"setLocation\",value:function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];this.elt[t].setLocation($.ON,e)}else if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2];this.elt[n].setLocation(i,r)}}},{key:\"isEqualOnSide\",value:function(t,e){return this.elt[0].isEqualOnSide(t.elt[0],e)&&this.elt[1].isEqualOnSide(t.elt[1],e)}},{key:\"allPositionsEqual\",value:function(t,e){return this.elt[t].allPositionsEqual(e)}},{key:\"toLine\",value:function(t){this.elt[t].isArea()&&(this.elt[t]=new Ae(this.elt[t].location[0]))}}],[{key:\"constructor_\",value:function(){if(this.elt=new Array(2).fill(null),1===arguments.length){if(Number.isInteger(arguments[0])){var t=arguments[0];this.elt[0]=new Ae(t),this.elt[1]=new Ae(t)}else if(arguments[0]instanceof e){var n=arguments[0];this.elt[0]=new Ae(n.elt[0]),this.elt[1]=new Ae(n.elt[1])}}else if(2===arguments.length){var i=arguments[0],r=arguments[1];this.elt[0]=new Ae(H.NONE),this.elt[1]=new Ae(H.NONE),this.elt[i].setLocation(r)}else if(3===arguments.length){var s=arguments[0],a=arguments[1],o=arguments[2];this.elt[0]=new Ae(s,a,o),this.elt[1]=new Ae(s,a,o)}else if(4===arguments.length){var u=arguments[0],l=arguments[1],h=arguments[2],c=arguments[3];this.elt[0]=new Ae(H.NONE,H.NONE,H.NONE),this.elt[1]=new Ae(H.NONE,H.NONE,H.NONE),this.elt[u].setLocations(l,h,c)}}},{key:\"toLineLabel\",value:function(t){for(var n=new e(H.NONE),i=0;i<2;i++)n.setLocation(i,t.getLocation(i));return n}}]),e}(),De=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"computeRing\",value:function(){if(null!==this._ring)return null;for(var t=new Array(this._pts.size()).fill(null),e=0;e<this._pts.size();e++)t[e]=this._pts.get(e);this._ring=this._geometryFactory.createLinearRing(t),this._isHole=ct.isCCW(this._ring.getCoordinates())}},{key:\"isIsolated\",value:function(){return 1===this._label.getGeometryCount()}},{key:\"computePoints\",value:function(t){this._startDe=t;var e=t,n=!0;do{if(null===e)throw new vt(\"Found null DirectedEdge\");if(e.getEdgeRing()===this)throw new vt(\"Directed Edge visited twice during ring-building at \"+e.getCoordinate());this._edges.add(e);var i=e.getLabel();G.isTrue(i.isArea()),this.mergeLabel(i),this.addPoints(e.getEdge(),e.isForward(),n),n=!1,this.setEdgeRing(e,this),e=this.getNext(e)}while(e!==this._startDe)}},{key:\"getLinearRing\",value:function(){return this._ring}},{key:\"getCoordinate\",value:function(t){return this._pts.get(t)}},{key:\"computeMaxNodeDegree\",value:function(){this._maxNodeDegree=0;var t=this._startDe;do{var e=t.getNode().getEdges().getOutgoingDegree(this);e>this._maxNodeDegree&&(this._maxNodeDegree=e),t=this.getNext(t)}while(t!==this._startDe);this._maxNodeDegree*=2}},{key:\"addPoints\",value:function(t,e,n){var i=t.getCoordinates();if(e){var r=1;n&&(r=0);for(var s=r;s<i.length;s++)this._pts.add(i[s])}else{var a=i.length-2;n&&(a=i.length-1);for(var o=a;o>=0;o--)this._pts.add(i[o])}}},{key:\"isHole\",value:function(){return this._isHole}},{key:\"setInResult\",value:function(){var t=this._startDe;do{t.getEdge().setInResult(!0),t=t.getNext()}while(t!==this._startDe)}},{key:\"containsPoint\",value:function(t){var e=this.getLinearRing();if(!e.getEnvelopeInternal().contains(t))return!1;if(!Me.isInRing(t,e.getCoordinates()))return!1;for(var n=this._holes.iterator();n.hasNext();){if(n.next().containsPoint(t))return!1}return!0}},{key:\"addHole\",value:function(t){this._holes.add(t)}},{key:\"isShell\",value:function(){return null===this._shell}},{key:\"getLabel\",value:function(){return this._label}},{key:\"getEdges\",value:function(){return this._edges}},{key:\"getMaxNodeDegree\",value:function(){return this._maxNodeDegree<0&&this.computeMaxNodeDegree(),this._maxNodeDegree}},{key:\"getShell\",value:function(){return this._shell}},{key:\"mergeLabel\",value:function(){if(1===arguments.length){var t=arguments[0];this.mergeLabel(t,0),this.mergeLabel(t,1)}else if(2===arguments.length){var e=arguments[0],n=arguments[1],i=e.getLocation(n,$.RIGHT);if(i===H.NONE)return null;if(this._label.getLocation(n)===H.NONE)return this._label.setLocation(n,i),null}}},{key:\"setShell\",value:function(t){this._shell=t,null!==t&&t.addHole(this)}},{key:\"toPolygon\",value:function(t){for(var e=new Array(this._holes.size()).fill(null),n=0;n<this._holes.size();n++)e[n]=this._holes.get(n).getLinearRing();return t.createPolygon(this.getLinearRing(),e)}}],[{key:\"constructor_\",value:function(){if(this._startDe=null,this._maxNodeDegree=-1,this._edges=new yt,this._pts=new yt,this._label=new Pe(H.NONE),this._ring=null,this._isHole=null,this._shell=null,this._holes=new yt,this._geometryFactory=null,0===arguments.length);else if(2===arguments.length){var t=arguments[0],e=arguments[1];this._geometryFactory=e,this.computePoints(t),this.computeRing()}}}]),e}(),Fe=function(e){i(s,e);var r=c(s);function s(){var e;return t(this,s),e=r.call(this),s.constructor_.apply(l(e),arguments),e}return n(s,[{key:\"setEdgeRing\",value:function(t,e){t.setMinEdgeRing(e)}},{key:\"getNext\",value:function(t){return t.getNextMin()}}],[{key:\"constructor_\",value:function(){var t=arguments[0],e=arguments[1];De.constructor_.call(this,t,e)}}]),s}(De),Ge=function(e){i(s,e);var r=c(s);function s(){var e;return t(this,s),e=r.call(this),s.constructor_.apply(l(e),arguments),e}return n(s,[{key:\"buildMinimalRings\",value:function(){var t=new yt,e=this._startDe;do{if(null===e.getMinEdgeRing()){var n=new Fe(e,this._geometryFactory);t.add(n)}e=e.getNext()}while(e!==this._startDe);return t}},{key:\"setEdgeRing\",value:function(t,e){t.setEdgeRing(e)}},{key:\"linkDirectedEdgesForMinimalEdgeRings\",value:function(){var t=this._startDe;do{t.getNode().getEdges().linkMinimalDirectedEdges(this),t=t.getNext()}while(t!==this._startDe)}},{key:\"getNext\",value:function(t){return t.getNext()}}],[{key:\"constructor_\",value:function(){var t=arguments[0],e=arguments[1];De.constructor_.call(this,t,e)}}]),s}(De),qe=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"setVisited\",value:function(t){this._isVisited=t}},{key:\"setInResult\",value:function(t){this._isInResult=t}},{key:\"isCovered\",value:function(){return this._isCovered}},{key:\"isCoveredSet\",value:function(){return this._isCoveredSet}},{key:\"setLabel\",value:function(t){this._label=t}},{key:\"getLabel\",value:function(){return this._label}},{key:\"setCovered\",value:function(t){this._isCovered=t,this._isCoveredSet=!0}},{key:\"updateIM\",value:function(t){G.isTrue(this._label.getGeometryCount()>=2,\"found partial label\"),this.computeIM(t)}},{key:\"isInResult\",value:function(){return this._isInResult}},{key:\"isVisited\",value:function(){return this._isVisited}}],[{key:\"constructor_\",value:function(){if(this._label=null,this._isInResult=!1,this._isCovered=!1,this._isCoveredSet=!1,this._isVisited=!1,0===arguments.length);else if(1===arguments.length){var t=arguments[0];this._label=t}}}]),e}(),Ye=function(e){i(a,e);var s=c(a);function a(){var e;return t(this,a),e=s.call(this),a.constructor_.apply(l(e),arguments),e}return n(a,[{key:\"isIncidentEdgeInResult\",value:function(){for(var t=this.getEdges().getEdges().iterator();t.hasNext();){if(t.next().getEdge().isInResult())return!0}return!1}},{key:\"isIsolated\",value:function(){return 1===this._label.getGeometryCount()}},{key:\"getCoordinate\",value:function(){return this._coord}},{key:\"print\",value:function(t){t.println(\"node \"+this._coord+\" lbl: \"+this._label)}},{key:\"computeIM\",value:function(t){}},{key:\"computeMergedLocation\",value:function(t,e){var n=H.NONE;if(n=this._label.getLocation(e),!t.isNull(e)){var i=t.getLocation(e);n!==H.BOUNDARY&&(n=i)}return n}},{key:\"setLabel\",value:function(){if(2!==arguments.length||!Number.isInteger(arguments[1])||!Number.isInteger(arguments[0]))return f(r(a.prototype),\"setLabel\",this).apply(this,arguments);var t=arguments[0],e=arguments[1];null===this._label?this._label=new Pe(t,e):this._label.setLocation(t,e)}},{key:\"getEdges\",value:function(){return this._edges}},{key:\"mergeLabel\",value:function(){if(arguments[0]instanceof a){var t=arguments[0];this.mergeLabel(t._label)}else if(arguments[0]instanceof Pe)for(var e=arguments[0],n=0;n<2;n++){var i=this.computeMergedLocation(e,n),r=this._label.getLocation(n);r===H.NONE&&this._label.setLocation(n,i)}}},{key:\"add\",value:function(t){this._edges.insert(t),t.setNode(this)}},{key:\"setLabelBoundary\",value:function(t){if(null===this._label)return null;var e=H.NONE;null!==this._label&&(e=this._label.getLocation(t));var n=null;switch(e){case H.BOUNDARY:n=H.INTERIOR;break;case H.INTERIOR:default:n=H.BOUNDARY}this._label.setLocation(t,n)}}],[{key:\"constructor_\",value:function(){this._coord=null,this._edges=null;var t=arguments[0],e=arguments[1];this._coord=t,this._edges=e,this._label=new Pe(0,H.NONE)}}]),a}(qe),ze=function(e){i(r,e);var n=c(r);function r(){return t(this,r),n.apply(this,arguments)}return r}(ee);function Xe(t){return null==t?0:t.color}function Be(t){return null==t?null:t.parent}function Ue(t,e){null!==t&&(t.color=e)}function Ve(t){return null==t?null:t.left}function He(t){return null==t?null:t.right}var Ze=function(e){i(s,e);var r=c(s);function s(){var e;return t(this,s),(e=r.call(this)).root_=null,e.size_=0,e}return n(s,[{key:\"get\",value:function(t){for(var e=this.root_;null!==e;){var n=t.compareTo(e.key);if(n<0)e=e.left;else{if(!(n>0))return e.value;e=e.right}}return null}},{key:\"put\",value:function(t,e){if(null===this.root_)return this.root_={key:t,value:e,left:null,right:null,parent:null,color:0,getValue:function(){return this.value},getKey:function(){return this.key}},this.size_=1,null;var n,i,r=this.root_;do{if(n=r,(i=t.compareTo(r.key))<0)r=r.left;else{if(!(i>0)){var s=r.value;return r.value=e,s}r=r.right}}while(null!==r);var a={key:t,left:null,right:null,value:e,parent:n,color:0,getValue:function(){return this.value},getKey:function(){return this.key}};return i<0?n.left=a:n.right=a,this.fixAfterInsertion(a),this.size_++,null}},{key:\"fixAfterInsertion\",value:function(t){var e;for(t.color=1;null!=t&&t!==this.root_&&1===t.parent.color;)Be(t)===Ve(Be(Be(t)))?1===Xe(e=He(Be(Be(t))))?(Ue(Be(t),0),Ue(e,0),Ue(Be(Be(t)),1),t=Be(Be(t))):(t===He(Be(t))&&(t=Be(t),this.rotateLeft(t)),Ue(Be(t),0),Ue(Be(Be(t)),1),this.rotateRight(Be(Be(t)))):1===Xe(e=Ve(Be(Be(t))))?(Ue(Be(t),0),Ue(e,0),Ue(Be(Be(t)),1),t=Be(Be(t))):(t===Ve(Be(t))&&(t=Be(t),this.rotateRight(t)),Ue(Be(t),0),Ue(Be(Be(t)),1),this.rotateLeft(Be(Be(t))));this.root_.color=0}},{key:\"values\",value:function(){var t=new yt,e=this.getFirstEntry();if(null!==e)for(t.add(e.value);null!==(e=s.successor(e));)t.add(e.value);return t}},{key:\"entrySet\",value:function(){var t=new J,e=this.getFirstEntry();if(null!==e)for(t.add(e);null!==(e=s.successor(e));)t.add(e);return t}},{key:\"rotateLeft\",value:function(t){if(null!=t){var e=t.right;t.right=e.left,null!=e.left&&(e.left.parent=t),e.parent=t.parent,null==t.parent?this.root_=e:t.parent.left===t?t.parent.left=e:t.parent.right=e,e.left=t,t.parent=e}}},{key:\"rotateRight\",value:function(t){if(null!=t){var e=t.left;t.left=e.right,null!=e.right&&(e.right.parent=t),e.parent=t.parent,null==t.parent?this.root_=e:t.parent.right===t?t.parent.right=e:t.parent.left=e,e.right=t,t.parent=e}}},{key:\"getFirstEntry\",value:function(){var t=this.root_;if(null!=t)for(;null!=t.left;)t=t.left;return t}},{key:\"size\",value:function(){return this.size_}},{key:\"containsKey\",value:function(t){for(var e=this.root_;null!==e;){var n=t.compareTo(e.key);if(n<0)e=e.left;else{if(!(n>0))return!0;e=e.right}}return!1}}],[{key:\"successor\",value:function(t){var e;if(null===t)return null;if(null!==t.right){for(e=t.right;null!==e.left;)e=e.left;return e}e=t.parent;for(var n=t;null!==e&&n===e.right;)n=e,e=e.parent;return e}}]),s}(ze),je=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"find\",value:function(t){return this.nodeMap.get(t)}},{key:\"addNode\",value:function(){if(arguments[0]instanceof X){var t=arguments[0],e=this.nodeMap.get(t);return null===e&&(e=this.nodeFact.createNode(t),this.nodeMap.put(t,e)),e}if(arguments[0]instanceof Ye){var n=arguments[0],i=this.nodeMap.get(n.getCoordinate());return null===i?(this.nodeMap.put(n.getCoordinate(),n),n):(i.mergeLabel(n),i)}}},{key:\"print\",value:function(t){for(var e=this.iterator();e.hasNext();){e.next().print(t)}}},{key:\"iterator\",value:function(){return this.nodeMap.values().iterator()}},{key:\"values\",value:function(){return this.nodeMap.values()}},{key:\"getBoundaryNodes\",value:function(t){for(var e=new yt,n=this.iterator();n.hasNext();){var i=n.next();i.getLabel().getLocation(t)===H.BOUNDARY&&e.add(i)}return e}},{key:\"add\",value:function(t){var e=t.getCoordinate();this.addNode(e).add(t)}}],[{key:\"constructor_\",value:function(){this.nodeMap=new Ze,this.nodeFact=null;var t=arguments[0];this.nodeFact=t}}]),e}(),We=function(){function e(){t(this,e)}return n(e,null,[{key:\"isNorthern\",value:function(t){return t===e.NE||t===e.NW}},{key:\"isOpposite\",value:function(t,e){return t!==e&&2===(t-e+4)%4}},{key:\"commonHalfPlane\",value:function(t,e){if(t===e)return t;if(2===(t-e+4)%4)return-1;var n=t<e?t:e;return 0===n&&3===(t>e?t:e)?3:n}},{key:\"isInHalfPlane\",value:function(t,n){return n===e.SE?t===e.SE||t===e.SW:t===n||t===n+1}},{key:\"quadrant\",value:function(){if(\"number\"==typeof arguments[0]&&\"number\"==typeof arguments[1]){var t=arguments[0],n=arguments[1];if(0===t&&0===n)throw new m(\"Cannot compute the quadrant for point ( \"+t+\", \"+n+\" )\");return t>=0?n>=0?e.NE:e.SE:n>=0?e.NW:e.SW}if(arguments[0]instanceof X&&arguments[1]instanceof X){var i=arguments[0],r=arguments[1];if(r.x===i.x&&r.y===i.y)throw new m(\"Cannot compute the quadrant for two identical points \"+i);return r.x>=i.x?r.y>=i.y?e.NE:e.SE:r.y>=i.y?e.NW:e.SW}}}]),e}();We.NE=0,We.NW=1,We.SW=2,We.SE=3;var Ke=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"compareDirection\",value:function(t){return this._dx===t._dx&&this._dy===t._dy?0:this._quadrant>t._quadrant?1:this._quadrant<t._quadrant?-1:ct.index(t._p0,t._p1,this._p1)}},{key:\"getDy\",value:function(){return this._dy}},{key:\"getCoordinate\",value:function(){return this._p0}},{key:\"setNode\",value:function(t){this._node=t}},{key:\"print\",value:function(t){var e=Math.atan2(this._dy,this._dx),n=this.getClass().getName(),i=n.lastIndexOf(\".\"),r=n.substring(i+1);t.print(\"  \"+r+\": \"+this._p0+\" - \"+this._p1+\" \"+this._quadrant+\":\"+e+\"   \"+this._label)}},{key:\"compareTo\",value:function(t){var e=t;return this.compareDirection(e)}},{key:\"getDirectedCoordinate\",value:function(){return this._p1}},{key:\"getDx\",value:function(){return this._dx}},{key:\"getLabel\",value:function(){return this._label}},{key:\"getEdge\",value:function(){return this._edge}},{key:\"getQuadrant\",value:function(){return this._quadrant}},{key:\"getNode\",value:function(){return this._node}},{key:\"toString\",value:function(){var t=Math.atan2(this._dy,this._dx),e=this.getClass().getName(),n=e.lastIndexOf(\".\");return\"  \"+e.substring(n+1)+\": \"+this._p0+\" - \"+this._p1+\" \"+this._quadrant+\":\"+t+\"   \"+this._label}},{key:\"computeLabel\",value:function(t){}},{key:\"init\",value:function(t,e){this._p0=t,this._p1=e,this._dx=e.x-t.x,this._dy=e.y-t.y,this._quadrant=We.quadrant(this._dx,this._dy),G.isTrue(!(0===this._dx&&0===this._dy),\"EdgeEnd with identical endpoints found\")}},{key:\"interfaces_\",get:function(){return[x]}}],[{key:\"constructor_\",value:function(){if(this._edge=null,this._label=null,this._node=null,this._p0=null,this._p1=null,this._dx=null,this._dy=null,this._quadrant=null,1===arguments.length){var t=arguments[0];this._edge=t}else if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2];e.constructor_.call(this,n,i,r,null)}else if(4===arguments.length){var s=arguments[0],a=arguments[1],o=arguments[2],u=arguments[3];e.constructor_.call(this,s),this.init(a,o),this._label=u}}}]),e}(),Je=function(e){i(a,e);var s=c(a);function a(){var e;return t(this,a),e=s.call(this),a.constructor_.apply(l(e),arguments),e}return n(a,[{key:\"getNextMin\",value:function(){return this._nextMin}},{key:\"getDepth\",value:function(t){return this._depth[t]}},{key:\"setVisited\",value:function(t){this._isVisited=t}},{key:\"computeDirectedLabel\",value:function(){this._label=new Pe(this._edge.getLabel()),this._isForward||this._label.flip()}},{key:\"getNext\",value:function(){return this._next}},{key:\"setDepth\",value:function(t,e){if(-999!==this._depth[t]&&this._depth[t]!==e)throw new vt(\"assigned depths do not match\",this.getCoordinate());this._depth[t]=e}},{key:\"isInteriorAreaEdge\",value:function(){for(var t=!0,e=0;e<2;e++)this._label.isArea(e)&&this._label.getLocation(e,$.LEFT)===H.INTERIOR&&this._label.getLocation(e,$.RIGHT)===H.INTERIOR||(t=!1);return t}},{key:\"setNextMin\",value:function(t){this._nextMin=t}},{key:\"print\",value:function(t){f(r(a.prototype),\"print\",this).call(this,t),t.print(\" \"+this._depth[$.LEFT]+\"/\"+this._depth[$.RIGHT]),t.print(\" (\"+this.getDepthDelta()+\")\"),this._isInResult&&t.print(\" inResult\")}},{key:\"setMinEdgeRing\",value:function(t){this._minEdgeRing=t}},{key:\"isLineEdge\",value:function(){var t=this._label.isLine(0)||this._label.isLine(1),e=!this._label.isArea(0)||this._label.allPositionsEqual(0,H.EXTERIOR),n=!this._label.isArea(1)||this._label.allPositionsEqual(1,H.EXTERIOR);return t&&e&&n}},{key:\"setEdgeRing\",value:function(t){this._edgeRing=t}},{key:\"getMinEdgeRing\",value:function(){return this._minEdgeRing}},{key:\"getDepthDelta\",value:function(){var t=this._edge.getDepthDelta();return this._isForward||(t=-t),t}},{key:\"setInResult\",value:function(t){this._isInResult=t}},{key:\"getSym\",value:function(){return this._sym}},{key:\"isForward\",value:function(){return this._isForward}},{key:\"getEdge\",value:function(){return this._edge}},{key:\"printEdge\",value:function(t){this.print(t),t.print(\" \"),this._isForward?this._edge.print(t):this._edge.printReverse(t)}},{key:\"setSym\",value:function(t){this._sym=t}},{key:\"setVisitedEdge\",value:function(t){this.setVisited(t),this._sym.setVisited(t)}},{key:\"setEdgeDepths\",value:function(t,e){var n=this.getEdge().getDepthDelta();this._isForward||(n=-n);var i=1;t===$.LEFT&&(i=-1);var r=$.opposite(t),s=e+n*i;this.setDepth(t,e),this.setDepth(r,s)}},{key:\"getEdgeRing\",value:function(){return this._edgeRing}},{key:\"isInResult\",value:function(){return this._isInResult}},{key:\"setNext\",value:function(t){this._next=t}},{key:\"isVisited\",value:function(){return this._isVisited}}],[{key:\"constructor_\",value:function(){this._isForward=null,this._isInResult=!1,this._isVisited=!1,this._sym=null,this._next=null,this._nextMin=null,this._edgeRing=null,this._minEdgeRing=null,this._depth=[0,-999,-999];var t=arguments[0],e=arguments[1];if(Ke.constructor_.call(this,t),this._isForward=e,e)this.init(t.getCoordinate(0),t.getCoordinate(1));else{var n=t.getNumPoints()-1;this.init(t.getCoordinate(n),t.getCoordinate(n-1))}this.computeDirectedLabel()}},{key:\"depthFactor\",value:function(t,e){return t===H.EXTERIOR&&e===H.INTERIOR?1:t===H.INTERIOR&&e===H.EXTERIOR?-1:0}}]),a}(Ke),Qe=function(){function e(){t(this,e)}return n(e,[{key:\"createNode\",value:function(t){return new Ye(t,null)}}]),e}(),$e=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"printEdges\",value:function(t){t.println(\"Edges:\");for(var e=0;e<this._edges.size();e++){t.println(\"edge \"+e+\":\");var n=this._edges.get(e);n.print(t),n.eiList.print(t)}}},{key:\"find\",value:function(t){return this._nodes.find(t)}},{key:\"addNode\",value:function(){if(arguments[0]instanceof Ye){var t=arguments[0];return this._nodes.addNode(t)}if(arguments[0]instanceof X){var e=arguments[0];return this._nodes.addNode(e)}}},{key:\"getNodeIterator\",value:function(){return this._nodes.iterator()}},{key:\"linkResultDirectedEdges\",value:function(){for(var t=this._nodes.iterator();t.hasNext();){t.next().getEdges().linkResultDirectedEdges()}}},{key:\"debugPrintln\",value:function(t){mt.out.println(t)}},{key:\"isBoundaryNode\",value:function(t,e){var n=this._nodes.find(e);if(null===n)return!1;var i=n.getLabel();return null!==i&&i.getLocation(t)===H.BOUNDARY}},{key:\"linkAllDirectedEdges\",value:function(){for(var t=this._nodes.iterator();t.hasNext();){t.next().getEdges().linkAllDirectedEdges()}}},{key:\"matchInSameDirection\",value:function(t,e,n,i){return!!t.equals(n)&&(ct.index(t,e,i)===ct.COLLINEAR&&We.quadrant(t,e)===We.quadrant(n,i))}},{key:\"getEdgeEnds\",value:function(){return this._edgeEndList}},{key:\"debugPrint\",value:function(t){mt.out.print(t)}},{key:\"getEdgeIterator\",value:function(){return this._edges.iterator()}},{key:\"findEdgeInSameDirection\",value:function(t,e){for(var n=0;n<this._edges.size();n++){var i=this._edges.get(n),r=i.getCoordinates();if(this.matchInSameDirection(t,e,r[0],r[1]))return i;if(this.matchInSameDirection(t,e,r[r.length-1],r[r.length-2]))return i}return null}},{key:\"insertEdge\",value:function(t){this._edges.add(t)}},{key:\"findEdgeEnd\",value:function(t){for(var e=this.getEdgeEnds().iterator();e.hasNext();){var n=e.next();if(n.getEdge()===t)return n}return null}},{key:\"addEdges\",value:function(t){for(var e=t.iterator();e.hasNext();){var n=e.next();this._edges.add(n);var i=new Je(n,!0),r=new Je(n,!1);i.setSym(r),r.setSym(i),this.add(i),this.add(r)}}},{key:\"add\",value:function(t){this._nodes.add(t),this._edgeEndList.add(t)}},{key:\"getNodes\",value:function(){return this._nodes.values()}},{key:\"findEdge\",value:function(t,e){for(var n=0;n<this._edges.size();n++){var i=this._edges.get(n),r=i.getCoordinates();if(t.equals(r[0])&&e.equals(r[1]))return i}return null}}],[{key:\"constructor_\",value:function(){if(this._edges=new yt,this._nodes=null,this._edgeEndList=new yt,0===arguments.length)this._nodes=new je(new Qe);else if(1===arguments.length){var t=arguments[0];this._nodes=new je(t)}}},{key:\"linkResultDirectedEdges\",value:function(t){for(var e=t.iterator();e.hasNext();){e.next().getEdges().linkResultDirectedEdges()}}}]),e}(),tn=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"sortShellsAndHoles\",value:function(t,e,n){for(var i=t.iterator();i.hasNext();){var r=i.next();r.isHole()?n.add(r):e.add(r)}}},{key:\"computePolygons\",value:function(t){for(var e=new yt,n=t.iterator();n.hasNext();){var i=n.next().toPolygon(this._geometryFactory);e.add(i)}return e}},{key:\"placeFreeHoles\",value:function(t,n){for(var i=n.iterator();i.hasNext();){var r=i.next();if(null===r.getShell()){var s=e.findEdgeRingContaining(r,t);if(null===s)throw new vt(\"unable to assign hole to a shell\",r.getCoordinate(0));r.setShell(s)}}}},{key:\"buildMinimalEdgeRings\",value:function(t,e,n){for(var i=new yt,r=t.iterator();r.hasNext();){var s=r.next();if(s.getMaxNodeDegree()>2){s.linkDirectedEdgesForMinimalEdgeRings();var a=s.buildMinimalRings(),o=this.findShell(a);null!==o?(this.placePolygonHoles(o,a),e.add(o)):n.addAll(a)}else i.add(s)}return i}},{key:\"buildMaximalEdgeRings\",value:function(t){for(var e=new yt,n=t.iterator();n.hasNext();){var i=n.next();if(i.isInResult()&&i.getLabel().isArea()&&null===i.getEdgeRing()){var r=new Ge(i,this._geometryFactory);e.add(r),r.setInResult()}}return e}},{key:\"placePolygonHoles\",value:function(t,e){for(var n=e.iterator();n.hasNext();){var i=n.next();i.isHole()&&i.setShell(t)}}},{key:\"getPolygons\",value:function(){return this.computePolygons(this._shellList)}},{key:\"findShell\",value:function(t){for(var e=0,n=null,i=t.iterator();i.hasNext();){var r=i.next();r.isHole()||(n=r,e++)}return G.isTrue(e<=1,\"found two shells in MinimalEdgeRing list\"),n}},{key:\"add\",value:function(){if(1===arguments.length){var t=arguments[0];this.add(t.getEdgeEnds(),t.getNodes())}else if(2===arguments.length){var e=arguments[0],n=arguments[1];$e.linkResultDirectedEdges(n);var i=this.buildMaximalEdgeRings(e),r=new yt,s=this.buildMinimalEdgeRings(i,this._shellList,r);this.sortShellsAndHoles(s,this._shellList,r),this.placeFreeHoles(this._shellList,r)}}}],[{key:\"constructor_\",value:function(){this._geometryFactory=null,this._shellList=new yt;var t=arguments[0];this._geometryFactory=t}},{key:\"findEdgeRingContaining\",value:function(t,e){for(var n=t.getLinearRing(),i=n.getEnvelopeInternal(),r=n.getCoordinateN(0),s=null,a=null,o=e.iterator();o.hasNext();){var u=o.next(),l=u.getLinearRing(),h=l.getEnvelopeInternal();if(!h.equals(i)&&h.contains(i)){r=jt.ptNotInList(n.getCoordinates(),l.getCoordinates());var c=!1;Me.isInRing(r,l.getCoordinates())&&(c=!0),c&&(null===s||a.contains(h))&&(a=(s=u).getLinearRing().getEnvelopeInternal())}}return s}}]),e}(),en=function(){function e(){t(this,e)}return n(e,[{key:\"getBounds\",value:function(){}}]),e}(),nn=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"getItem\",value:function(){return this._item}},{key:\"getBounds\",value:function(){return this._bounds}},{key:\"interfaces_\",get:function(){return[en,E]}}],[{key:\"constructor_\",value:function(){this._bounds=null,this._item=null;var t=arguments[0],e=arguments[1];this._bounds=t,this._item=e}}]),e}(),rn=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"poll\",value:function(){if(this.isEmpty())return null;var t=this._items.get(1);return this._items.set(1,this._items.get(this._size)),this._size-=1,this.reorder(1),t}},{key:\"size\",value:function(){return this._size}},{key:\"reorder\",value:function(t){for(var e=null,n=this._items.get(t);2*t<=this._size&&((e=2*t)!==this._size&&this._items.get(e+1).compareTo(this._items.get(e))<0&&e++,this._items.get(e).compareTo(n)<0);t=e)this._items.set(t,this._items.get(e));this._items.set(t,n)}},{key:\"clear\",value:function(){this._size=0,this._items.clear()}},{key:\"peek\",value:function(){return this.isEmpty()?null:this._items.get(1)}},{key:\"isEmpty\",value:function(){return 0===this._size}},{key:\"add\",value:function(t){this._items.add(null),this._size+=1;var e=this._size;for(this._items.set(0,t);t.compareTo(this._items.get(Math.trunc(e/2)))<0;e/=2)this._items.set(e,this._items.get(Math.trunc(e/2)));this._items.set(e,t)}}],[{key:\"constructor_\",value:function(){this._size=null,this._items=null,this._size=0,this._items=new yt,this._items.add(null)}}]),e}(),sn=function(){function e(){t(this,e)}return n(e,[{key:\"insert\",value:function(t,e){}},{key:\"remove\",value:function(t,e){}},{key:\"query\",value:function(){}}]),e}(),an=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"getLevel\",value:function(){return this._level}},{key:\"size\",value:function(){return this._childBoundables.size()}},{key:\"getChildBoundables\",value:function(){return this._childBoundables}},{key:\"addChildBoundable\",value:function(t){G.isTrue(null===this._bounds),this._childBoundables.add(t)}},{key:\"isEmpty\",value:function(){return this._childBoundables.isEmpty()}},{key:\"getBounds\",value:function(){return null===this._bounds&&(this._bounds=this.computeBounds()),this._bounds}},{key:\"interfaces_\",get:function(){return[en,E]}}],[{key:\"constructor_\",value:function(){if(this._childBoundables=new yt,this._bounds=null,this._level=null,0===arguments.length);else if(1===arguments.length){var t=arguments[0];this._level=t}}}]),e}(),on={reverseOrder:function(){return{compare:function(t,e){return e.compareTo(t)}}},min:function(t){return on.sort(t),t.get(0)},sort:function(t,e){var n=t.toArray();e?At.sort(n,e):At.sort(n);for(var i=t.iterator(),r=0,s=n.length;r<s;r++)i.next(),i.set(n[r])},singletonList:function(t){var e=new yt;return e.add(t),e}},un=function(){function e(){t(this,e)}return n(e,null,[{key:\"maxDistance\",value:function(t,n,i,r,s,a,o,u){var l=e.distance(t,n,s,a);return l=Math.max(l,e.distance(t,n,o,u)),l=Math.max(l,e.distance(i,r,s,a)),l=Math.max(l,e.distance(i,r,o,u))}},{key:\"distance\",value:function(t,e,n,i){var r=n-t,s=i-e;return Math.sqrt(r*r+s*s)}},{key:\"maximumDistance\",value:function(t,n){var i=Math.min(t.getMinX(),n.getMinX()),r=Math.min(t.getMinY(),n.getMinY()),s=Math.max(t.getMaxX(),n.getMaxX()),a=Math.max(t.getMaxY(),n.getMaxY());return e.distance(i,r,s,a)}},{key:\"minMaxDistance\",value:function(t,n){var i=t.getMinX(),r=t.getMinY(),s=t.getMaxX(),a=t.getMaxY(),o=n.getMinX(),u=n.getMinY(),l=n.getMaxX(),h=n.getMaxY(),c=e.maxDistance(i,r,i,a,o,u,o,h);return c=Math.min(c,e.maxDistance(i,r,i,a,o,u,l,u)),c=Math.min(c,e.maxDistance(i,r,i,a,l,h,o,h)),c=Math.min(c,e.maxDistance(i,r,i,a,l,h,l,u)),c=Math.min(c,e.maxDistance(i,r,s,r,o,u,o,h)),c=Math.min(c,e.maxDistance(i,r,s,r,o,u,l,u)),c=Math.min(c,e.maxDistance(i,r,s,r,l,h,o,h)),c=Math.min(c,e.maxDistance(i,r,s,r,l,h,l,u)),c=Math.min(c,e.maxDistance(s,a,i,a,o,u,o,h)),c=Math.min(c,e.maxDistance(s,a,i,a,o,u,l,u)),c=Math.min(c,e.maxDistance(s,a,i,a,l,h,o,h)),c=Math.min(c,e.maxDistance(s,a,i,a,l,h,l,u)),c=Math.min(c,e.maxDistance(s,a,s,r,o,u,o,h)),c=Math.min(c,e.maxDistance(s,a,s,r,o,u,l,u)),c=Math.min(c,e.maxDistance(s,a,s,r,l,h,o,h)),c=Math.min(c,e.maxDistance(s,a,s,r,l,h,l,u))}}]),e}(),ln=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"maximumDistance\",value:function(){return un.maximumDistance(this._boundable1.getBounds(),this._boundable2.getBounds())}},{key:\"expandToQueue\",value:function(t,n){var i=e.isComposite(this._boundable1),r=e.isComposite(this._boundable2);if(i&&r)return e.area(this._boundable1)>e.area(this._boundable2)?(this.expand(this._boundable1,this._boundable2,!1,t,n),null):(this.expand(this._boundable2,this._boundable1,!0,t,n),null);if(i)return this.expand(this._boundable1,this._boundable2,!1,t,n),null;if(r)return this.expand(this._boundable2,this._boundable1,!0,t,n),null;throw new m(\"neither boundable is composite\")}},{key:\"isLeaves\",value:function(){return!(e.isComposite(this._boundable1)||e.isComposite(this._boundable2))}},{key:\"compareTo\",value:function(t){var e=t;return this._distance<e._distance?-1:this._distance>e._distance?1:0}},{key:\"expand\",value:function(t,n,i,r,s){for(var a=t.getChildBoundables().iterator();a.hasNext();){var o=a.next(),u=null;(u=i?new e(n,o,this._itemDistance):new e(o,n,this._itemDistance)).getDistance()<s&&r.add(u)}}},{key:\"getBoundable\",value:function(t){return 0===t?this._boundable1:this._boundable2}},{key:\"getDistance\",value:function(){return this._distance}},{key:\"distance\",value:function(){return this.isLeaves()?this._itemDistance.distance(this._boundable1,this._boundable2):this._boundable1.getBounds().distance(this._boundable2.getBounds())}},{key:\"interfaces_\",get:function(){return[x]}}],[{key:\"constructor_\",value:function(){this._boundable1=null,this._boundable2=null,this._distance=null,this._itemDistance=null;var t=arguments[0],e=arguments[1],n=arguments[2];this._boundable1=t,this._boundable2=e,this._itemDistance=n,this._distance=this.distance()}},{key:\"area\",value:function(t){return t.getBounds().getArea()}},{key:\"isComposite\",value:function(t){return t instanceof an}}]),e}(),hn=function(){function e(){t(this,e)}return n(e,[{key:\"visitItem\",value:function(t){}}]),e}(),cn=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"queryInternal\",value:function(){if(rt(arguments[2],hn)&&arguments[0]instanceof Object&&arguments[1]instanceof an)for(var t=arguments[0],e=arguments[1],n=arguments[2],i=e.getChildBoundables(),r=0;r<i.size();r++){var s=i.get(r);this.getIntersectsOp().intersects(s.getBounds(),t)&&(s instanceof an?this.queryInternal(t,s,n):s instanceof nn?n.visitItem(s.getItem()):G.shouldNeverReachHere())}else if(rt(arguments[2],nt)&&arguments[0]instanceof Object&&arguments[1]instanceof an)for(var a=arguments[0],o=arguments[1],u=arguments[2],l=o.getChildBoundables(),h=0;h<l.size();h++){var c=l.get(h);this.getIntersectsOp().intersects(c.getBounds(),a)&&(c instanceof an?this.queryInternal(a,c,u):c instanceof nn?u.add(c.getItem()):G.shouldNeverReachHere())}}},{key:\"getNodeCapacity\",value:function(){return this._nodeCapacity}},{key:\"lastNode\",value:function(t){return t.get(t.size()-1)}},{key:\"size\",value:function(){if(0===arguments.length)return this.isEmpty()?0:(this.build(),this.size(this._root));if(1===arguments.length){for(var t=arguments[0],e=0,n=t.getChildBoundables().iterator();n.hasNext();){var i=n.next();i instanceof an?e+=this.size(i):i instanceof nn&&(e+=1)}return e}}},{key:\"removeItem\",value:function(t,e){for(var n=null,i=t.getChildBoundables().iterator();i.hasNext();){var r=i.next();r instanceof nn&&r.getItem()===e&&(n=r)}return null!==n&&(t.getChildBoundables().remove(n),!0)}},{key:\"itemsTree\",value:function(){if(0===arguments.length){this.build();var t=this.itemsTree(this._root);return null===t?new yt:t}if(1===arguments.length){for(var e=arguments[0],n=new yt,i=e.getChildBoundables().iterator();i.hasNext();){var r=i.next();if(r instanceof an){var s=this.itemsTree(r);null!==s&&n.add(s)}else r instanceof nn?n.add(r.getItem()):G.shouldNeverReachHere()}return n.size()<=0?null:n}}},{key:\"insert\",value:function(t,e){G.isTrue(!this._built,\"Cannot insert items into an STR packed R-tree after it has been built.\"),this._itemBoundables.add(new nn(t,e))}},{key:\"boundablesAtLevel\",value:function(){if(1===arguments.length){var t=arguments[0],e=new yt;return this.boundablesAtLevel(t,this._root,e),e}if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2];if(G.isTrue(n>-2),i.getLevel()===n)return r.add(i),null;for(var s=i.getChildBoundables().iterator();s.hasNext();){var a=s.next();a instanceof an?this.boundablesAtLevel(n,a,r):(G.isTrue(a instanceof nn),-1===n&&r.add(a))}return null}}},{key:\"query\",value:function(){if(1===arguments.length){var t=arguments[0];this.build();var e=new yt;return this.isEmpty()||this.getIntersectsOp().intersects(this._root.getBounds(),t)&&this.queryInternal(t,this._root,e),e}if(2===arguments.length){var n=arguments[0],i=arguments[1];if(this.build(),this.isEmpty())return null;this.getIntersectsOp().intersects(this._root.getBounds(),n)&&this.queryInternal(n,this._root,i)}}},{key:\"build\",value:function(){if(this._built)return null;this._root=this._itemBoundables.isEmpty()?this.createNode(0):this.createHigherLevels(this._itemBoundables,-1),this._itemBoundables=null,this._built=!0}},{key:\"getRoot\",value:function(){return this.build(),this._root}},{key:\"remove\",value:function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];return this.build(),!!this.getIntersectsOp().intersects(this._root.getBounds(),t)&&this.remove(t,this._root,e)}if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2],s=this.removeItem(i,r);if(s)return!0;for(var a=null,o=i.getChildBoundables().iterator();o.hasNext();){var u=o.next();if(this.getIntersectsOp().intersects(u.getBounds(),n)&&(u instanceof an&&(s=this.remove(n,u,r)))){a=u;break}}return null!==a&&a.getChildBoundables().isEmpty()&&i.getChildBoundables().remove(a),s}}},{key:\"createHigherLevels\",value:function(t,e){G.isTrue(!t.isEmpty());var n=this.createParentBoundables(t,e+1);return 1===n.size()?n.get(0):this.createHigherLevels(n,e+1)}},{key:\"depth\",value:function(){if(0===arguments.length)return this.isEmpty()?0:(this.build(),this.depth(this._root));if(1===arguments.length){for(var t=arguments[0],e=0,n=t.getChildBoundables().iterator();n.hasNext();){var i=n.next();if(i instanceof an){var r=this.depth(i);r>e&&(e=r)}}return e+1}}},{key:\"createParentBoundables\",value:function(t,e){G.isTrue(!t.isEmpty());var n=new yt;n.add(this.createNode(e));var i=new yt(t);on.sort(i,this.getComparator());for(var r=i.iterator();r.hasNext();){var s=r.next();this.lastNode(n).getChildBoundables().size()===this.getNodeCapacity()&&n.add(this.createNode(e)),this.lastNode(n).addChildBoundable(s)}return n}},{key:\"isEmpty\",value:function(){return this._built?this._root.isEmpty():this._itemBoundables.isEmpty()}},{key:\"interfaces_\",get:function(){return[E]}}],[{key:\"constructor_\",value:function(){if(this._root=null,this._built=!1,this._itemBoundables=new yt,this._nodeCapacity=null,0===arguments.length)e.constructor_.call(this,e.DEFAULT_NODE_CAPACITY);else if(1===arguments.length){var t=arguments[0];G.isTrue(t>1,\"Node capacity must be greater than 1\"),this._nodeCapacity=t}}},{key:\"compareDoubles\",value:function(t,e){return t>e?1:t<e?-1:0}}]),e}();cn.IntersectsOp=function(){},cn.DEFAULT_NODE_CAPACITY=10;var fn=function(){function e(){t(this,e)}return n(e,[{key:\"distance\",value:function(t,e){}}]),e}(),vn=function(e){i(a,e);var s=c(a);function a(){var e;return t(this,a),e=s.call(this),a.constructor_.apply(l(e),arguments),e}return n(a,[{key:\"createParentBoundablesFromVerticalSlices\",value:function(t,e){G.isTrue(t.length>0);for(var n=new yt,i=0;i<t.length;i++)n.addAll(this.createParentBoundablesFromVerticalSlice(t[i],e));return n}},{key:\"nearestNeighbourK\",value:function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];return this.nearestNeighbourK(t,A.POSITIVE_INFINITY,e)}if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2],s=i,o=new rn;o.add(n);for(var u=new rn;!o.isEmpty()&&s>=0;){var l=o.poll(),h=l.getDistance();if(h>=s)break;if(l.isLeaves())if(u.size()<r)u.add(l);else{var c=u.peek();c.getDistance()>h&&(u.poll(),u.add(l));var f=u.peek();s=f.getDistance()}else l.expandToQueue(o,s)}return a.getItems(u)}}},{key:\"createNode\",value:function(t){return new gn(t)}},{key:\"size\",value:function(){return 0===arguments.length?f(r(a.prototype),\"size\",this).call(this):f(r(a.prototype),\"size\",this).apply(this,arguments)}},{key:\"insert\",value:function(){if(!(2===arguments.length&&arguments[1]instanceof Object&&arguments[0]instanceof U))return f(r(a.prototype),\"insert\",this).apply(this,arguments);var t=arguments[0],e=arguments[1];if(t.isNull())return null;f(r(a.prototype),\"insert\",this).call(this,t,e)}},{key:\"getIntersectsOp\",value:function(){return a.intersectsOp}},{key:\"verticalSlices\",value:function(t,e){for(var n=Math.trunc(Math.ceil(t.size()/e)),i=new Array(e).fill(null),r=t.iterator(),s=0;s<e;s++){i[s]=new yt;for(var a=0;r.hasNext()&&a<n;){var o=r.next();i[s].add(o),a++}}return i}},{key:\"query\",value:function(){if(1===arguments.length){var t=arguments[0];return f(r(a.prototype),\"query\",this).call(this,t)}if(2===arguments.length){var e=arguments[0],n=arguments[1];f(r(a.prototype),\"query\",this).call(this,e,n)}}},{key:\"getComparator\",value:function(){return a.yComparator}},{key:\"createParentBoundablesFromVerticalSlice\",value:function(t,e){return f(r(a.prototype),\"createParentBoundables\",this).call(this,t,e)}},{key:\"remove\",value:function(){if(2===arguments.length&&arguments[1]instanceof Object&&arguments[0]instanceof U){var t=arguments[0],e=arguments[1];return f(r(a.prototype),\"remove\",this).call(this,t,e)}return f(r(a.prototype),\"remove\",this).apply(this,arguments)}},{key:\"depth\",value:function(){return 0===arguments.length?f(r(a.prototype),\"depth\",this).call(this):f(r(a.prototype),\"depth\",this).apply(this,arguments)}},{key:\"createParentBoundables\",value:function(t,e){G.isTrue(!t.isEmpty());var n=Math.trunc(Math.ceil(t.size()/this.getNodeCapacity())),i=new yt(t);on.sort(i,a.xComparator);var r=this.verticalSlices(i,Math.trunc(Math.ceil(Math.sqrt(n))));return this.createParentBoundablesFromVerticalSlices(r,e)}},{key:\"nearestNeighbour\",value:function(){if(1===arguments.length){if(rt(arguments[0],fn)){var t=arguments[0];if(this.isEmpty())return null;var e=new ln(this.getRoot(),this.getRoot(),t);return this.nearestNeighbour(e)}if(arguments[0]instanceof ln){var n=arguments[0],i=A.POSITIVE_INFINITY,r=null,s=new rn;for(s.add(n);!s.isEmpty()&&i>0;){var a=s.poll(),o=a.getDistance();if(o>=i)break;a.isLeaves()?(i=o,r=a):a.expandToQueue(s,i)}return null===r?null:[r.getBoundable(0).getItem(),r.getBoundable(1).getItem()]}}else{if(2===arguments.length){var u=arguments[0],l=arguments[1];if(this.isEmpty()||u.isEmpty())return null;var h=new ln(this.getRoot(),u.getRoot(),l);return this.nearestNeighbour(h)}if(3===arguments.length){var c=arguments[0],f=arguments[1],v=arguments[2],g=new nn(c,f),y=new ln(this.getRoot(),g,v);return this.nearestNeighbour(y)[0]}if(4===arguments.length){var d=arguments[0],_=arguments[1],p=arguments[2],m=arguments[3],k=new nn(d,_),x=new ln(this.getRoot(),k,p);return this.nearestNeighbourK(x,m)}}}},{key:\"isWithinDistance\",value:function(){if(2===arguments.length){var t=arguments[0],e=arguments[1],n=A.POSITIVE_INFINITY,i=new rn;for(i.add(t);!i.isEmpty();){var r=i.poll(),s=r.getDistance();if(s>e)return!1;if(r.maximumDistance()<=e)return!0;if(r.isLeaves()){if((n=s)<=e)return!0}else r.expandToQueue(i,n)}return!1}if(3===arguments.length){var a=arguments[0],o=arguments[1],u=arguments[2],l=new ln(this.getRoot(),a.getRoot(),o);return this.isWithinDistance(l,u)}}},{key:\"interfaces_\",get:function(){return[sn,E]}}],[{key:\"constructor_\",value:function(){if(0===arguments.length)a.constructor_.call(this,a.DEFAULT_NODE_CAPACITY);else if(1===arguments.length){var t=arguments[0];cn.constructor_.call(this,t)}}},{key:\"centreX\",value:function(t){return a.avg(t.getMinX(),t.getMaxX())}},{key:\"avg\",value:function(t,e){return(t+e)/2}},{key:\"getItems\",value:function(t){for(var e=new Array(t.size()).fill(null),n=0;!t.isEmpty();){var i=t.poll();e[n]=i.getBoundable(0).getItem(),n++}return e}},{key:\"centreY\",value:function(t){return a.avg(t.getMinY(),t.getMaxY())}}]),a}(cn),gn=function(e){i(s,e);var r=c(s);function s(){var e;return t(this,s),e=r.call(this),s.constructor_.apply(l(e),arguments),e}return n(s,[{key:\"computeBounds\",value:function(){for(var t=null,e=this.getChildBoundables().iterator();e.hasNext();){var n=e.next();null===t?t=new U(n.getBounds()):t.expandToInclude(n.getBounds())}return t}}],[{key:\"constructor_\",value:function(){var t=arguments[0];an.constructor_.call(this,t)}}]),s}(an);vn.STRtreeNode=gn,vn.xComparator=new(function(){function e(){t(this,e)}return n(e,[{key:\"interfaces_\",get:function(){return[P]}},{key:\"compare\",value:function(t,e){return cn.compareDoubles(vn.centreX(t.getBounds()),vn.centreX(e.getBounds()))}}]),e}()),vn.yComparator=new(function(){function e(){t(this,e)}return n(e,[{key:\"interfaces_\",get:function(){return[P]}},{key:\"compare\",value:function(t,e){return cn.compareDoubles(vn.centreY(t.getBounds()),vn.centreY(e.getBounds()))}}]),e}()),vn.intersectsOp=new(function(){function e(){t(this,e)}return n(e,[{key:\"interfaces_\",get:function(){return[IntersectsOp]}},{key:\"intersects\",value:function(t,e){return t.intersects(e)}}]),e}()),vn.DEFAULT_NODE_CAPACITY=10;var yn=function(){function e(){t(this,e)}return n(e,null,[{key:\"relativeSign\",value:function(t,e){return t<e?-1:t>e?1:0}},{key:\"compare\",value:function(t,n,i){if(n.equals2D(i))return 0;var r=e.relativeSign(n.x,i.x),s=e.relativeSign(n.y,i.y);switch(t){case 0:return e.compareValue(r,s);case 1:return e.compareValue(s,r);case 2:return e.compareValue(s,-r);case 3:return e.compareValue(-r,s);case 4:return e.compareValue(-r,-s);case 5:return e.compareValue(-s,-r);case 6:return e.compareValue(-s,r);case 7:return e.compareValue(r,-s)}return G.shouldNeverReachHere(\"invalid octant value\"),0}},{key:\"compareValue\",value:function(t,e){return t<0?-1:t>0?1:e<0?-1:e>0?1:0}}]),e}(),dn=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"getCoordinate\",value:function(){return this.coord}},{key:\"print\",value:function(t){t.print(this.coord),t.print(\" seg # = \"+this.segmentIndex)}},{key:\"compareTo\",value:function(t){var e=t;return this.segmentIndex<e.segmentIndex?-1:this.segmentIndex>e.segmentIndex?1:this.coord.equals2D(e.coord)?0:this._isInterior?e._isInterior?yn.compare(this._segmentOctant,this.coord,e.coord):1:-1}},{key:\"isEndPoint\",value:function(t){return 0===this.segmentIndex&&!this._isInterior||this.segmentIndex===t}},{key:\"toString\",value:function(){return this.segmentIndex+\":\"+this.coord.toString()}},{key:\"isInterior\",value:function(){return this._isInterior}},{key:\"interfaces_\",get:function(){return[x]}}],[{key:\"constructor_\",value:function(){this._segString=null,this.coord=null,this.segmentIndex=null,this._segmentOctant=null,this._isInterior=null;var t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];this._segString=t,this.coord=new X(e),this.segmentIndex=n,this._segmentOctant=i,this._isInterior=!e.equals2D(t.getCoordinate(n))}}]),e}(),_n=function(){function e(){t(this,e)}return n(e,[{key:\"hasNext\",value:function(){}},{key:\"next\",value:function(){}},{key:\"remove\",value:function(){}}]),e}(),pn=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"getSplitCoordinates\",value:function(){var t=new Zt;this.addEndpoints();for(var e=this.iterator(),n=e.next();e.hasNext();){var i=e.next();this.addEdgeCoordinates(n,i,t),n=i}return t.toCoordinateArray()}},{key:\"addCollapsedNodes\",value:function(){var t=new yt;this.findCollapsesFromInsertedNodes(t),this.findCollapsesFromExistingVertices(t);for(var e=t.iterator();e.hasNext();){var n=e.next().intValue();this.add(this._edge.getCoordinate(n),n)}}},{key:\"createSplitEdgePts\",value:function(t,e){var n=e.segmentIndex-t.segmentIndex+2;if(2===n)return[new X(t.coord),new X(e.coord)];var i=this._edge.getCoordinate(e.segmentIndex),r=e.isInterior()||!e.coord.equals2D(i);r||n--;var s=new Array(n).fill(null),a=0;s[a++]=new X(t.coord);for(var o=t.segmentIndex+1;o<=e.segmentIndex;o++)s[a++]=this._edge.getCoordinate(o);return r&&(s[a]=new X(e.coord)),s}},{key:\"print\",value:function(t){t.println(\"Intersections:\");for(var e=this.iterator();e.hasNext();){e.next().print(t)}}},{key:\"findCollapsesFromExistingVertices\",value:function(t){for(var e=0;e<this._edge.size()-2;e++){var n=this._edge.getCoordinate(e);this._edge.getCoordinate(e+1);var i=this._edge.getCoordinate(e+2);n.equals2D(i)&&t.add(at.valueOf(e+1))}}},{key:\"addEdgeCoordinates\",value:function(t,e,n){var i=this.createSplitEdgePts(t,e);n.add(i,!1)}},{key:\"iterator\",value:function(){return this._nodeMap.values().iterator()}},{key:\"addSplitEdges\",value:function(t){this.addEndpoints(),this.addCollapsedNodes();for(var e=this.iterator(),n=e.next();e.hasNext();){var i=e.next(),r=this.createSplitEdge(n,i);t.add(r),n=i}}},{key:\"findCollapseIndex\",value:function(t,e,n){if(!t.coord.equals2D(e.coord))return!1;var i=e.segmentIndex-t.segmentIndex;return e.isInterior()||i--,1===i&&(n[0]=t.segmentIndex+1,!0)}},{key:\"findCollapsesFromInsertedNodes\",value:function(t){for(var e=new Array(1).fill(null),n=this.iterator(),i=n.next();n.hasNext();){var r=n.next();this.findCollapseIndex(i,r,e)&&t.add(at.valueOf(e[0])),i=r}}},{key:\"getEdge\",value:function(){return this._edge}},{key:\"addEndpoints\",value:function(){var t=this._edge.size()-1;this.add(this._edge.getCoordinate(0),0),this.add(this._edge.getCoordinate(t),t)}},{key:\"createSplitEdge\",value:function(t,e){var n=this.createSplitEdgePts(t,e);return new In(n,this._edge.getData())}},{key:\"add\",value:function(t,e){var n=new dn(this._edge,t,e,this._edge.getSegmentOctant(e)),i=this._nodeMap.get(n);return null!==i?(G.isTrue(i.coord.equals2D(t),\"Found equal nodes with different coordinates\"),i):(this._nodeMap.put(n,n),n)}},{key:\"checkSplitEdgesCorrectness\",value:function(t){var e=this._edge.getCoordinates(),n=t.get(0).getCoordinate(0);if(!n.equals2D(e[0]))throw new D(\"bad split edge start point at \"+n);var i=t.get(t.size()-1).getCoordinates(),r=i[i.length-1];if(!r.equals2D(e[e.length-1]))throw new D(\"bad split edge end point at \"+r)}}],[{key:\"constructor_\",value:function(){this._nodeMap=new Ze,this._edge=null;var t=arguments[0];this._edge=t}}]),e}(),mn=function(){function e(){t(this,e)}return n(e,null,[{key:\"octant\",value:function(){if(\"number\"==typeof arguments[0]&&\"number\"==typeof arguments[1]){var t=arguments[0],n=arguments[1];if(0===t&&0===n)throw new m(\"Cannot compute the octant for point ( \"+t+\", \"+n+\" )\");var i=Math.abs(t),r=Math.abs(n);return t>=0?n>=0?i>=r?0:1:i>=r?7:6:n>=0?i>=r?3:2:i>=r?4:5}if(arguments[0]instanceof X&&arguments[1]instanceof X){var s=arguments[0],a=arguments[1],o=a.x-s.x,u=a.y-s.y;if(0===o&&0===u)throw new m(\"Cannot compute the octant for two identical points \"+s);return e.octant(o,u)}}}]),e}(),kn=function(){function e(){t(this,e)}return n(e,[{key:\"getCoordinates\",value:function(){}},{key:\"size\",value:function(){}},{key:\"getCoordinate\",value:function(t){}},{key:\"isClosed\",value:function(){}},{key:\"setData\",value:function(t){}},{key:\"getData\",value:function(){}}]),e}(),xn=function(){function e(){t(this,e)}return n(e,[{key:\"addIntersection\",value:function(t,e){}},{key:\"interfaces_\",get:function(){return[kn]}}]),e}(),In=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"getCoordinates\",value:function(){return this._pts}},{key:\"size\",value:function(){return this._pts.length}},{key:\"getCoordinate\",value:function(t){return this._pts[t]}},{key:\"isClosed\",value:function(){return this._pts[0].equals(this._pts[this._pts.length-1])}},{key:\"getSegmentOctant\",value:function(t){return t===this._pts.length-1?-1:this.safeOctant(this.getCoordinate(t),this.getCoordinate(t+1))}},{key:\"setData\",value:function(t){this._data=t}},{key:\"safeOctant\",value:function(t,e){return t.equals2D(e)?0:mn.octant(t,e)}},{key:\"getData\",value:function(){return this._data}},{key:\"addIntersection\",value:function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];this.addIntersectionNode(t,e)}else if(4===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[3],s=new X(n.getIntersection(r));this.addIntersection(s,i)}}},{key:\"toString\",value:function(){return Re.toLineString(new Qt(this._pts))}},{key:\"getNodeList\",value:function(){return this._nodeList}},{key:\"addIntersectionNode\",value:function(t,e){var n=e,i=n+1;if(i<this._pts.length){var r=this._pts[i];t.equals2D(r)&&(n=i)}return this._nodeList.add(t,n)}},{key:\"addIntersections\",value:function(t,e,n){for(var i=0;i<t.getIntersectionNum();i++)this.addIntersection(t,e,n,i)}},{key:\"interfaces_\",get:function(){return[xn]}}],[{key:\"constructor_\",value:function(){this._nodeList=new pn(this),this._pts=null,this._data=null;var t=arguments[0],e=arguments[1];this._pts=t,this._data=e}},{key:\"getNodedSubstrings\",value:function(){if(1===arguments.length){var t=arguments[0],n=new yt;return e.getNodedSubstrings(t,n),n}if(2===arguments.length)for(var i=arguments[0],r=arguments[1],s=i.iterator();s.hasNext();){var a=s.next();a.getNodeList().addSplitEdges(r)}}}]),e}(),En=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"minX\",value:function(){return Math.min(this.p0.x,this.p1.x)}},{key:\"orientationIndex\",value:function(){if(arguments[0]instanceof e){var t=arguments[0],n=ct.index(this.p0,this.p1,t.p0),i=ct.index(this.p0,this.p1,t.p1);return n>=0&&i>=0||n<=0&&i<=0?Math.max(n,i):0}if(arguments[0]instanceof X){var r=arguments[0];return ct.index(this.p0,this.p1,r)}}},{key:\"toGeometry\",value:function(t){return t.createLineString([this.p0,this.p1])}},{key:\"isVertical\",value:function(){return this.p0.x===this.p1.x}},{key:\"equals\",value:function(t){if(!(t instanceof e))return!1;var n=t;return this.p0.equals(n.p0)&&this.p1.equals(n.p1)}},{key:\"intersection\",value:function(t){var e=new Oe;return e.computeIntersection(this.p0,this.p1,t.p0,t.p1),e.hasIntersection()?e.getIntersection(0):null}},{key:\"project\",value:function(){if(arguments[0]instanceof X){var t=arguments[0];if(t.equals(this.p0)||t.equals(this.p1))return new X(t);var n=this.projectionFactor(t),i=new X;return i.x=this.p0.x+n*(this.p1.x-this.p0.x),i.y=this.p0.y+n*(this.p1.y-this.p0.y),i}if(arguments[0]instanceof e){var r=arguments[0],s=this.projectionFactor(r.p0),a=this.projectionFactor(r.p1);if(s>=1&&a>=1)return null;if(s<=0&&a<=0)return null;var o=this.project(r.p0);s<0&&(o=this.p0),s>1&&(o=this.p1);var u=this.project(r.p1);return a<0&&(u=this.p0),a>1&&(u=this.p1),new e(o,u)}}},{key:\"normalize\",value:function(){this.p1.compareTo(this.p0)<0&&this.reverse()}},{key:\"angle\",value:function(){return Math.atan2(this.p1.y-this.p0.y,this.p1.x-this.p0.x)}},{key:\"getCoordinate\",value:function(t){return 0===t?this.p0:this.p1}},{key:\"distancePerpendicular\",value:function(t){return xt.pointToLinePerpendicular(t,this.p0,this.p1)}},{key:\"minY\",value:function(){return Math.min(this.p0.y,this.p1.y)}},{key:\"midPoint\",value:function(){return e.midPoint(this.p0,this.p1)}},{key:\"projectionFactor\",value:function(t){if(t.equals(this.p0))return 0;if(t.equals(this.p1))return 1;var e=this.p1.x-this.p0.x,n=this.p1.y-this.p0.y,i=e*e+n*n;return i<=0?A.NaN:((t.x-this.p0.x)*e+(t.y-this.p0.y)*n)/i}},{key:\"closestPoints\",value:function(t){var e=this.intersection(t);if(null!==e)return[e,e];var n=new Array(2).fill(null),i=A.MAX_VALUE,r=null,s=this.closestPoint(t.p0);i=s.distance(t.p0),n[0]=s,n[1]=t.p0;var a=this.closestPoint(t.p1);(r=a.distance(t.p1))<i&&(i=r,n[0]=a,n[1]=t.p1);var o=t.closestPoint(this.p0);(r=o.distance(this.p0))<i&&(i=r,n[0]=this.p0,n[1]=o);var u=t.closestPoint(this.p1);return(r=u.distance(this.p1))<i&&(i=r,n[0]=this.p1,n[1]=u),n}},{key:\"closestPoint\",value:function(t){var e=this.projectionFactor(t);return e>0&&e<1?this.project(t):this.p0.distance(t)<this.p1.distance(t)?this.p0:this.p1}},{key:\"maxX\",value:function(){return Math.max(this.p0.x,this.p1.x)}},{key:\"getLength\",value:function(){return this.p0.distance(this.p1)}},{key:\"compareTo\",value:function(t){var e=t,n=this.p0.compareTo(e.p0);return 0!==n?n:this.p1.compareTo(e.p1)}},{key:\"reverse\",value:function(){var t=this.p0;this.p0=this.p1,this.p1=t}},{key:\"equalsTopo\",value:function(t){return this.p0.equals(t.p0)&&this.p1.equals(t.p1)||this.p0.equals(t.p1)&&this.p1.equals(t.p0)}},{key:\"lineIntersection\",value:function(t){return pt.intersection(this.p0,this.p1,t.p0,t.p1)}},{key:\"maxY\",value:function(){return Math.max(this.p0.y,this.p1.y)}},{key:\"pointAlongOffset\",value:function(t,e){var n=this.p0.x+t*(this.p1.x-this.p0.x),i=this.p0.y+t*(this.p1.y-this.p0.y),r=this.p1.x-this.p0.x,s=this.p1.y-this.p0.y,a=Math.sqrt(r*r+s*s),o=0,u=0;if(0!==e){if(a<=0)throw new IllegalStateException(\"Cannot compute offset from zero-length line segment\");o=e*r/a,u=e*s/a}return new X(n-u,i+o)}},{key:\"setCoordinates\",value:function(){if(1===arguments.length){var t=arguments[0];this.setCoordinates(t.p0,t.p1)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.p0.x=e.x,this.p0.y=e.y,this.p1.x=n.x,this.p1.y=n.y}}},{key:\"segmentFraction\",value:function(t){var e=this.projectionFactor(t);return e<0?e=0:(e>1||A.isNaN(e))&&(e=1),e}},{key:\"toString\",value:function(){return\"LINESTRING( \"+this.p0.x+\" \"+this.p0.y+\", \"+this.p1.x+\" \"+this.p1.y+\")\"}},{key:\"isHorizontal\",value:function(){return this.p0.y===this.p1.y}},{key:\"reflect\",value:function(t){var e=this.p1.getY()-this.p0.getY(),n=this.p0.getX()-this.p1.getX(),i=this.p0.getY()*(this.p1.getX()-this.p0.getX())-this.p0.getX()*(this.p1.getY()-this.p0.getY()),r=e*e+n*n,s=e*e-n*n,a=t.getX(),o=t.getY();return new X((-s*a-2*e*n*o-2*e*i)/r,(s*o-2*e*n*a-2*n*i)/r)}},{key:\"distance\",value:function(){if(arguments[0]instanceof e){var t=arguments[0];return xt.segmentToSegment(this.p0,this.p1,t.p0,t.p1)}if(arguments[0]instanceof X){var n=arguments[0];return xt.pointToSegment(n,this.p0,this.p1)}}},{key:\"pointAlong\",value:function(t){var e=new X;return e.x=this.p0.x+t*(this.p1.x-this.p0.x),e.y=this.p0.y+t*(this.p1.y-this.p0.y),e}},{key:\"hashCode\",value:function(){var t=A.doubleToLongBits(this.p0.x);t^=31*A.doubleToLongBits(this.p0.y);var e=Math.trunc(t)^Math.trunc(t>>32),n=A.doubleToLongBits(this.p1.x);return n^=31*A.doubleToLongBits(this.p1.y),e^(Math.trunc(n)^Math.trunc(n>>32))}},{key:\"interfaces_\",get:function(){return[x,E]}}],[{key:\"constructor_\",value:function(){if(this.p0=null,this.p1=null,0===arguments.length)e.constructor_.call(this,new X,new X);else if(1===arguments.length){var t=arguments[0];e.constructor_.call(this,t.p0,t.p1)}else if(2===arguments.length){var n=arguments[0],i=arguments[1];this.p0=n,this.p1=i}else if(4===arguments.length){var r=arguments[0],s=arguments[1],a=arguments[2],o=arguments[3];e.constructor_.call(this,new X(r,s),new X(a,o))}}},{key:\"midPoint\",value:function(t,e){return new X((t.x+e.x)/2,(t.y+e.y)/2)}}]),e}(),Nn=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"overlap\",value:function(){if(2===arguments.length);else if(4===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];t.getLineSegment(e,this._overlapSeg1),n.getLineSegment(i,this._overlapSeg2),this.overlap(this._overlapSeg1,this._overlapSeg2)}}}],[{key:\"constructor_\",value:function(){this._overlapSeg1=new En,this._overlapSeg2=new En}}]),e}(),Tn=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"getLineSegment\",value:function(t,e){e.p0=this._pts[t],e.p1=this._pts[t+1]}},{key:\"computeSelect\",value:function(t,e,n,i){var r=this._pts[e],s=this._pts[n];if(n-e==1)return i.select(this,e),null;if(!t.intersects(r,s))return null;var a=Math.trunc((e+n)/2);e<a&&this.computeSelect(t,e,a,i),a<n&&this.computeSelect(t,a,n,i)}},{key:\"getCoordinates\",value:function(){for(var t=new Array(this._end-this._start+1).fill(null),e=0,n=this._start;n<=this._end;n++)t[e++]=this._pts[n];return t}},{key:\"computeOverlaps\",value:function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];this.computeOverlaps(this._start,this._end,t,t._start,t._end,e)}else if(6===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2],s=arguments[3],a=arguments[4],o=arguments[5];if(i-n==1&&a-s==1)return o.overlap(this,n,r,s),null;if(!this.overlaps(n,i,r,s,a))return null;var u=Math.trunc((n+i)/2),l=Math.trunc((s+a)/2);n<u&&(s<l&&this.computeOverlaps(n,u,r,s,l,o),l<a&&this.computeOverlaps(n,u,r,l,a,o)),u<i&&(s<l&&this.computeOverlaps(u,i,r,s,l,o),l<a&&this.computeOverlaps(u,i,r,l,a,o))}}},{key:\"setId\",value:function(t){this._id=t}},{key:\"select\",value:function(t,e){this.computeSelect(t,this._start,this._end,e)}},{key:\"getEnvelope\",value:function(){if(null===this._env){var t=this._pts[this._start],e=this._pts[this._end];this._env=new U(t,e)}return this._env}},{key:\"overlaps\",value:function(t,e,n,i,r){return U.intersects(this._pts[t],this._pts[e],n._pts[i],n._pts[r])}},{key:\"getEndIndex\",value:function(){return this._end}},{key:\"getStartIndex\",value:function(){return this._start}},{key:\"getContext\",value:function(){return this._context}},{key:\"getId\",value:function(){return this._id}}],[{key:\"constructor_\",value:function(){this._pts=null,this._start=null,this._end=null,this._env=null,this._context=null,this._id=null;var t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];this._pts=t,this._start=e,this._end=n,this._context=i}}]),e}(),Sn=function(){function e(){t(this,e)}return n(e,null,[{key:\"findChainEnd\",value:function(t,e){for(var n=e;n<t.length-1&&t[n].equals2D(t[n+1]);)n++;if(n>=t.length-1)return t.length-1;for(var i=We.quadrant(t[n],t[n+1]),r=e+1;r<t.length;){if(!t[r-1].equals2D(t[r]))if(We.quadrant(t[r-1],t[r])!==i)break;r++}return r-1}},{key:\"getChains\",value:function(){if(1===arguments.length){var t=arguments[0];return e.getChains(t,null)}if(2===arguments.length){var n=arguments[0],i=arguments[1],r=new yt,s=0;do{var a=e.findChainEnd(n,s),o=new Tn(n,s,a,i);r.add(o),s=a}while(s<n.length-1);return r}}}]),e}(),Ln=function(){function e(){t(this,e)}return n(e,[{key:\"computeNodes\",value:function(t){}},{key:\"getNodedSubstrings\",value:function(){}}]),e}(),Cn=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"setSegmentIntersector\",value:function(t){this._segInt=t}},{key:\"interfaces_\",get:function(){return[Ln]}}],[{key:\"constructor_\",value:function(){if(this._segInt=null,0===arguments.length);else if(1===arguments.length){var t=arguments[0];this.setSegmentIntersector(t)}}}]),e}(),Rn=function(e){i(s,e);var r=c(s);function s(){var e;return t(this,s),e=r.call(this),s.constructor_.apply(l(e),arguments),e}return n(s,[{key:\"getMonotoneChains\",value:function(){return this._monoChains}},{key:\"getNodedSubstrings\",value:function(){return In.getNodedSubstrings(this._nodedSegStrings)}},{key:\"getIndex\",value:function(){return this._index}},{key:\"add\",value:function(t){for(var e=Sn.getChains(t.getCoordinates(),t).iterator();e.hasNext();){var n=e.next();n.setId(this._idCounter++),this._index.insert(n.getEnvelope(),n),this._monoChains.add(n)}}},{key:\"computeNodes\",value:function(t){this._nodedSegStrings=t;for(var e=t.iterator();e.hasNext();)this.add(e.next());this.intersectChains()}},{key:\"intersectChains\",value:function(){for(var t=new wn(this._segInt),e=this._monoChains.iterator();e.hasNext();)for(var n=e.next(),i=this._index.query(n.getEnvelope()).iterator();i.hasNext();){var r=i.next();if(r.getId()>n.getId()&&(n.computeOverlaps(r,t),this._nOverlaps++),this._segInt.isDone())return null}}}],[{key:\"constructor_\",value:function(){if(this._monoChains=new yt,this._index=new vn,this._idCounter=0,this._nodedSegStrings=null,this._nOverlaps=0,0===arguments.length);else if(1===arguments.length){var t=arguments[0];Cn.constructor_.call(this,t)}}}]),s}(Cn),wn=function(e){i(a,e);var s=c(a);function a(){var e;return t(this,a),e=s.call(this),a.constructor_.apply(l(e),arguments),e}return n(a,[{key:\"overlap\",value:function(){if(4!==arguments.length)return f(r(a.prototype),\"overlap\",this).apply(this,arguments);var t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3],s=t.getContext(),o=n.getContext();this._si.processIntersections(s,e,o,i)}}],[{key:\"constructor_\",value:function(){this._si=null;var t=arguments[0];this._si=t}}]),a}(Nn);Rn.SegmentOverlapAction=wn;var On=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"isDeletable\",value:function(t,e,n,i){var r=this._inputLine[t],s=this._inputLine[e],a=this._inputLine[n];return!!this.isConcave(r,s,a)&&(!!this.isShallow(r,s,a,i)&&this.isShallowSampled(r,s,t,n,i))}},{key:\"deleteShallowConcavities\",value:function(){for(var t=1,n=this.findNextNonDeletedIndex(t),i=this.findNextNonDeletedIndex(n),r=!1;i<this._inputLine.length;){var s=!1;this.isDeletable(t,n,i,this._distanceTol)&&(this._isDeleted[n]=e.DELETE,s=!0,r=!0),t=s?i:n,n=this.findNextNonDeletedIndex(t),i=this.findNextNonDeletedIndex(n)}return r}},{key:\"isShallowConcavity\",value:function(t,e,n,i){return ct.index(t,e,n)===this._angleOrientation&&xt.pointToSegment(e,t,n)<i}},{key:\"isShallowSampled\",value:function(t,n,i,r,s){var a=Math.trunc((r-i)/e.NUM_PTS_TO_CHECK);a<=0&&(a=1);for(var o=i;o<r;o+=a)if(!this.isShallow(t,n,this._inputLine[o],s))return!1;return!0}},{key:\"isConcave\",value:function(t,e,n){var i=ct.index(t,e,n)===this._angleOrientation;return i}},{key:\"simplify\",value:function(t){this._distanceTol=Math.abs(t),t<0&&(this._angleOrientation=ct.CLOCKWISE),this._isDeleted=new Array(this._inputLine.length).fill(null);var e=!1;do{e=this.deleteShallowConcavities()}while(e);return this.collapseLine()}},{key:\"findNextNonDeletedIndex\",value:function(t){for(var n=t+1;n<this._inputLine.length&&this._isDeleted[n]===e.DELETE;)n++;return n}},{key:\"isShallow\",value:function(t,e,n,i){return xt.pointToSegment(e,t,n)<i}},{key:\"collapseLine\",value:function(){for(var t=new Zt,n=0;n<this._inputLine.length;n++)this._isDeleted[n]!==e.DELETE&&t.add(this._inputLine[n]);return t.toCoordinateArray()}}],[{key:\"constructor_\",value:function(){this._inputLine=null,this._distanceTol=null,this._isDeleted=null,this._angleOrientation=ct.COUNTERCLOCKWISE;var t=arguments[0];this._inputLine=t}},{key:\"simplify\",value:function(t,n){return new e(t).simplify(n)}}]),e}();On.INIT=0,On.DELETE=1,On.KEEP=1,On.NUM_PTS_TO_CHECK=10;var bn=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"getCoordinates\",value:function(){return this._ptList.toArray(e.COORDINATE_ARRAY_TYPE)}},{key:\"setPrecisionModel\",value:function(t){this._precisionModel=t}},{key:\"addPt\",value:function(t){var e=new X(t);if(this._precisionModel.makePrecise(e),this.isRedundant(e))return null;this._ptList.add(e)}},{key:\"reverse\",value:function(){}},{key:\"addPts\",value:function(t,e){if(e)for(var n=0;n<t.length;n++)this.addPt(t[n]);else for(var i=t.length-1;i>=0;i--)this.addPt(t[i])}},{key:\"isRedundant\",value:function(t){if(this._ptList.size()<1)return!1;var e=this._ptList.get(this._ptList.size()-1);return t.distance(e)<this._minimimVertexDistance}},{key:\"toString\",value:function(){return(new ae).createLineString(this.getCoordinates()).toString()}},{key:\"closeRing\",value:function(){if(this._ptList.size()<1)return null;var t=new X(this._ptList.get(0)),e=this._ptList.get(this._ptList.size()-1);if(t.equals(e))return null;this._ptList.add(t)}},{key:\"setMinimumVertexDistance\",value:function(t){this._minimimVertexDistance=t}}],[{key:\"constructor_\",value:function(){this._ptList=null,this._precisionModel=null,this._minimimVertexDistance=0,this._ptList=new yt}}]),e}();bn.COORDINATE_ARRAY_TYPE=new Array(0).fill(null);var Mn=function(){function e(){t(this,e)}return n(e,null,[{key:\"toDegrees\",value:function(t){return 180*t/Math.PI}},{key:\"normalize\",value:function(t){for(;t>Math.PI;)t-=e.PI_TIMES_2;for(;t<=-Math.PI;)t+=e.PI_TIMES_2;return t}},{key:\"angle\",value:function(){if(1===arguments.length){var t=arguments[0];return Math.atan2(t.y,t.x)}if(2===arguments.length){var e=arguments[0],n=arguments[1],i=n.x-e.x,r=n.y-e.y;return Math.atan2(r,i)}}},{key:\"isAcute\",value:function(t,e,n){var i=t.x-e.x,r=t.y-e.y;return i*(n.x-e.x)+r*(n.y-e.y)>0}},{key:\"isObtuse\",value:function(t,e,n){var i=t.x-e.x,r=t.y-e.y;return i*(n.x-e.x)+r*(n.y-e.y)<0}},{key:\"interiorAngle\",value:function(t,n,i){var r=e.angle(n,t),s=e.angle(n,i);return Math.abs(s-r)}},{key:\"normalizePositive\",value:function(t){if(t<0){for(;t<0;)t+=e.PI_TIMES_2;t>=e.PI_TIMES_2&&(t=0)}else{for(;t>=e.PI_TIMES_2;)t-=e.PI_TIMES_2;t<0&&(t=0)}return t}},{key:\"angleBetween\",value:function(t,n,i){var r=e.angle(n,t),s=e.angle(n,i);return e.diff(r,s)}},{key:\"diff\",value:function(t,e){var n=null;return(n=t<e?e-t:t-e)>Math.PI&&(n=2*Math.PI-n),n}},{key:\"toRadians\",value:function(t){return t*Math.PI/180}},{key:\"getTurn\",value:function(t,n){var i=Math.sin(n-t);return i>0?e.COUNTERCLOCKWISE:i<0?e.CLOCKWISE:e.NONE}},{key:\"angleBetweenOriented\",value:function(t,n,i){var r=e.angle(n,t),s=e.angle(n,i)-r;return s<=-Math.PI?s+e.PI_TIMES_2:s>Math.PI?s-e.PI_TIMES_2:s}}]),e}();Mn.PI_TIMES_2=2*Math.PI,Mn.PI_OVER_2=Math.PI/2,Mn.PI_OVER_4=Math.PI/4,Mn.COUNTERCLOCKWISE=ct.COUNTERCLOCKWISE,Mn.CLOCKWISE=ct.CLOCKWISE,Mn.NONE=ct.COLLINEAR;var An=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"addNextSegment\",value:function(t,e){if(this._s0=this._s1,this._s1=this._s2,this._s2=t,this._seg0.setCoordinates(this._s0,this._s1),this.computeOffsetSegment(this._seg0,this._side,this._distance,this._offset0),this._seg1.setCoordinates(this._s1,this._s2),this.computeOffsetSegment(this._seg1,this._side,this._distance,this._offset1),this._s1.equals(this._s2))return null;var n=ct.index(this._s0,this._s1,this._s2),i=n===ct.CLOCKWISE&&this._side===$.LEFT||n===ct.COUNTERCLOCKWISE&&this._side===$.RIGHT;0===n?this.addCollinear(e):i?this.addOutsideTurn(n,e):this.addInsideTurn(n,e)}},{key:\"addLineEndCap\",value:function(t,e){var n=new En(t,e),i=new En;this.computeOffsetSegment(n,$.LEFT,this._distance,i);var r=new En;this.computeOffsetSegment(n,$.RIGHT,this._distance,r);var s=e.x-t.x,a=e.y-t.y,o=Math.atan2(a,s);switch(this._bufParams.getEndCapStyle()){case _.CAP_ROUND:this._segList.addPt(i.p1),this.addDirectedFillet(e,o+Math.PI/2,o-Math.PI/2,ct.CLOCKWISE,this._distance),this._segList.addPt(r.p1);break;case _.CAP_FLAT:this._segList.addPt(i.p1),this._segList.addPt(r.p1);break;case _.CAP_SQUARE:var u=new X;u.x=Math.abs(this._distance)*Math.cos(o),u.y=Math.abs(this._distance)*Math.sin(o);var l=new X(i.p1.x+u.x,i.p1.y+u.y),h=new X(r.p1.x+u.x,r.p1.y+u.y);this._segList.addPt(l),this._segList.addPt(h)}}},{key:\"getCoordinates\",value:function(){return this._segList.getCoordinates()}},{key:\"addMitreJoin\",value:function(t,e,n,i){var r=pt.intersection(e.p0,e.p1,n.p0,n.p1);if(null!==r&&(i<=0?1:r.distance(t)/Math.abs(i))<=this._bufParams.getMitreLimit())return this._segList.addPt(r),null;this.addLimitedMitreJoin(e,n,i,this._bufParams.getMitreLimit())}},{key:\"addOutsideTurn\",value:function(t,n){if(this._offset0.p1.distance(this._offset1.p0)<this._distance*e.OFFSET_SEGMENT_SEPARATION_FACTOR)return this._segList.addPt(this._offset0.p1),null;this._bufParams.getJoinStyle()===_.JOIN_MITRE?this.addMitreJoin(this._s1,this._offset0,this._offset1,this._distance):this._bufParams.getJoinStyle()===_.JOIN_BEVEL?this.addBevelJoin(this._offset0,this._offset1):(n&&this._segList.addPt(this._offset0.p1),this.addCornerFillet(this._s1,this._offset0.p1,this._offset1.p0,t,this._distance),this._segList.addPt(this._offset1.p0))}},{key:\"createSquare\",value:function(t){this._segList.addPt(new X(t.x+this._distance,t.y+this._distance)),this._segList.addPt(new X(t.x+this._distance,t.y-this._distance)),this._segList.addPt(new X(t.x-this._distance,t.y-this._distance)),this._segList.addPt(new X(t.x-this._distance,t.y+this._distance)),this._segList.closeRing()}},{key:\"addSegments\",value:function(t,e){this._segList.addPts(t,e)}},{key:\"addFirstSegment\",value:function(){this._segList.addPt(this._offset1.p0)}},{key:\"addCornerFillet\",value:function(t,e,n,i,r){var s=e.x-t.x,a=e.y-t.y,o=Math.atan2(a,s),u=n.x-t.x,l=n.y-t.y,h=Math.atan2(l,u);i===ct.CLOCKWISE?o<=h&&(o+=2*Math.PI):o>=h&&(o-=2*Math.PI),this._segList.addPt(e),this.addDirectedFillet(t,o,h,i,r),this._segList.addPt(n)}},{key:\"addLastSegment\",value:function(){this._segList.addPt(this._offset1.p1)}},{key:\"initSideSegments\",value:function(t,e,n){this._s1=t,this._s2=e,this._side=n,this._seg1.setCoordinates(t,e),this.computeOffsetSegment(this._seg1,n,this._distance,this._offset1)}},{key:\"addLimitedMitreJoin\",value:function(t,e,n,i){var r=this._seg0.p1,s=Mn.angle(r,this._seg0.p0),a=Mn.angleBetweenOriented(this._seg0.p0,r,this._seg1.p1)/2,o=Mn.normalize(s+a),u=Mn.normalize(o+Math.PI),l=i*n,h=n-l*Math.abs(Math.sin(a)),c=r.x+l*Math.cos(u),f=r.y+l*Math.sin(u),v=new X(c,f),g=new En(r,v),y=g.pointAlongOffset(1,h),d=g.pointAlongOffset(1,-h);this._side===$.LEFT?(this._segList.addPt(y),this._segList.addPt(d)):(this._segList.addPt(d),this._segList.addPt(y))}},{key:\"addDirectedFillet\",value:function(t,e,n,i,r){var s=i===ct.CLOCKWISE?-1:1,a=Math.abs(e-n),o=Math.trunc(a/this._filletAngleQuantum+.5);if(o<1)return null;for(var u=a/o,l=new X,h=0;h<o;h++){var c=e+s*h*u;l.x=t.x+r*Math.cos(c),l.y=t.y+r*Math.sin(c),this._segList.addPt(l)}}},{key:\"computeOffsetSegment\",value:function(t,e,n,i){var r=e===$.LEFT?1:-1,s=t.p1.x-t.p0.x,a=t.p1.y-t.p0.y,o=Math.sqrt(s*s+a*a),u=r*n*s/o,l=r*n*a/o;i.p0.x=t.p0.x-l,i.p0.y=t.p0.y+u,i.p1.x=t.p1.x-l,i.p1.y=t.p1.y+u}},{key:\"addInsideTurn\",value:function(t,n){if(this._li.computeIntersection(this._offset0.p0,this._offset0.p1,this._offset1.p0,this._offset1.p1),this._li.hasIntersection())this._segList.addPt(this._li.getIntersection(0));else if(this._hasNarrowConcaveAngle=!0,this._offset0.p1.distance(this._offset1.p0)<this._distance*e.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR)this._segList.addPt(this._offset0.p1);else{if(this._segList.addPt(this._offset0.p1),this._closingSegLengthFactor>0){var i=new X((this._closingSegLengthFactor*this._offset0.p1.x+this._s1.x)/(this._closingSegLengthFactor+1),(this._closingSegLengthFactor*this._offset0.p1.y+this._s1.y)/(this._closingSegLengthFactor+1));this._segList.addPt(i);var r=new X((this._closingSegLengthFactor*this._offset1.p0.x+this._s1.x)/(this._closingSegLengthFactor+1),(this._closingSegLengthFactor*this._offset1.p0.y+this._s1.y)/(this._closingSegLengthFactor+1));this._segList.addPt(r)}else this._segList.addPt(this._s1);this._segList.addPt(this._offset1.p0)}}},{key:\"createCircle\",value:function(t){var e=new X(t.x+this._distance,t.y);this._segList.addPt(e),this.addDirectedFillet(t,0,2*Math.PI,-1,this._distance),this._segList.closeRing()}},{key:\"addBevelJoin\",value:function(t,e){this._segList.addPt(t.p1),this._segList.addPt(e.p0)}},{key:\"init\",value:function(t){this._distance=t,this._maxCurveSegmentError=t*(1-Math.cos(this._filletAngleQuantum/2)),this._segList=new bn,this._segList.setPrecisionModel(this._precisionModel),this._segList.setMinimumVertexDistance(t*e.CURVE_VERTEX_SNAP_DISTANCE_FACTOR)}},{key:\"addCollinear\",value:function(t){this._li.computeIntersection(this._s0,this._s1,this._s1,this._s2),this._li.getIntersectionNum()>=2&&(this._bufParams.getJoinStyle()===_.JOIN_BEVEL||this._bufParams.getJoinStyle()===_.JOIN_MITRE?(t&&this._segList.addPt(this._offset0.p1),this._segList.addPt(this._offset1.p0)):this.addCornerFillet(this._s1,this._offset0.p1,this._offset1.p0,ct.CLOCKWISE,this._distance))}},{key:\"closeRing\",value:function(){this._segList.closeRing()}},{key:\"hasNarrowConcaveAngle\",value:function(){return this._hasNarrowConcaveAngle}}],[{key:\"constructor_\",value:function(){this._maxCurveSegmentError=0,this._filletAngleQuantum=null,this._closingSegLengthFactor=1,this._segList=null,this._distance=0,this._precisionModel=null,this._bufParams=null,this._li=null,this._s0=null,this._s1=null,this._s2=null,this._seg0=new En,this._seg1=new En,this._offset0=new En,this._offset1=new En,this._side=0,this._hasNarrowConcaveAngle=!1;var t=arguments[0],n=arguments[1],i=arguments[2];this._precisionModel=t,this._bufParams=n,this._li=new Oe,this._filletAngleQuantum=Math.PI/2/n.getQuadrantSegments(),n.getQuadrantSegments()>=8&&n.getJoinStyle()===_.JOIN_ROUND&&(this._closingSegLengthFactor=e.MAX_CLOSING_SEG_LEN_FACTOR),this.init(i)}}]),e}();An.OFFSET_SEGMENT_SEPARATION_FACTOR=.001,An.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR=.001,An.CURVE_VERTEX_SNAP_DISTANCE_FACTOR=1e-6,An.MAX_CLOSING_SEG_LEN_FACTOR=80;var Pn=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"getOffsetCurve\",value:function(t,e){if(this._distance=e,0===e)return null;var n=e<0,i=Math.abs(e),r=this.getSegGen(i);t.length<=1?this.computePointCurve(t[0],r):this.computeOffsetCurve(t,n,r);var s=r.getCoordinates();return n&&jt.reverse(s),s}},{key:\"computeSingleSidedBufferCurve\",value:function(t,e,n){var i=this.simplifyTolerance(this._distance);if(e){n.addSegments(t,!0);var r=On.simplify(t,-i),s=r.length-1;n.initSideSegments(r[s],r[s-1],$.LEFT),n.addFirstSegment();for(var a=s-2;a>=0;a--)n.addNextSegment(r[a],!0)}else{n.addSegments(t,!1);var o=On.simplify(t,i),u=o.length-1;n.initSideSegments(o[0],o[1],$.LEFT),n.addFirstSegment();for(var l=2;l<=u;l++)n.addNextSegment(o[l],!0)}n.addLastSegment(),n.closeRing()}},{key:\"computeRingBufferCurve\",value:function(t,e,n){var i=this.simplifyTolerance(this._distance);e===$.RIGHT&&(i=-i);var r=On.simplify(t,i),s=r.length-1;n.initSideSegments(r[s-1],r[0],e);for(var a=1;a<=s;a++){var o=1!==a;n.addNextSegment(r[a],o)}n.closeRing()}},{key:\"computeLineBufferCurve\",value:function(t,e){var n=this.simplifyTolerance(this._distance),i=On.simplify(t,n),r=i.length-1;e.initSideSegments(i[0],i[1],$.LEFT);for(var s=2;s<=r;s++)e.addNextSegment(i[s],!0);e.addLastSegment(),e.addLineEndCap(i[r-1],i[r]);var a=On.simplify(t,-n),o=a.length-1;e.initSideSegments(a[o],a[o-1],$.LEFT);for(var u=o-2;u>=0;u--)e.addNextSegment(a[u],!0);e.addLastSegment(),e.addLineEndCap(a[1],a[0]),e.closeRing()}},{key:\"computePointCurve\",value:function(t,e){switch(this._bufParams.getEndCapStyle()){case _.CAP_ROUND:e.createCircle(t);break;case _.CAP_SQUARE:e.createSquare(t)}}},{key:\"getLineCurve\",value:function(t,e){if(this._distance=e,this.isLineOffsetEmpty(e))return null;var n=Math.abs(e),i=this.getSegGen(n);if(t.length<=1)this.computePointCurve(t[0],i);else if(this._bufParams.isSingleSided()){var r=e<0;this.computeSingleSidedBufferCurve(t,r,i)}else this.computeLineBufferCurve(t,i);return i.getCoordinates()}},{key:\"getBufferParameters\",value:function(){return this._bufParams}},{key:\"simplifyTolerance\",value:function(t){return t*this._bufParams.getSimplifyFactor()}},{key:\"getRingCurve\",value:function(t,n,i){if(this._distance=i,t.length<=2)return this.getLineCurve(t,i);if(0===i)return e.copyCoordinates(t);var r=this.getSegGen(i);return this.computeRingBufferCurve(t,n,r),r.getCoordinates()}},{key:\"computeOffsetCurve\",value:function(t,e,n){var i=this.simplifyTolerance(this._distance);if(e){var r=On.simplify(t,-i),s=r.length-1;n.initSideSegments(r[s],r[s-1],$.LEFT),n.addFirstSegment();for(var a=s-2;a>=0;a--)n.addNextSegment(r[a],!0)}else{var o=On.simplify(t,i),u=o.length-1;n.initSideSegments(o[0],o[1],$.LEFT),n.addFirstSegment();for(var l=2;l<=u;l++)n.addNextSegment(o[l],!0)}n.addLastSegment()}},{key:\"isLineOffsetEmpty\",value:function(t){return 0===t||t<0&&!this._bufParams.isSingleSided()}},{key:\"getSegGen\",value:function(t){return new An(this._precisionModel,this._bufParams,t)}}],[{key:\"constructor_\",value:function(){this._distance=0,this._precisionModel=null,this._bufParams=null;var t=arguments[0],e=arguments[1];this._precisionModel=t,this._bufParams=e}},{key:\"copyCoordinates\",value:function(t){for(var e=new Array(t.length).fill(null),n=0;n<e.length;n++)e[n]=new X(t[n]);return e}}]),e}(),Dn=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"findStabbedSegments\",value:function(){if(1===arguments.length){for(var t=arguments[0],e=new yt,n=this._subgraphs.iterator();n.hasNext();){var i=n.next(),r=i.getEnvelope();t.y<r.getMinY()||t.y>r.getMaxY()||this.findStabbedSegments(t,i.getDirectedEdges(),e)}return e}if(3===arguments.length)if(rt(arguments[2],nt)&&arguments[0]instanceof X&&arguments[1]instanceof Je)for(var s=arguments[0],a=arguments[1],o=arguments[2],u=a.getEdge().getCoordinates(),l=0;l<u.length-1;l++){this._seg.p0=u[l],this._seg.p1=u[l+1],this._seg.p0.y>this._seg.p1.y&&this._seg.reverse();var h=Math.max(this._seg.p0.x,this._seg.p1.x);if(!(h<s.x)&&!(this._seg.isHorizontal()||s.y<this._seg.p0.y||s.y>this._seg.p1.y||ct.index(this._seg.p0,this._seg.p1,s)===ct.RIGHT)){var c=a.getDepth($.LEFT);this._seg.p0.equals(u[l])||(c=a.getDepth($.RIGHT));var f=new Fn(this._seg,c);o.add(f)}}else if(rt(arguments[2],nt)&&arguments[0]instanceof X&&rt(arguments[1],nt))for(var v=arguments[0],g=arguments[1],y=arguments[2],d=g.iterator();d.hasNext();){var _=d.next();_.isForward()&&this.findStabbedSegments(v,_,y)}}},{key:\"getDepth\",value:function(t){var e=this.findStabbedSegments(t);return 0===e.size()?0:on.min(e)._leftDepth}}],[{key:\"constructor_\",value:function(){this._subgraphs=null,this._seg=new En;var t=arguments[0];this._subgraphs=t}}]),e}(),Fn=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"compareTo\",value:function(t){var e=t;if(this._upwardSeg.minX()>=e._upwardSeg.maxX())return 1;if(this._upwardSeg.maxX()<=e._upwardSeg.minX())return-1;var n=this._upwardSeg.orientationIndex(e._upwardSeg);return 0!==n||0!==(n=-1*e._upwardSeg.orientationIndex(this._upwardSeg))?n:this._upwardSeg.compareTo(e._upwardSeg)}},{key:\"compareX\",value:function(t,e){var n=t.p0.compareTo(e.p0);return 0!==n?n:t.p1.compareTo(e.p1)}},{key:\"toString\",value:function(){return this._upwardSeg.toString()}},{key:\"interfaces_\",get:function(){return[x]}}],[{key:\"constructor_\",value:function(){this._upwardSeg=null,this._leftDepth=null;var t=arguments[0],e=arguments[1];this._upwardSeg=new En(t),this._leftDepth=e}}]),e}();Dn.DepthSegment=Fn;var Gn=function(e){i(s,e);var r=c(s);function s(){var e;return t(this,s),e=r.call(this),s.constructor_.apply(l(e),arguments),e}return n(s,null,[{key:\"constructor_\",value:function(){p.constructor_.call(this,\"Projective point not representable on the Cartesian plane.\")}}]),s}(p),qn=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"getY\",value:function(){var t=this.y/this.w;if(A.isNaN(t)||A.isInfinite(t))throw new Gn;return t}},{key:\"getX\",value:function(){var t=this.x/this.w;if(A.isNaN(t)||A.isInfinite(t))throw new Gn;return t}},{key:\"getCoordinate\",value:function(){var t=new X;return t.x=this.getX(),t.y=this.getY(),t}}],[{key:\"constructor_\",value:function(){if(this.x=null,this.y=null,this.w=null,0===arguments.length)this.x=0,this.y=0,this.w=1;else if(1===arguments.length){var t=arguments[0];this.x=t.x,this.y=t.y,this.w=1}else if(2===arguments.length){if(\"number\"==typeof arguments[0]&&\"number\"==typeof arguments[1]){var n=arguments[0],i=arguments[1];this.x=n,this.y=i,this.w=1}else if(arguments[0]instanceof e&&arguments[1]instanceof e){var r=arguments[0],s=arguments[1];this.x=r.y*s.w-s.y*r.w,this.y=s.x*r.w-r.x*s.w,this.w=r.x*s.y-s.x*r.y}else if(arguments[0]instanceof X&&arguments[1]instanceof X){var a=arguments[0],o=arguments[1];this.x=a.y-o.y,this.y=o.x-a.x,this.w=a.x*o.y-o.x*a.y}}else if(3===arguments.length){var u=arguments[0],l=arguments[1],h=arguments[2];this.x=u,this.y=l,this.w=h}else if(4===arguments.length){var c=arguments[0],f=arguments[1],v=arguments[2],g=arguments[3],y=c.y-f.y,d=f.x-c.x,_=c.x*f.y-f.x*c.y,p=v.y-g.y,m=g.x-v.x,k=v.x*g.y-g.x*v.y;this.x=d*k-m*_,this.y=p*_-y*k,this.w=y*m-p*d}}}]),e}(),Yn=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"area\",value:function(){return e.area(this.p0,this.p1,this.p2)}},{key:\"signedArea\",value:function(){return e.signedArea(this.p0,this.p1,this.p2)}},{key:\"interpolateZ\",value:function(t){if(null===t)throw new m(\"Supplied point is null.\");return e.interpolateZ(t,this.p0,this.p1,this.p2)}},{key:\"longestSideLength\",value:function(){return e.longestSideLength(this.p0,this.p1,this.p2)}},{key:\"isAcute\",value:function(){return e.isAcute(this.p0,this.p1,this.p2)}},{key:\"circumcentre\",value:function(){return e.circumcentre(this.p0,this.p1,this.p2)}},{key:\"area3D\",value:function(){return e.area3D(this.p0,this.p1,this.p2)}},{key:\"centroid\",value:function(){return e.centroid(this.p0,this.p1,this.p2)}},{key:\"inCentre\",value:function(){return e.inCentre(this.p0,this.p1,this.p2)}}],[{key:\"constructor_\",value:function(){this.p0=null,this.p1=null,this.p2=null;var t=arguments[0],e=arguments[1],n=arguments[2];this.p0=t,this.p1=e,this.p2=n}},{key:\"area\",value:function(t,e,n){return Math.abs(((n.x-t.x)*(e.y-t.y)-(e.x-t.x)*(n.y-t.y))/2)}},{key:\"signedArea\",value:function(t,e,n){return((n.x-t.x)*(e.y-t.y)-(e.x-t.x)*(n.y-t.y))/2}},{key:\"det\",value:function(t,e,n,i){return t*i-e*n}},{key:\"interpolateZ\",value:function(t,e,n,i){var r=e.x,s=e.y,a=n.x-r,o=i.x-r,u=n.y-s,l=i.y-s,h=a*l-o*u,c=t.x-r,f=t.y-s,v=(l*c-o*f)/h,g=(-u*c+a*f)/h;return e.getZ()+v*(n.getZ()-e.getZ())+g*(i.getZ()-e.getZ())}},{key:\"longestSideLength\",value:function(t,e,n){var i=t.distance(e),r=e.distance(n),s=n.distance(t),a=i;return r>a&&(a=r),s>a&&(a=s),a}},{key:\"circumcentreDD\",value:function(t,e,n){var i=ut.valueOf(t.x).subtract(n.x),r=ut.valueOf(t.y).subtract(n.y),s=ut.valueOf(e.x).subtract(n.x),a=ut.valueOf(e.y).subtract(n.y),o=ut.determinant(i,r,s,a).multiply(2),u=i.sqr().add(r.sqr()),l=s.sqr().add(a.sqr()),h=ut.determinant(r,u,a,l),c=ut.determinant(i,u,s,l),f=ut.valueOf(n.x).subtract(h.divide(o)).doubleValue(),v=ut.valueOf(n.y).add(c.divide(o)).doubleValue();return new X(f,v)}},{key:\"isAcute\",value:function(t,e,n){return!!Mn.isAcute(t,e,n)&&(!!Mn.isAcute(e,n,t)&&!!Mn.isAcute(n,t,e))}},{key:\"circumcentre\",value:function(t,n,i){var r=i.x,s=i.y,a=t.x-r,o=t.y-s,u=n.x-r,l=n.y-s,h=2*e.det(a,o,u,l),c=e.det(o,a*a+o*o,l,u*u+l*l),f=e.det(a,a*a+o*o,u,u*u+l*l);return new X(r-c/h,s+f/h)}},{key:\"perpendicularBisector\",value:function(t,e){var n=e.x-t.x,i=e.y-t.y,r=new qn(t.x+n/2,t.y+i/2,1),s=new qn(t.x-i+n/2,t.y+n+i/2,1);return new qn(r,s)}},{key:\"angleBisector\",value:function(t,e,n){var i=e.distance(t),r=i/(i+e.distance(n)),s=n.x-t.x,a=n.y-t.y;return new X(t.x+r*s,t.y+r*a)}},{key:\"area3D\",value:function(t,e,n){var i=e.x-t.x,r=e.y-t.y,s=e.getZ()-t.getZ(),a=n.x-t.x,o=n.y-t.y,u=n.getZ()-t.getZ(),l=r*u-s*o,h=s*a-i*u,c=i*o-r*a,f=l*l+h*h+c*c,v=Math.sqrt(f)/2;return v}},{key:\"centroid\",value:function(t,e,n){var i=(t.x+e.x+n.x)/3,r=(t.y+e.y+n.y)/3;return new X(i,r)}},{key:\"inCentre\",value:function(t,e,n){var i=e.distance(n),r=t.distance(n),s=t.distance(e),a=i+r+s,o=(i*t.x+r*e.x+s*n.x)/a,u=(i*t.y+r*e.y+s*n.y)/a;return new X(o,u)}}]),e}(),zn=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"addRingSide\",value:function(t,e,n,i,r){if(0===e&&t.length<Xt.MINIMUM_VALID_SIZE)return null;var s=i,a=r;t.length>=Xt.MINIMUM_VALID_SIZE&&ct.isCCW(t)&&(s=r,a=i,n=$.opposite(n));var o=this._curveBuilder.getRingCurve(t,n,e);this.addCurve(o,s,a)}},{key:\"addRingBothSides\",value:function(t,e){this.addRingSide(t,e,$.LEFT,H.EXTERIOR,H.INTERIOR),this.addRingSide(t,e,$.RIGHT,H.INTERIOR,H.EXTERIOR)}},{key:\"addPoint\",value:function(t){if(this._distance<=0)return null;var e=t.getCoordinates(),n=this._curveBuilder.getLineCurve(e,this._distance);this.addCurve(n,H.EXTERIOR,H.INTERIOR)}},{key:\"addPolygon\",value:function(t){var e=this._distance,n=$.LEFT;this._distance<0&&(e=-this._distance,n=$.RIGHT);var i=t.getExteriorRing(),r=jt.removeRepeatedPoints(i.getCoordinates());if(this._distance<0&&this.isErodedCompletely(i,this._distance))return null;if(this._distance<=0&&r.length<3)return null;this.addRingSide(r,e,n,H.EXTERIOR,H.INTERIOR);for(var s=0;s<t.getNumInteriorRing();s++){var a=t.getInteriorRingN(s),o=jt.removeRepeatedPoints(a.getCoordinates());this._distance>0&&this.isErodedCompletely(a,-this._distance)||this.addRingSide(o,e,$.opposite(n),H.INTERIOR,H.EXTERIOR)}}},{key:\"isTriangleErodedCompletely\",value:function(t,e){var n=new Yn(t[0],t[1],t[2]),i=n.inCentre();return xt.pointToSegment(i,n.p0,n.p1)<Math.abs(e)}},{key:\"addLineString\",value:function(t){if(this._curveBuilder.isLineOffsetEmpty(this._distance))return null;var e=jt.removeRepeatedPoints(t.getCoordinates());if(jt.isRing(e)&&!this._curveBuilder.getBufferParameters().isSingleSided())this.addRingBothSides(e,this._distance);else{var n=this._curveBuilder.getLineCurve(e,this._distance);this.addCurve(n,H.EXTERIOR,H.INTERIOR)}}},{key:\"addCurve\",value:function(t,e,n){if(null===t||t.length<2)return null;var i=new In(t,new Pe(0,H.BOUNDARY,e,n));this._curveList.add(i)}},{key:\"getCurves\",value:function(){return this.add(this._inputGeom),this._curveList}},{key:\"add\",value:function(t){if(t.isEmpty())return null;if(t instanceof Dt)this.addPolygon(t);else if(t instanceof wt)this.addLineString(t);else if(t instanceof bt)this.addPoint(t);else if(t instanceof zt)this.addCollection(t);else if(t instanceof se)this.addCollection(t);else if(t instanceof te)this.addCollection(t);else{if(!(t instanceof Yt))throw new W(t.getGeometryType());this.addCollection(t)}}},{key:\"isErodedCompletely\",value:function(t,e){var n=t.getCoordinates();if(n.length<4)return e<0;if(4===n.length)return this.isTriangleErodedCompletely(n,e);var i=t.getEnvelopeInternal(),r=Math.min(i.getHeight(),i.getWidth());return e<0&&2*Math.abs(e)>r}},{key:\"addCollection\",value:function(t){for(var e=0;e<t.getNumGeometries();e++){var n=t.getGeometryN(e);this.add(n)}}}],[{key:\"constructor_\",value:function(){this._inputGeom=null,this._distance=null,this._curveBuilder=null,this._curveList=new yt;var t=arguments[0],e=arguments[1],n=arguments[2];this._inputGeom=t,this._distance=e,this._curveBuilder=n}}]),e}(),Xn=function(){function e(){t(this,e)}return n(e,[{key:\"locate\",value:function(t){}}]),e}(),Bn=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"next\",value:function(){if(this._atStart)return this._atStart=!1,e.isAtomic(this._parent)&&this._index++,this._parent;if(null!==this._subcollectionIterator){if(this._subcollectionIterator.hasNext())return this._subcollectionIterator.next();this._subcollectionIterator=null}if(this._index>=this._max)throw new j;var t=this._parent.getGeometryN(this._index++);return t instanceof Yt?(this._subcollectionIterator=new e(t),this._subcollectionIterator.next()):t}},{key:\"remove\",value:function(){throw new W(this.getClass().getName())}},{key:\"hasNext\",value:function(){if(this._atStart)return!0;if(null!==this._subcollectionIterator){if(this._subcollectionIterator.hasNext())return!0;this._subcollectionIterator=null}return!(this._index>=this._max)}},{key:\"interfaces_\",get:function(){return[_n]}}],[{key:\"constructor_\",value:function(){this._parent=null,this._atStart=null,this._max=null,this._index=null,this._subcollectionIterator=null;var t=arguments[0];this._parent=t,this._atStart=!0,this._index=0,this._max=t.getNumGeometries()}},{key:\"isAtomic\",value:function(t){return!(t instanceof Yt)}}]),e}(),Un=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"locate\",value:function(t){return e.locate(t,this._geom)}},{key:\"interfaces_\",get:function(){return[Xn]}}],[{key:\"constructor_\",value:function(){this._geom=null;var t=arguments[0];this._geom=t}},{key:\"locatePointInPolygon\",value:function(t,n){if(n.isEmpty())return H.EXTERIOR;var i=n.getExteriorRing(),r=e.locatePointInRing(t,i);if(r!==H.INTERIOR)return r;for(var s=0;s<n.getNumInteriorRing();s++){var a=n.getInteriorRingN(s),o=e.locatePointInRing(t,a);if(o===H.BOUNDARY)return H.BOUNDARY;if(o===H.INTERIOR)return H.EXTERIOR}return H.INTERIOR}},{key:\"locatePointInRing\",value:function(t,e){return e.getEnvelopeInternal().intersects(t)?Me.locateInRing(t,e.getCoordinates()):H.EXTERIOR}},{key:\"containsPointInPolygon\",value:function(t,n){return H.EXTERIOR!==e.locatePointInPolygon(t,n)}},{key:\"locateInGeometry\",value:function(t,n){if(n instanceof Dt)return e.locatePointInPolygon(t,n);if(n instanceof Yt)for(var i=new Bn(n);i.hasNext();){var r=i.next();if(r!==n){var s=e.locateInGeometry(t,r);if(s!==H.EXTERIOR)return s}}return H.EXTERIOR}},{key:\"isContained\",value:function(t,n){return H.EXTERIOR!==e.locate(t,n)}},{key:\"locate\",value:function(t,n){return n.isEmpty()?H.EXTERIOR:n.getEnvelopeInternal().intersects(t)?e.locateInGeometry(t,n):H.EXTERIOR}}]),e}(),Vn=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"getNextCW\",value:function(t){this.getEdges();var e=this._edgeList.indexOf(t),n=e-1;return 0===e&&(n=this._edgeList.size()-1),this._edgeList.get(n)}},{key:\"propagateSideLabels\",value:function(t){for(var e=H.NONE,n=this.iterator();n.hasNext();){var i=n.next().getLabel();i.isArea(t)&&i.getLocation(t,$.LEFT)!==H.NONE&&(e=i.getLocation(t,$.LEFT))}if(e===H.NONE)return null;for(var r=e,s=this.iterator();s.hasNext();){var a=s.next(),o=a.getLabel();if(o.getLocation(t,$.ON)===H.NONE&&o.setLocation(t,$.ON,r),o.isArea(t)){var u=o.getLocation(t,$.LEFT),l=o.getLocation(t,$.RIGHT);if(l!==H.NONE){if(l!==r)throw new vt(\"side location conflict\",a.getCoordinate());u===H.NONE&&G.shouldNeverReachHere(\"found single null side (at \"+a.getCoordinate()+\")\"),r=u}else G.isTrue(o.getLocation(t,$.LEFT)===H.NONE,\"found single null side\"),o.setLocation(t,$.RIGHT,r),o.setLocation(t,$.LEFT,r)}}}},{key:\"getCoordinate\",value:function(){var t=this.iterator();return t.hasNext()?t.next().getCoordinate():null}},{key:\"print\",value:function(t){mt.out.println(\"EdgeEndStar:   \"+this.getCoordinate());for(var e=this.iterator();e.hasNext();){e.next().print(t)}}},{key:\"isAreaLabelsConsistent\",value:function(t){return this.computeEdgeEndLabels(t.getBoundaryNodeRule()),this.checkAreaLabelsConsistent(0)}},{key:\"checkAreaLabelsConsistent\",value:function(t){var e=this.getEdges();if(e.size()<=0)return!0;var n=e.size()-1,i=e.get(n).getLabel().getLocation(t,$.LEFT);G.isTrue(i!==H.NONE,\"Found unlabelled area edge\");for(var r=i,s=this.iterator();s.hasNext();){var a=s.next().getLabel();G.isTrue(a.isArea(t),\"Found non-area edge\");var o=a.getLocation(t,$.LEFT),u=a.getLocation(t,$.RIGHT);if(o===u)return!1;if(u!==r)return!1;r=o}return!0}},{key:\"findIndex\",value:function(t){this.iterator();for(var e=0;e<this._edgeList.size();e++){if(this._edgeList.get(e)===t)return e}return-1}},{key:\"iterator\",value:function(){return this.getEdges().iterator()}},{key:\"getEdges\",value:function(){return null===this._edgeList&&(this._edgeList=new yt(this._edgeMap.values())),this._edgeList}},{key:\"getLocation\",value:function(t,e,n){return this._ptInAreaLocation[t]===H.NONE&&(this._ptInAreaLocation[t]=Un.locate(e,n[t].getGeometry())),this._ptInAreaLocation[t]}},{key:\"toString\",value:function(){var t=new st;t.append(\"EdgeEndStar:   \"+this.getCoordinate()),t.append(\"\\n\");for(var e=this.iterator();e.hasNext();){var n=e.next();t.append(n),t.append(\"\\n\")}return t.toString()}},{key:\"computeEdgeEndLabels\",value:function(t){for(var e=this.iterator();e.hasNext();){e.next().computeLabel(t)}}},{key:\"computeLabelling\",value:function(t){this.computeEdgeEndLabels(t[0].getBoundaryNodeRule()),this.propagateSideLabels(0),this.propagateSideLabels(1);for(var e=[!1,!1],n=this.iterator();n.hasNext();)for(var i=n.next().getLabel(),r=0;r<2;r++)i.isLine(r)&&i.getLocation(r)===H.BOUNDARY&&(e[r]=!0);for(var s=this.iterator();s.hasNext();)for(var a=s.next(),o=a.getLabel(),u=0;u<2;u++)if(o.isAnyNull(u)){var l=H.NONE;if(e[u])l=H.EXTERIOR;else{var h=a.getCoordinate();l=this.getLocation(u,h,t)}o.setAllLocationsIfNull(u,l)}}},{key:\"getDegree\",value:function(){return this._edgeMap.size()}},{key:\"insertEdgeEnd\",value:function(t,e){this._edgeMap.put(t,e),this._edgeList=null}}],[{key:\"constructor_\",value:function(){this._edgeMap=new Ze,this._edgeList=null,this._ptInAreaLocation=[H.NONE,H.NONE]}}]),e}(),Hn=function(e){i(a,e);var s=c(a);function a(){var e;return t(this,a),e=s.call(this),a.constructor_.apply(l(e),arguments),e}return n(a,[{key:\"linkResultDirectedEdges\",value:function(){this.getResultAreaEdges();for(var t=null,e=null,n=this._SCANNING_FOR_INCOMING,i=0;i<this._resultAreaEdgeList.size();i++){var r=this._resultAreaEdgeList.get(i),s=r.getSym();if(r.getLabel().isArea())switch(null===t&&r.isInResult()&&(t=r),n){case this._SCANNING_FOR_INCOMING:if(!s.isInResult())continue;e=s,n=this._LINKING_TO_OUTGOING;break;case this._LINKING_TO_OUTGOING:if(!r.isInResult())continue;e.setNext(r),n=this._SCANNING_FOR_INCOMING}}if(n===this._LINKING_TO_OUTGOING){if(null===t)throw new vt(\"no outgoing dirEdge found\",this.getCoordinate());G.isTrue(t.isInResult(),\"unable to link last incoming dirEdge\"),e.setNext(t)}}},{key:\"insert\",value:function(t){var e=t;this.insertEdgeEnd(e,e)}},{key:\"getRightmostEdge\",value:function(){var t=this.getEdges(),e=t.size();if(e<1)return null;var n=t.get(0);if(1===e)return n;var i=t.get(e-1),r=n.getQuadrant(),s=i.getQuadrant();return We.isNorthern(r)&&We.isNorthern(s)?n:We.isNorthern(r)||We.isNorthern(s)?0!==n.getDy()?n:0!==i.getDy()?i:(G.shouldNeverReachHere(\"found two horizontal edges incident on node\"),null):i}},{key:\"print\",value:function(t){mt.out.println(\"DirectedEdgeStar: \"+this.getCoordinate());for(var e=this.iterator();e.hasNext();){var n=e.next();t.print(\"out \"),n.print(t),t.println(),t.print(\"in \"),n.getSym().print(t),t.println()}}},{key:\"getResultAreaEdges\",value:function(){if(null!==this._resultAreaEdgeList)return this._resultAreaEdgeList;this._resultAreaEdgeList=new yt;for(var t=this.iterator();t.hasNext();){var e=t.next();(e.isInResult()||e.getSym().isInResult())&&this._resultAreaEdgeList.add(e)}return this._resultAreaEdgeList}},{key:\"updateLabelling\",value:function(t){for(var e=this.iterator();e.hasNext();){var n=e.next().getLabel();n.setAllLocationsIfNull(0,t.getLocation(0)),n.setAllLocationsIfNull(1,t.getLocation(1))}}},{key:\"linkAllDirectedEdges\",value:function(){this.getEdges();for(var t=null,e=null,n=this._edgeList.size()-1;n>=0;n--){var i=this._edgeList.get(n),r=i.getSym();null===e&&(e=r),null!==t&&r.setNext(t),t=i}e.setNext(t)}},{key:\"computeDepths\",value:function(){if(1===arguments.length){var t=arguments[0],e=this.findIndex(t),n=t.getDepth($.LEFT),i=t.getDepth($.RIGHT),r=this.computeDepths(e+1,this._edgeList.size(),n),s=this.computeDepths(0,e,r);if(s!==i)throw new vt(\"depth mismatch at \"+t.getCoordinate())}else if(3===arguments.length){for(var a=arguments[0],o=arguments[1],u=arguments[2],l=u,h=a;h<o;h++){var c=this._edgeList.get(h);c.setEdgeDepths($.RIGHT,l),l=c.getDepth($.LEFT)}return l}}},{key:\"mergeSymLabels\",value:function(){for(var t=this.iterator();t.hasNext();){var e=t.next();e.getLabel().merge(e.getSym().getLabel())}}},{key:\"linkMinimalDirectedEdges\",value:function(t){for(var e=null,n=null,i=this._SCANNING_FOR_INCOMING,r=this._resultAreaEdgeList.size()-1;r>=0;r--){var s=this._resultAreaEdgeList.get(r),a=s.getSym();switch(null===e&&s.getEdgeRing()===t&&(e=s),i){case this._SCANNING_FOR_INCOMING:if(a.getEdgeRing()!==t)continue;n=a,i=this._LINKING_TO_OUTGOING;break;case this._LINKING_TO_OUTGOING:if(s.getEdgeRing()!==t)continue;n.setNextMin(s),i=this._SCANNING_FOR_INCOMING}}i===this._LINKING_TO_OUTGOING&&(G.isTrue(null!==e,\"found null for first outgoing dirEdge\"),G.isTrue(e.getEdgeRing()===t,\"unable to link last incoming dirEdge\"),n.setNextMin(e))}},{key:\"getOutgoingDegree\",value:function(){if(0===arguments.length){for(var t=0,e=this.iterator();e.hasNext();){var n=e.next();n.isInResult()&&t++}return t}if(1===arguments.length){for(var i=arguments[0],r=0,s=this.iterator();s.hasNext();){var a=s.next();a.getEdgeRing()===i&&r++}return r}}},{key:\"getLabel\",value:function(){return this._label}},{key:\"findCoveredLineEdges\",value:function(){for(var t=H.NONE,e=this.iterator();e.hasNext();){var n=e.next(),i=n.getSym();if(!n.isLineEdge()){if(n.isInResult()){t=H.INTERIOR;break}if(i.isInResult()){t=H.EXTERIOR;break}}}if(t===H.NONE)return null;for(var r=t,s=this.iterator();s.hasNext();){var a=s.next(),o=a.getSym();a.isLineEdge()?a.getEdge().setCovered(r===H.INTERIOR):(a.isInResult()&&(r=H.EXTERIOR),o.isInResult()&&(r=H.INTERIOR))}}},{key:\"computeLabelling\",value:function(t){f(r(a.prototype),\"computeLabelling\",this).call(this,t),this._label=new Pe(H.NONE);for(var e=this.iterator();e.hasNext();)for(var n=e.next().getEdge().getLabel(),i=0;i<2;i++){var s=n.getLocation(i);s!==H.INTERIOR&&s!==H.BOUNDARY||this._label.setLocation(i,H.INTERIOR)}}}],[{key:\"constructor_\",value:function(){this._resultAreaEdgeList=null,this._label=null,this._SCANNING_FOR_INCOMING=1,this._LINKING_TO_OUTGOING=2}}]),a}(Vn),Zn=function(e){i(s,e);var r=c(s);function s(){return t(this,s),r.call(this)}return n(s,[{key:\"createNode\",value:function(t){return new Ye(t,new Hn)}}]),s}(Qe),jn=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"compareTo\",value:function(t){var n=t;return e.compareOriented(this._pts,this._orientation,n._pts,n._orientation)}},{key:\"interfaces_\",get:function(){return[x]}}],[{key:\"constructor_\",value:function(){this._pts=null,this._orientation=null;var t=arguments[0];this._pts=t,this._orientation=e.orientation(t)}},{key:\"orientation\",value:function(t){return 1===jt.increasingDirection(t)}},{key:\"compareOriented\",value:function(t,e,n,i){for(var r=e?1:-1,s=i?1:-1,a=e?t.length:-1,o=i?n.length:-1,u=e?0:t.length-1,l=i?0:n.length-1;;){var h=t[u].compareTo(n[l]);if(0!==h)return h;var c=(u+=r)===a,f=(l+=s)===o;if(c&&!f)return-1;if(!c&&f)return 1;if(c&&f)return 0}}}]),e}(),Wn=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"print\",value:function(t){t.print(\"MULTILINESTRING ( \");for(var e=0;e<this._edges.size();e++){var n=this._edges.get(e);e>0&&t.print(\",\"),t.print(\"(\");for(var i=n.getCoordinates(),r=0;r<i.length;r++)r>0&&t.print(\",\"),t.print(i[r].x+\" \"+i[r].y);t.println(\")\")}t.print(\")  \")}},{key:\"addAll\",value:function(t){for(var e=t.iterator();e.hasNext();)this.add(e.next())}},{key:\"findEdgeIndex\",value:function(t){for(var e=0;e<this._edges.size();e++)if(this._edges.get(e).equals(t))return e;return-1}},{key:\"iterator\",value:function(){return this._edges.iterator()}},{key:\"getEdges\",value:function(){return this._edges}},{key:\"get\",value:function(t){return this._edges.get(t)}},{key:\"findEqualEdge\",value:function(t){var e=new jn(t.getCoordinates());return this._ocaMap.get(e)}},{key:\"add\",value:function(t){this._edges.add(t);var e=new jn(t.getCoordinates());this._ocaMap.put(e,t)}}],[{key:\"constructor_\",value:function(){this._edges=new yt,this._ocaMap=new Ze}}]),e}(),Kn=function(){function e(){t(this,e)}return n(e,[{key:\"processIntersections\",value:function(t,e,n,i){}},{key:\"isDone\",value:function(){}}]),e}(),Jn=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"isTrivialIntersection\",value:function(t,n,i,r){if(t===i&&1===this._li.getIntersectionNum()){if(e.isAdjacentSegments(n,r))return!0;if(t.isClosed()){var s=t.size()-1;if(0===n&&r===s||0===r&&n===s)return!0}}return!1}},{key:\"getProperIntersectionPoint\",value:function(){return this._properIntersectionPoint}},{key:\"hasProperInteriorIntersection\",value:function(){return this._hasProperInterior}},{key:\"getLineIntersector\",value:function(){return this._li}},{key:\"hasProperIntersection\",value:function(){return this._hasProper}},{key:\"processIntersections\",value:function(t,e,n,i){if(t===n&&e===i)return null;this.numTests++;var r=t.getCoordinates()[e],s=t.getCoordinates()[e+1],a=n.getCoordinates()[i],o=n.getCoordinates()[i+1];this._li.computeIntersection(r,s,a,o),this._li.hasIntersection()&&(this.numIntersections++,this._li.isInteriorIntersection()&&(this.numInteriorIntersections++,this._hasInterior=!0),this.isTrivialIntersection(t,e,n,i)||(this._hasIntersection=!0,t.addIntersections(this._li,e,0),n.addIntersections(this._li,i,1),this._li.isProper()&&(this.numProperIntersections++,this._hasProper=!0,this._hasProperInterior=!0)))}},{key:\"hasIntersection\",value:function(){return this._hasIntersection}},{key:\"isDone\",value:function(){return!1}},{key:\"hasInteriorIntersection\",value:function(){return this._hasInterior}},{key:\"interfaces_\",get:function(){return[Kn]}}],[{key:\"constructor_\",value:function(){this._hasIntersection=!1,this._hasProper=!1,this._hasProperInterior=!1,this._hasInterior=!1,this._properIntersectionPoint=null,this._li=null,this._isSelfIntersection=null,this.numIntersections=0,this.numInteriorIntersections=0,this.numProperIntersections=0,this.numTests=0;var t=arguments[0];this._li=t}},{key:\"isAdjacentSegments\",value:function(t,e){return 1===Math.abs(t-e)}}]),e}(),Qn=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"getSegmentIndex\",value:function(){return this.segmentIndex}},{key:\"getCoordinate\",value:function(){return this.coord}},{key:\"print\",value:function(t){t.print(this.coord),t.print(\" seg # = \"+this.segmentIndex),t.println(\" dist = \"+this.dist)}},{key:\"compareTo\",value:function(t){var e=t;return this.compare(e.segmentIndex,e.dist)}},{key:\"isEndPoint\",value:function(t){return 0===this.segmentIndex&&0===this.dist||this.segmentIndex===t}},{key:\"toString\",value:function(){return this.coord+\" seg # = \"+this.segmentIndex+\" dist = \"+this.dist}},{key:\"getDistance\",value:function(){return this.dist}},{key:\"compare\",value:function(t,e){return this.segmentIndex<t?-1:this.segmentIndex>t?1:this.dist<e?-1:this.dist>e?1:0}},{key:\"interfaces_\",get:function(){return[x]}}],[{key:\"constructor_\",value:function(){this.coord=null,this.segmentIndex=null,this.dist=null;var t=arguments[0],e=arguments[1],n=arguments[2];this.coord=new X(t),this.segmentIndex=e,this.dist=n}}]),e}(),$n=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"print\",value:function(t){t.println(\"Intersections:\");for(var e=this.iterator();e.hasNext();){e.next().print(t)}}},{key:\"iterator\",value:function(){return this._nodeMap.values().iterator()}},{key:\"addSplitEdges\",value:function(t){this.addEndpoints();for(var e=this.iterator(),n=e.next();e.hasNext();){var i=e.next(),r=this.createSplitEdge(n,i);t.add(r),n=i}}},{key:\"addEndpoints\",value:function(){var t=this.edge.pts.length-1;this.add(this.edge.pts[0],0,0),this.add(this.edge.pts[t],t,0)}},{key:\"createSplitEdge\",value:function(t,e){var n=e.segmentIndex-t.segmentIndex+2,i=this.edge.pts[e.segmentIndex],r=e.dist>0||!e.coord.equals2D(i);r||n--;var s=new Array(n).fill(null),a=0;s[a++]=new X(t.coord);for(var o=t.segmentIndex+1;o<=e.segmentIndex;o++)s[a++]=this.edge.pts[o];return r&&(s[a]=e.coord),new si(s,new Pe(this.edge._label))}},{key:\"add\",value:function(t,e,n){var i=new Qn(t,e,n),r=this._nodeMap.get(i);return null!==r?r:(this._nodeMap.put(i,i),i)}},{key:\"isIntersection\",value:function(t){for(var e=this.iterator();e.hasNext();){if(e.next().coord.equals(t))return!0}return!1}}],[{key:\"constructor_\",value:function(){this._nodeMap=new Ze,this.edge=null;var t=arguments[0];this.edge=t}}]),e}(),ti=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"isIntersects\",value:function(){return!this.isDisjoint()}},{key:\"isCovers\",value:function(){return(e.isTrue(this._matrix[H.INTERIOR][H.INTERIOR])||e.isTrue(this._matrix[H.INTERIOR][H.BOUNDARY])||e.isTrue(this._matrix[H.BOUNDARY][H.INTERIOR])||e.isTrue(this._matrix[H.BOUNDARY][H.BOUNDARY]))&&this._matrix[H.EXTERIOR][H.INTERIOR]===Lt.FALSE&&this._matrix[H.EXTERIOR][H.BOUNDARY]===Lt.FALSE}},{key:\"isCoveredBy\",value:function(){return(e.isTrue(this._matrix[H.INTERIOR][H.INTERIOR])||e.isTrue(this._matrix[H.INTERIOR][H.BOUNDARY])||e.isTrue(this._matrix[H.BOUNDARY][H.INTERIOR])||e.isTrue(this._matrix[H.BOUNDARY][H.BOUNDARY]))&&this._matrix[H.INTERIOR][H.EXTERIOR]===Lt.FALSE&&this._matrix[H.BOUNDARY][H.EXTERIOR]===Lt.FALSE}},{key:\"set\",value:function(){if(1===arguments.length)for(var t=arguments[0],e=0;e<t.length;e++){var n=Math.trunc(e/3),i=e%3;this._matrix[n][i]=Lt.toDimensionValue(t.charAt(e))}else if(3===arguments.length){var r=arguments[0],s=arguments[1],a=arguments[2];this._matrix[r][s]=a}}},{key:\"isContains\",value:function(){return e.isTrue(this._matrix[H.INTERIOR][H.INTERIOR])&&this._matrix[H.EXTERIOR][H.INTERIOR]===Lt.FALSE&&this._matrix[H.EXTERIOR][H.BOUNDARY]===Lt.FALSE}},{key:\"setAtLeast\",value:function(){if(1===arguments.length)for(var t=arguments[0],e=0;e<t.length;e++){var n=Math.trunc(e/3),i=e%3;this.setAtLeast(n,i,Lt.toDimensionValue(t.charAt(e)))}else if(3===arguments.length){var r=arguments[0],s=arguments[1],a=arguments[2];this._matrix[r][s]<a&&(this._matrix[r][s]=a)}}},{key:\"setAtLeastIfValid\",value:function(t,e,n){t>=0&&e>=0&&this.setAtLeast(t,e,n)}},{key:\"isWithin\",value:function(){return e.isTrue(this._matrix[H.INTERIOR][H.INTERIOR])&&this._matrix[H.INTERIOR][H.EXTERIOR]===Lt.FALSE&&this._matrix[H.BOUNDARY][H.EXTERIOR]===Lt.FALSE}},{key:\"isTouches\",value:function(t,n){return t>n?this.isTouches(n,t):(t===Lt.A&&n===Lt.A||t===Lt.L&&n===Lt.L||t===Lt.L&&n===Lt.A||t===Lt.P&&n===Lt.A||t===Lt.P&&n===Lt.L)&&(this._matrix[H.INTERIOR][H.INTERIOR]===Lt.FALSE&&(e.isTrue(this._matrix[H.INTERIOR][H.BOUNDARY])||e.isTrue(this._matrix[H.BOUNDARY][H.INTERIOR])||e.isTrue(this._matrix[H.BOUNDARY][H.BOUNDARY])))}},{key:\"isOverlaps\",value:function(t,n){return t===Lt.P&&n===Lt.P||t===Lt.A&&n===Lt.A?e.isTrue(this._matrix[H.INTERIOR][H.INTERIOR])&&e.isTrue(this._matrix[H.INTERIOR][H.EXTERIOR])&&e.isTrue(this._matrix[H.EXTERIOR][H.INTERIOR]):t===Lt.L&&n===Lt.L&&(1===this._matrix[H.INTERIOR][H.INTERIOR]&&e.isTrue(this._matrix[H.INTERIOR][H.EXTERIOR])&&e.isTrue(this._matrix[H.EXTERIOR][H.INTERIOR]))}},{key:\"isEquals\",value:function(t,n){return t===n&&(e.isTrue(this._matrix[H.INTERIOR][H.INTERIOR])&&this._matrix[H.INTERIOR][H.EXTERIOR]===Lt.FALSE&&this._matrix[H.BOUNDARY][H.EXTERIOR]===Lt.FALSE&&this._matrix[H.EXTERIOR][H.INTERIOR]===Lt.FALSE&&this._matrix[H.EXTERIOR][H.BOUNDARY]===Lt.FALSE)}},{key:\"toString\",value:function(){for(var t=new Jt(\"123456789\"),e=0;e<3;e++)for(var n=0;n<3;n++)t.setCharAt(3*e+n,Lt.toDimensionSymbol(this._matrix[e][n]));return t.toString()}},{key:\"setAll\",value:function(t){for(var e=0;e<3;e++)for(var n=0;n<3;n++)this._matrix[e][n]=t}},{key:\"get\",value:function(t,e){return this._matrix[t][e]}},{key:\"transpose\",value:function(){var t=this._matrix[1][0];return this._matrix[1][0]=this._matrix[0][1],this._matrix[0][1]=t,t=this._matrix[2][0],this._matrix[2][0]=this._matrix[0][2],this._matrix[0][2]=t,t=this._matrix[2][1],this._matrix[2][1]=this._matrix[1][2],this._matrix[1][2]=t,this}},{key:\"matches\",value:function(t){if(9!==t.length)throw new m(\"Should be length 9: \"+t);for(var n=0;n<3;n++)for(var i=0;i<3;i++)if(!e.matches(this._matrix[n][i],t.charAt(3*n+i)))return!1;return!0}},{key:\"add\",value:function(t){for(var e=0;e<3;e++)for(var n=0;n<3;n++)this.setAtLeast(e,n,t.get(e,n))}},{key:\"isDisjoint\",value:function(){return this._matrix[H.INTERIOR][H.INTERIOR]===Lt.FALSE&&this._matrix[H.INTERIOR][H.BOUNDARY]===Lt.FALSE&&this._matrix[H.BOUNDARY][H.INTERIOR]===Lt.FALSE&&this._matrix[H.BOUNDARY][H.BOUNDARY]===Lt.FALSE}},{key:\"isCrosses\",value:function(t,n){return t===Lt.P&&n===Lt.L||t===Lt.P&&n===Lt.A||t===Lt.L&&n===Lt.A?e.isTrue(this._matrix[H.INTERIOR][H.INTERIOR])&&e.isTrue(this._matrix[H.INTERIOR][H.EXTERIOR]):t===Lt.L&&n===Lt.P||t===Lt.A&&n===Lt.P||t===Lt.A&&n===Lt.L?e.isTrue(this._matrix[H.INTERIOR][H.INTERIOR])&&e.isTrue(this._matrix[H.EXTERIOR][H.INTERIOR]):t===Lt.L&&n===Lt.L&&0===this._matrix[H.INTERIOR][H.INTERIOR]}},{key:\"interfaces_\",get:function(){return[I]}}],[{key:\"constructor_\",value:function(){if(this._matrix=null,0===arguments.length)this._matrix=Array(3).fill().map((function(){return Array(3)})),this.setAll(Lt.FALSE);else if(1===arguments.length)if(\"string\"==typeof arguments[0]){var t=arguments[0];e.constructor_.call(this),this.set(t)}else if(arguments[0]instanceof e){var n=arguments[0];e.constructor_.call(this),this._matrix[H.INTERIOR][H.INTERIOR]=n._matrix[H.INTERIOR][H.INTERIOR],this._matrix[H.INTERIOR][H.BOUNDARY]=n._matrix[H.INTERIOR][H.BOUNDARY],this._matrix[H.INTERIOR][H.EXTERIOR]=n._matrix[H.INTERIOR][H.EXTERIOR],this._matrix[H.BOUNDARY][H.INTERIOR]=n._matrix[H.BOUNDARY][H.INTERIOR],this._matrix[H.BOUNDARY][H.BOUNDARY]=n._matrix[H.BOUNDARY][H.BOUNDARY],this._matrix[H.BOUNDARY][H.EXTERIOR]=n._matrix[H.BOUNDARY][H.EXTERIOR],this._matrix[H.EXTERIOR][H.INTERIOR]=n._matrix[H.EXTERIOR][H.INTERIOR],this._matrix[H.EXTERIOR][H.BOUNDARY]=n._matrix[H.EXTERIOR][H.BOUNDARY],this._matrix[H.EXTERIOR][H.EXTERIOR]=n._matrix[H.EXTERIOR][H.EXTERIOR]}}},{key:\"matches\",value:function(){if(Number.isInteger(arguments[0])&&\"string\"==typeof arguments[1]){var t=arguments[0],n=arguments[1];return n===Lt.SYM_DONTCARE||(n===Lt.SYM_TRUE&&(t>=0||t===Lt.TRUE)||(n===Lt.SYM_FALSE&&t===Lt.FALSE||(n===Lt.SYM_P&&t===Lt.P||(n===Lt.SYM_L&&t===Lt.L||n===Lt.SYM_A&&t===Lt.A))))}if(\"string\"==typeof arguments[0]&&\"string\"==typeof arguments[1]){var i=arguments[0],r=arguments[1],s=new e(i);return s.matches(r)}}},{key:\"isTrue\",value:function(t){return t>=0||t===Lt.TRUE}}]),e}(),ei=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"size\",value:function(){return this._size}},{key:\"addAll\",value:function(t){return null===t||0===t.length?null:(this.ensureCapacity(this._size+t.length),mt.arraycopy(t,0,this._data,this._size,t.length),void(this._size+=t.length))}},{key:\"ensureCapacity\",value:function(t){if(t<=this._data.length)return null;var e=Math.max(t,2*this._data.length);this._data=At.copyOf(this._data,e)}},{key:\"toArray\",value:function(){var t=new Array(this._size).fill(null);return mt.arraycopy(this._data,0,t,0,this._size),t}},{key:\"add\",value:function(t){this.ensureCapacity(this._size+1),this._data[this._size]=t,++this._size}}],[{key:\"constructor_\",value:function(){if(this._data=null,this._size=0,0===arguments.length)e.constructor_.call(this,10);else if(1===arguments.length){var t=arguments[0];this._data=new Array(t).fill(null)}}}]),e}(),ni=function(){function e(){t(this,e)}return n(e,[{key:\"getChainStartIndices\",value:function(t){var e=0,n=new ei(Math.trunc(t.length/2));n.add(e);do{var i=this.findChainEnd(t,e);n.add(i),e=i}while(e<t.length-1);return n.toArray()}},{key:\"findChainEnd\",value:function(t,e){for(var n=We.quadrant(t[e],t[e+1]),i=e+1;i<t.length;){if(We.quadrant(t[i-1],t[i])!==n)break;i++}return i-1}},{key:\"OLDgetChainStartIndices\",value:function(t){var n=0,i=new yt;i.add(n);do{var r=this.findChainEnd(t,n);i.add(r),n=r}while(n<t.length-1);return e.toIntArray(i)}}],[{key:\"toIntArray\",value:function(t){for(var e=new Array(t.size()).fill(null),n=0;n<e.length;n++)e[n]=t.get(n).intValue();return e}}]),e}(),ii=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"getCoordinates\",value:function(){return this.pts}},{key:\"getMaxX\",value:function(t){var e=this.pts[this.startIndex[t]].x,n=this.pts[this.startIndex[t+1]].x;return e>n?e:n}},{key:\"getMinX\",value:function(t){var e=this.pts[this.startIndex[t]].x,n=this.pts[this.startIndex[t+1]].x;return e<n?e:n}},{key:\"computeIntersectsForChain\",value:function(){if(4===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];this.computeIntersectsForChain(this.startIndex[t],this.startIndex[t+1],e,e.startIndex[n],e.startIndex[n+1],i)}else if(6===arguments.length){var r=arguments[0],s=arguments[1],a=arguments[2],o=arguments[3],u=arguments[4],l=arguments[5];if(s-r==1&&u-o==1)return l.addIntersections(this.e,r,a.e,o),null;if(!this.overlaps(r,s,a,o,u))return null;var h=Math.trunc((r+s)/2),c=Math.trunc((o+u)/2);r<h&&(o<c&&this.computeIntersectsForChain(r,h,a,o,c,l),c<u&&this.computeIntersectsForChain(r,h,a,c,u,l)),h<s&&(o<c&&this.computeIntersectsForChain(h,s,a,o,c,l),c<u&&this.computeIntersectsForChain(h,s,a,c,u,l))}}},{key:\"overlaps\",value:function(t,e,n,i,r){return U.intersects(this.pts[t],this.pts[e],n.pts[i],n.pts[r])}},{key:\"getStartIndexes\",value:function(){return this.startIndex}},{key:\"computeIntersects\",value:function(t,e){for(var n=0;n<this.startIndex.length-1;n++)for(var i=0;i<t.startIndex.length-1;i++)this.computeIntersectsForChain(n,t,i,e)}}],[{key:\"constructor_\",value:function(){this.e=null,this.pts=null,this.startIndex=null;var t=arguments[0];this.e=t,this.pts=t.getCoordinates();var e=new ni;this.startIndex=e.getChainStartIndices(this.pts)}}]),e}(),ri=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"getDepth\",value:function(t,e){return this._depth[t][e]}},{key:\"setDepth\",value:function(t,e,n){this._depth[t][e]=n}},{key:\"isNull\",value:function(){if(0===arguments.length){for(var t=0;t<2;t++)for(var n=0;n<3;n++)if(this._depth[t][n]!==e.NULL_VALUE)return!1;return!0}if(1===arguments.length){var i=arguments[0];return this._depth[i][1]===e.NULL_VALUE}if(2===arguments.length){var r=arguments[0],s=arguments[1];return this._depth[r][s]===e.NULL_VALUE}}},{key:\"normalize\",value:function(){for(var t=0;t<2;t++)if(!this.isNull(t)){var e=this._depth[t][1];this._depth[t][2]<e&&(e=this._depth[t][2]),e<0&&(e=0);for(var n=1;n<3;n++){var i=0;this._depth[t][n]>e&&(i=1),this._depth[t][n]=i}}}},{key:\"getDelta\",value:function(t){return this._depth[t][$.RIGHT]-this._depth[t][$.LEFT]}},{key:\"getLocation\",value:function(t,e){return this._depth[t][e]<=0?H.EXTERIOR:H.INTERIOR}},{key:\"toString\",value:function(){return\"A: \"+this._depth[0][1]+\",\"+this._depth[0][2]+\" B: \"+this._depth[1][1]+\",\"+this._depth[1][2]}},{key:\"add\",value:function(){if(1===arguments.length)for(var t=arguments[0],n=0;n<2;n++)for(var i=1;i<3;i++){var r=t.getLocation(n,i);r!==H.EXTERIOR&&r!==H.INTERIOR||(this.isNull(n,i)?this._depth[n][i]=e.depthAtLocation(r):this._depth[n][i]+=e.depthAtLocation(r))}else if(3===arguments.length){var s=arguments[0],a=arguments[1],o=arguments[2];o===H.INTERIOR&&this._depth[s][a]++}}}],[{key:\"constructor_\",value:function(){this._depth=Array(2).fill().map((function(){return Array(3)}));for(var t=0;t<2;t++)for(var n=0;n<3;n++)this._depth[t][n]=e.NULL_VALUE}},{key:\"depthAtLocation\",value:function(t){return t===H.EXTERIOR?0:t===H.INTERIOR?1:e.NULL_VALUE}}]),e}();ri.NULL_VALUE=-1;var si=function(e){i(a,e);var s=c(a);function a(){var e;return t(this,a),e=s.call(this),a.constructor_.apply(l(e),arguments),e}return n(a,[{key:\"getDepth\",value:function(){return this._depth}},{key:\"getCollapsedEdge\",value:function(){var t=new Array(2).fill(null);return t[0]=this.pts[0],t[1]=this.pts[1],new a(t,Pe.toLineLabel(this._label))}},{key:\"isIsolated\",value:function(){return this._isIsolated}},{key:\"getCoordinates\",value:function(){return this.pts}},{key:\"setIsolated\",value:function(t){this._isIsolated=t}},{key:\"setName\",value:function(t){this._name=t}},{key:\"equals\",value:function(t){if(!(t instanceof a))return!1;var e=t;if(this.pts.length!==e.pts.length)return!1;for(var n=!0,i=!0,r=this.pts.length,s=0;s<this.pts.length;s++)if(this.pts[s].equals2D(e.pts[s])||(n=!1),this.pts[s].equals2D(e.pts[--r])||(i=!1),!n&&!i)return!1;return!0}},{key:\"getCoordinate\",value:function(){if(0===arguments.length)return this.pts.length>0?this.pts[0]:null;if(1===arguments.length){var t=arguments[0];return this.pts[t]}}},{key:\"print\",value:function(t){t.print(\"edge \"+this._name+\": \"),t.print(\"LINESTRING (\");for(var e=0;e<this.pts.length;e++)e>0&&t.print(\",\"),t.print(this.pts[e].x+\" \"+this.pts[e].y);t.print(\")  \"+this._label+\" \"+this._depthDelta)}},{key:\"computeIM\",value:function(t){a.updateIM(this._label,t)}},{key:\"isCollapsed\",value:function(){return!!this._label.isArea()&&(3===this.pts.length&&!!this.pts[0].equals(this.pts[2]))}},{key:\"isClosed\",value:function(){return this.pts[0].equals(this.pts[this.pts.length-1])}},{key:\"getMaximumSegmentIndex\",value:function(){return this.pts.length-1}},{key:\"getDepthDelta\",value:function(){return this._depthDelta}},{key:\"getNumPoints\",value:function(){return this.pts.length}},{key:\"printReverse\",value:function(t){t.print(\"edge \"+this._name+\": \");for(var e=this.pts.length-1;e>=0;e--)t.print(this.pts[e]+\" \");t.println(\"\")}},{key:\"getMonotoneChainEdge\",value:function(){return null===this._mce&&(this._mce=new ii(this)),this._mce}},{key:\"getEnvelope\",value:function(){if(null===this._env){this._env=new U;for(var t=0;t<this.pts.length;t++)this._env.expandToInclude(this.pts[t])}return this._env}},{key:\"addIntersection\",value:function(t,e,n,i){var r=new X(t.getIntersection(i)),s=e,a=t.getEdgeDistance(n,i),o=s+1;if(o<this.pts.length){var u=this.pts[o];r.equals2D(u)&&(s=o,a=0)}this.eiList.add(r,s,a)}},{key:\"toString\",value:function(){var t=new Jt;t.append(\"edge \"+this._name+\": \"),t.append(\"LINESTRING (\");for(var e=0;e<this.pts.length;e++)e>0&&t.append(\",\"),t.append(this.pts[e].x+\" \"+this.pts[e].y);return t.append(\")  \"+this._label+\" \"+this._depthDelta),t.toString()}},{key:\"isPointwiseEqual\",value:function(t){if(this.pts.length!==t.pts.length)return!1;for(var e=0;e<this.pts.length;e++)if(!this.pts[e].equals2D(t.pts[e]))return!1;return!0}},{key:\"setDepthDelta\",value:function(t){this._depthDelta=t}},{key:\"getEdgeIntersectionList\",value:function(){return this.eiList}},{key:\"addIntersections\",value:function(t,e,n){for(var i=0;i<t.getIntersectionNum();i++)this.addIntersection(t,e,n,i)}}],[{key:\"constructor_\",value:function(){if(this.pts=null,this._env=null,this.eiList=new $n(this),this._name=null,this._mce=null,this._isIsolated=!0,this._depth=new ri,this._depthDelta=0,1===arguments.length){var t=arguments[0];a.constructor_.call(this,t,null)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.pts=e,this._label=n}}},{key:\"updateIM\",value:function(){if(!(2===arguments.length&&arguments[1]instanceof ti&&arguments[0]instanceof Pe))return f(r(a),\"updateIM\",this).apply(this,arguments);var t=arguments[0],e=arguments[1];e.setAtLeastIfValid(t.getLocation(0,$.ON),t.getLocation(1,$.ON),1),t.isArea()&&(e.setAtLeastIfValid(t.getLocation(0,$.LEFT),t.getLocation(1,$.LEFT),2),e.setAtLeastIfValid(t.getLocation(0,$.RIGHT),t.getLocation(1,$.RIGHT),2))}}]),a}(qe),ai=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"setWorkingPrecisionModel\",value:function(t){this._workingPrecisionModel=t}},{key:\"insertUniqueEdge\",value:function(t){var n=this._edgeList.findEqualEdge(t);if(null!==n){var i=n.getLabel(),r=t.getLabel();n.isPointwiseEqual(t)||(r=new Pe(t.getLabel())).flip(),i.merge(r);var s=e.depthDelta(r),a=n.getDepthDelta()+s;n.setDepthDelta(a)}else this._edgeList.add(t),t.setDepthDelta(e.depthDelta(t.getLabel()))}},{key:\"buildSubgraphs\",value:function(t,e){for(var n=new yt,i=t.iterator();i.hasNext();){var r=i.next(),s=r.getRightmostCoordinate(),a=new Dn(n).getDepth(s);r.computeDepth(a),r.findResultEdges(),n.add(r),e.add(r.getDirectedEdges(),r.getNodes())}}},{key:\"createSubgraphs\",value:function(t){for(var e=new yt,n=t.getNodes().iterator();n.hasNext();){var i=n.next();if(!i.isVisited()){var r=new _t;r.create(i),e.add(r)}}return on.sort(e,on.reverseOrder()),e}},{key:\"createEmptyResultGeometry\",value:function(){return this._geomFact.createPolygon()}},{key:\"getNoder\",value:function(t){if(null!==this._workingNoder)return this._workingNoder;var e=new Rn,n=new Oe;return n.setPrecisionModel(t),e.setSegmentIntersector(new Jn(n)),e}},{key:\"buffer\",value:function(t,e){var n=this._workingPrecisionModel;null===n&&(n=t.getPrecisionModel()),this._geomFact=t.getFactory();var i=new Pn(n,this._bufParams),r=new zn(t,e,i).getCurves();if(r.size()<=0)return this.createEmptyResultGeometry();this.computeNodedEdges(r,n),this._graph=new $e(new Zn),this._graph.addEdges(this._edgeList.getEdges());var s=this.createSubgraphs(this._graph),a=new tn(this._geomFact);this.buildSubgraphs(s,a);var o=a.getPolygons();return o.size()<=0?this.createEmptyResultGeometry():this._geomFact.buildGeometry(o)}},{key:\"computeNodedEdges\",value:function(t,e){var n=this.getNoder(e);n.computeNodes(t);for(var i=n.getNodedSubstrings().iterator();i.hasNext();){var r=i.next(),s=r.getCoordinates();if(2!==s.length||!s[0].equals2D(s[1])){var a=r.getData(),o=new si(r.getCoordinates(),new Pe(a));this.insertUniqueEdge(o)}}}},{key:\"setNoder\",value:function(t){this._workingNoder=t}}],[{key:\"constructor_\",value:function(){this._bufParams=null,this._workingPrecisionModel=null,this._workingNoder=null,this._geomFact=null,this._graph=null,this._edgeList=new Wn;var t=arguments[0];this._bufParams=t}},{key:\"depthDelta\",value:function(t){var e=t.getLocation(0,$.LEFT),n=t.getLocation(0,$.RIGHT);return e===H.INTERIOR&&n===H.EXTERIOR?1:e===H.EXTERIOR&&n===H.INTERIOR?-1:0}},{key:\"convertSegStrings\",value:function(t){for(var e=new ae,n=new yt;t.hasNext();){var i=t.next(),r=e.createLineString(i.getCoordinates());n.add(r)}return e.buildGeometry(n)}}]),e}(),oi=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"rescale\",value:function(){if(rt(arguments[0],Z))for(var t=arguments[0],e=t.iterator();e.hasNext();){var n=e.next();this.rescale(n.getCoordinates())}else if(arguments[0]instanceof Array){for(var i=arguments[0],r=0;r<i.length;r++)i[r].x=i[r].x/this._scaleFactor+this._offsetX,i[r].y=i[r].y/this._scaleFactor+this._offsetY;2===i.length&&i[0].equals2D(i[1])&&mt.out.println(i)}}},{key:\"scale\",value:function(){if(rt(arguments[0],Z)){for(var t=arguments[0],e=new yt(t.size()),n=t.iterator();n.hasNext();){var i=n.next();e.add(new In(this.scale(i.getCoordinates()),i.getData()))}return e}if(arguments[0]instanceof Array){for(var r=arguments[0],s=new Array(r.length).fill(null),a=0;a<r.length;a++)s[a]=new X(Math.round((r[a].x-this._offsetX)*this._scaleFactor),Math.round((r[a].y-this._offsetY)*this._scaleFactor),r[a].getZ());var o=jt.removeRepeatedPoints(s);return o}}},{key:\"isIntegerPrecision\",value:function(){return 1===this._scaleFactor}},{key:\"getNodedSubstrings\",value:function(){var t=this._noder.getNodedSubstrings();return this._isScaled&&this.rescale(t),t}},{key:\"computeNodes\",value:function(t){var e=t;this._isScaled&&(e=this.scale(t)),this._noder.computeNodes(e)}},{key:\"interfaces_\",get:function(){return[Ln]}}],[{key:\"constructor_\",value:function(){if(this._noder=null,this._scaleFactor=null,this._offsetX=null,this._offsetY=null,this._isScaled=!1,2===arguments.length){var t=arguments[0],n=arguments[1];e.constructor_.call(this,t,n,0,0)}else if(4===arguments.length){var i=arguments[0],r=arguments[1];this._noder=i,this._scaleFactor=r,this._isScaled=!this.isIntegerPrecision()}}}]),e}(),ui=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"checkEndPtVertexIntersections\",value:function(){if(0===arguments.length)for(var t=this._segStrings.iterator();t.hasNext();){var e=t.next(),n=e.getCoordinates();this.checkEndPtVertexIntersections(n[0],this._segStrings),this.checkEndPtVertexIntersections(n[n.length-1],this._segStrings)}else if(2===arguments.length)for(var i=arguments[0],r=arguments[1],s=r.iterator();s.hasNext();)for(var a=s.next(),o=a.getCoordinates(),u=1;u<o.length-1;u++)if(o[u].equals(i))throw new D(\"found endpt/interior pt intersection at index \"+u+\" :pt \"+i)}},{key:\"checkInteriorIntersections\",value:function(){if(0===arguments.length)for(var t=this._segStrings.iterator();t.hasNext();)for(var e=t.next(),n=this._segStrings.iterator();n.hasNext();){var i=n.next();this.checkInteriorIntersections(e,i)}else if(2===arguments.length)for(var r=arguments[0],s=arguments[1],a=r.getCoordinates(),o=s.getCoordinates(),u=0;u<a.length-1;u++)for(var l=0;l<o.length-1;l++)this.checkInteriorIntersections(r,u,s,l);else if(4===arguments.length){var h=arguments[0],c=arguments[1],f=arguments[2],v=arguments[3];if(h===f&&c===v)return null;var g=h.getCoordinates()[c],y=h.getCoordinates()[c+1],d=f.getCoordinates()[v],_=f.getCoordinates()[v+1];if(this._li.computeIntersection(g,y,d,_),this._li.hasIntersection()&&(this._li.isProper()||this.hasInteriorIntersection(this._li,g,y)||this.hasInteriorIntersection(this._li,d,_)))throw new D(\"found non-noded intersection at \"+g+\"-\"+y+\" and \"+d+\"-\"+_)}}},{key:\"checkValid\",value:function(){this.checkEndPtVertexIntersections(),this.checkInteriorIntersections(),this.checkCollapses()}},{key:\"checkCollapses\",value:function(){if(0===arguments.length)for(var t=this._segStrings.iterator();t.hasNext();){var e=t.next();this.checkCollapses(e)}else if(1===arguments.length)for(var n=arguments[0],i=n.getCoordinates(),r=0;r<i.length-2;r++)this.checkCollapse(i[r],i[r+1],i[r+2])}},{key:\"hasInteriorIntersection\",value:function(t,e,n){for(var i=0;i<t.getIntersectionNum();i++){var r=t.getIntersection(i);if(!r.equals(e)&&!r.equals(n))return!0}return!1}},{key:\"checkCollapse\",value:function(t,n,i){if(t.equals(i))throw new D(\"found non-noded collapse at \"+e.fact.createLineString([t,n,i]))}}],[{key:\"constructor_\",value:function(){this._li=new Oe,this._segStrings=null;var t=arguments[0];this._segStrings=t}}]),e}();ui.fact=new ae;var li=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"intersectsScaled\",value:function(t,e){var n=Math.min(t.x,e.x),i=Math.max(t.x,e.x),r=Math.min(t.y,e.y),s=Math.max(t.y,e.y),a=this._maxx<n||this._minx>i||this._maxy<r||this._miny>s;if(a)return!1;var o=this.intersectsToleranceSquare(t,e);return G.isTrue(!(a&&o),\"Found bad envelope test\"),o}},{key:\"initCorners\",value:function(t){var e=.5;this._minx=t.x-e,this._maxx=t.x+e,this._miny=t.y-e,this._maxy=t.y+e,this._corner[0]=new X(this._maxx,this._maxy),this._corner[1]=new X(this._minx,this._maxy),this._corner[2]=new X(this._minx,this._miny),this._corner[3]=new X(this._maxx,this._miny)}},{key:\"intersects\",value:function(t,e){return 1===this._scaleFactor?this.intersectsScaled(t,e):(this.copyScaled(t,this._p0Scaled),this.copyScaled(e,this._p1Scaled),this.intersectsScaled(this._p0Scaled,this._p1Scaled))}},{key:\"scale\",value:function(t){return Math.round(t*this._scaleFactor)}},{key:\"getCoordinate\",value:function(){return this._originalPt}},{key:\"copyScaled\",value:function(t,e){e.x=this.scale(t.x),e.y=this.scale(t.y)}},{key:\"getSafeEnvelope\",value:function(){if(null===this._safeEnv){var t=e.SAFE_ENV_EXPANSION_FACTOR/this._scaleFactor;this._safeEnv=new U(this._originalPt.x-t,this._originalPt.x+t,this._originalPt.y-t,this._originalPt.y+t)}return this._safeEnv}},{key:\"intersectsPixelClosure\",value:function(t,e){return this._li.computeIntersection(t,e,this._corner[0],this._corner[1]),!!this._li.hasIntersection()||(this._li.computeIntersection(t,e,this._corner[1],this._corner[2]),!!this._li.hasIntersection()||(this._li.computeIntersection(t,e,this._corner[2],this._corner[3]),!!this._li.hasIntersection()||(this._li.computeIntersection(t,e,this._corner[3],this._corner[0]),!!this._li.hasIntersection())))}},{key:\"intersectsToleranceSquare\",value:function(t,e){var n=!1,i=!1;return this._li.computeIntersection(t,e,this._corner[0],this._corner[1]),!!this._li.isProper()||(this._li.computeIntersection(t,e,this._corner[1],this._corner[2]),!!this._li.isProper()||(this._li.hasIntersection()&&(n=!0),this._li.computeIntersection(t,e,this._corner[2],this._corner[3]),!!this._li.isProper()||(this._li.hasIntersection()&&(i=!0),this._li.computeIntersection(t,e,this._corner[3],this._corner[0]),!!this._li.isProper()||(!(!n||!i)||(!!t.equals(this._pt)||!!e.equals(this._pt))))))}},{key:\"addSnappedNode\",value:function(t,e){var n=t.getCoordinate(e),i=t.getCoordinate(e+1);return!!this.intersects(n,i)&&(t.addIntersection(this.getCoordinate(),e),!0)}}],[{key:\"constructor_\",value:function(){this._li=null,this._pt=null,this._originalPt=null,this._ptScaled=null,this._p0Scaled=null,this._p1Scaled=null,this._scaleFactor=null,this._minx=null,this._maxx=null,this._miny=null,this._maxy=null,this._corner=new Array(4).fill(null),this._safeEnv=null;var t=arguments[0],e=arguments[1],n=arguments[2];if(this._originalPt=t,this._pt=t,this._scaleFactor=e,this._li=n,e<=0)throw new m(\"Scale factor must be non-zero\");1!==e&&(this._pt=new X(this.scale(t.x),this.scale(t.y)),this._p0Scaled=new X,this._p1Scaled=new X),this.initCorners(this._pt)}}]),e}();li.SAFE_ENV_EXPANSION_FACTOR=.75;var hi=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"select\",value:function(){if(1===arguments.length);else if(2===arguments.length){var t=arguments[0],e=arguments[1];t.getLineSegment(e,this.selectedSegment),this.select(this.selectedSegment)}}}],[{key:\"constructor_\",value:function(){this.selectedSegment=new En}}]),e}(),ci=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"snap\",value:function(){if(1===arguments.length){var e=arguments[0];return this.snap(e,null,-1)}if(3===arguments.length){var i=arguments[0],r=arguments[1],s=arguments[2],a=i.getSafeEnvelope(),o=new fi(i,r,s);return this._index.query(a,new(function(){function e(){t(this,e)}return n(e,[{key:\"interfaces_\",get:function(){return[hn]}},{key:\"visitItem\",value:function(t){t.select(a,o)}}]),e}())),o.isNodeAdded()}}}],[{key:\"constructor_\",value:function(){this._index=null;var t=arguments[0];this._index=t}}]),e}(),fi=function(e){i(a,e);var s=c(a);function a(){var e;return t(this,a),e=s.call(this),a.constructor_.apply(l(e),arguments),e}return n(a,[{key:\"isNodeAdded\",value:function(){return this._isNodeAdded}},{key:\"select\",value:function(){if(!(2===arguments.length&&Number.isInteger(arguments[1])&&arguments[0]instanceof Tn))return f(r(a.prototype),\"select\",this).apply(this,arguments);var t=arguments[0],e=arguments[1],n=t.getContext();if(this._parentEdge===n&&(e===this._hotPixelVertexIndex||e+1===this._hotPixelVertexIndex))return null;this._isNodeAdded|=this._hotPixel.addSnappedNode(n,e)}}],[{key:\"constructor_\",value:function(){this._hotPixel=null,this._parentEdge=null,this._hotPixelVertexIndex=null,this._isNodeAdded=!1;var t=arguments[0],e=arguments[1],n=arguments[2];this._hotPixel=t,this._parentEdge=e,this._hotPixelVertexIndex=n}}]),a}(hi);ci.HotPixelSnapAction=fi;var vi=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"processIntersections\",value:function(t,e,n,i){if(t===n&&e===i)return null;var r=t.getCoordinates()[e],s=t.getCoordinates()[e+1],a=n.getCoordinates()[i],o=n.getCoordinates()[i+1];if(this._li.computeIntersection(r,s,a,o),this._li.hasIntersection()&&this._li.isInteriorIntersection()){for(var u=0;u<this._li.getIntersectionNum();u++)this._interiorIntersections.add(this._li.getIntersection(u));t.addIntersections(this._li,e,0),n.addIntersections(this._li,i,1)}}},{key:\"isDone\",value:function(){return!1}},{key:\"getInteriorIntersections\",value:function(){return this._interiorIntersections}},{key:\"interfaces_\",get:function(){return[Kn]}}],[{key:\"constructor_\",value:function(){this._li=null,this._interiorIntersections=null;var t=arguments[0];this._li=t,this._interiorIntersections=new yt}}]),e}(),gi=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"checkCorrectness\",value:function(t){var e=In.getNodedSubstrings(t),n=new ui(e);try{n.checkValid()}catch(t){if(!(t instanceof p))throw t;t.printStackTrace()}}},{key:\"getNodedSubstrings\",value:function(){return In.getNodedSubstrings(this._nodedSegStrings)}},{key:\"snapRound\",value:function(t,e){var n=this.findInteriorIntersections(t,e);this.computeIntersectionSnaps(n),this.computeVertexSnaps(t)}},{key:\"findInteriorIntersections\",value:function(t,e){var n=new vi(e);return this._noder.setSegmentIntersector(n),this._noder.computeNodes(t),n.getInteriorIntersections()}},{key:\"computeVertexSnaps\",value:function(){if(rt(arguments[0],Z))for(var t=arguments[0],e=t.iterator();e.hasNext();){var n=e.next();this.computeVertexSnaps(n)}else if(arguments[0]instanceof In)for(var i=arguments[0],r=i.getCoordinates(),s=0;s<r.length;s++){var a=new li(r[s],this._scaleFactor,this._li),o=this._pointSnapper.snap(a,i,s);o&&i.addIntersection(r[s],s)}}},{key:\"computeNodes\",value:function(t){this._nodedSegStrings=t,this._noder=new Rn,this._pointSnapper=new ci(this._noder.getIndex()),this.snapRound(t,this._li)}},{key:\"computeIntersectionSnaps\",value:function(t){for(var e=t.iterator();e.hasNext();){var n=e.next(),i=new li(n,this._scaleFactor,this._li);this._pointSnapper.snap(i)}}},{key:\"interfaces_\",get:function(){return[Ln]}}],[{key:\"constructor_\",value:function(){this._pm=null,this._li=null,this._scaleFactor=null,this._noder=null,this._pointSnapper=null,this._nodedSegStrings=null;var t=arguments[0];this._pm=t,this._li=new Oe,this._li.setPrecisionModel(t),this._scaleFactor=t.getScale()}}]),e}(),yi=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"bufferFixedPrecision\",value:function(t){var e=new oi(new gi(new ie(1)),t.getScale()),n=new ai(this._bufParams);n.setWorkingPrecisionModel(t),n.setNoder(e),this._resultGeometry=n.buffer(this._argGeom,this._distance)}},{key:\"bufferReducedPrecision\",value:function(){if(0===arguments.length){for(var t=e.MAX_PRECISION_DIGITS;t>=0;t--){try{this.bufferReducedPrecision(t)}catch(t){if(!(t instanceof vt))throw t;this._saveException=t}if(null!==this._resultGeometry)return null}throw this._saveException}if(1===arguments.length){var n=arguments[0],i=e.precisionScaleFactor(this._argGeom,this._distance,n),r=new ie(i);this.bufferFixedPrecision(r)}}},{key:\"computeGeometry\",value:function(){if(this.bufferOriginalPrecision(),null!==this._resultGeometry)return null;var t=this._argGeom.getFactory().getPrecisionModel();t.getType()===ie.FIXED?this.bufferFixedPrecision(t):this.bufferReducedPrecision()}},{key:\"setQuadrantSegments\",value:function(t){this._bufParams.setQuadrantSegments(t)}},{key:\"bufferOriginalPrecision\",value:function(){try{var t=new ai(this._bufParams);this._resultGeometry=t.buffer(this._argGeom,this._distance)}catch(t){if(!(t instanceof D))throw t;this._saveException=t}}},{key:\"getResultGeometry\",value:function(t){return this._distance=t,this.computeGeometry(),this._resultGeometry}},{key:\"setEndCapStyle\",value:function(t){this._bufParams.setEndCapStyle(t)}}],[{key:\"constructor_\",value:function(){if(this._argGeom=null,this._distance=null,this._bufParams=new _,this._resultGeometry=null,this._saveException=null,1===arguments.length){var t=arguments[0];this._argGeom=t}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this._argGeom=e,this._bufParams=n}}},{key:\"bufferOp\",value:function(){if(2===arguments.length){var t=arguments[0],n=arguments[1],i=new e(t),r=i.getResultGeometry(n);return r}if(3===arguments.length){if(Number.isInteger(arguments[2])&&arguments[0]instanceof V&&\"number\"==typeof arguments[1]){var s=arguments[0],a=arguments[1],o=arguments[2],u=new e(s);u.setQuadrantSegments(o);var l=u.getResultGeometry(a);return l}if(arguments[2]instanceof _&&arguments[0]instanceof V&&\"number\"==typeof arguments[1]){var h=arguments[0],c=arguments[1],f=arguments[2],v=new e(h,f),g=v.getResultGeometry(c);return g}}else if(4===arguments.length){var y=arguments[0],d=arguments[1],p=arguments[2],m=arguments[3],k=new e(y);k.setQuadrantSegments(p),k.setEndCapStyle(m);var x=k.getResultGeometry(d);return x}}},{key:\"precisionScaleFactor\",value:function(t,e,n){var i=t.getEnvelopeInternal(),r=kt.max(Math.abs(i.getMaxX()),Math.abs(i.getMaxY()),Math.abs(i.getMinX()),Math.abs(i.getMinY()))+2*(e>0?e:0),s=n-Math.trunc(Math.log(r)/Math.log(10)+1);return Math.pow(10,s)}}]),e}();yi.CAP_ROUND=_.CAP_ROUND,yi.CAP_BUTT=_.CAP_FLAT,yi.CAP_FLAT=_.CAP_FLAT,yi.CAP_SQUARE=_.CAP_SQUARE,yi.MAX_PRECISION_DIGITS=12;var di=[\"Point\",\"MultiPoint\",\"LineString\",\"MultiLineString\",\"Polygon\",\"MultiPolygon\"],_i=function(){function e(n){t(this,e),this.geometryFactory=n||new ae}return n(e,[{key:\"read\",value:function(t){var e,n=(e=\"string\"==typeof t?JSON.parse(t):t).type;if(!pi[n])throw new Error(\"Unknown GeoJSON type: \"+e.type);return-1!==di.indexOf(n)?pi[n].call(this,e.coordinates):\"GeometryCollection\"===n?pi[n].call(this,e.geometries):pi[n].call(this,e)}},{key:\"write\",value:function(t){var e=t.getGeometryType();if(!mi[e])throw new Error(\"Geometry is not supported\");return mi[e].call(this,t)}}]),e}(),pi={Feature:function(t){var e={};for(var n in t)e[n]=t[n];if(t.geometry){var i=t.geometry.type;if(!pi[i])throw new Error(\"Unknown GeoJSON type: \"+t.type);e.geometry=this.read(t.geometry)}return t.bbox&&(e.bbox=pi.bbox.call(this,t.bbox)),e},FeatureCollection:function(t){var e={};if(t.features){e.features=[];for(var n=0;n<t.features.length;++n)e.features.push(this.read(t.features[n]))}return t.bbox&&(e.bbox=this.parse.bbox.call(this,t.bbox)),e},coordinates:function(t){for(var e=[],n=0;n<t.length;++n){var i=t[n];e.push(o(X,v(i)))}return e},bbox:function(t){return this.geometryFactory.createLinearRing([new X(t[0],t[1]),new X(t[2],t[1]),new X(t[2],t[3]),new X(t[0],t[3]),new X(t[0],t[1])])},Point:function(t){var e=o(X,v(t));return this.geometryFactory.createPoint(e)},MultiPoint:function(t){for(var e=[],n=0;n<t.length;++n)e.push(pi.Point.call(this,t[n]));return this.geometryFactory.createMultiPoint(e)},LineString:function(t){var e=pi.coordinates.call(this,t);return this.geometryFactory.createLineString(e)},MultiLineString:function(t){for(var e=[],n=0;n<t.length;++n)e.push(pi.LineString.call(this,t[n]));return this.geometryFactory.createMultiLineString(e)},Polygon:function(t){for(var e=pi.coordinates.call(this,t[0]),n=this.geometryFactory.createLinearRing(e),i=[],r=1;r<t.length;++r){var s=t[r],a=pi.coordinates.call(this,s),o=this.geometryFactory.createLinearRing(a);i.push(o)}return this.geometryFactory.createPolygon(n,i)},MultiPolygon:function(t){for(var e=[],n=0;n<t.length;++n){var i=t[n];e.push(pi.Polygon.call(this,i))}return this.geometryFactory.createMultiPolygon(e)},GeometryCollection:function(t){for(var e=[],n=0;n<t.length;++n){var i=t[n];e.push(this.read(i))}return this.geometryFactory.createGeometryCollection(e)}},mi={coordinate:function(t){var e=[t.x,t.y];return t.z&&e.push(t.z),t.m&&e.push(t.m),e},Point:function(t){return{type:\"Point\",coordinates:mi.coordinate.call(this,t.getCoordinate())}},MultiPoint:function(t){for(var e=[],n=0;n<t._geometries.length;++n){var i=t._geometries[n],r=mi.Point.call(this,i);e.push(r.coordinates)}return{type:\"MultiPoint\",coordinates:e}},LineString:function(t){for(var e=[],n=t.getCoordinates(),i=0;i<n.length;++i){var r=n[i];e.push(mi.coordinate.call(this,r))}return{type:\"LineString\",coordinates:e}},MultiLineString:function(t){for(var e=[],n=0;n<t._geometries.length;++n){var i=t._geometries[n],r=mi.LineString.call(this,i);e.push(r.coordinates)}return{type:\"MultiLineString\",coordinates:e}},Polygon:function(t){var e=[],n=mi.LineString.call(this,t._shell);e.push(n.coordinates);for(var i=0;i<t._holes.length;++i){var r=t._holes[i],s=mi.LineString.call(this,r);e.push(s.coordinates)}return{type:\"Polygon\",coordinates:e}},MultiPolygon:function(t){for(var e=[],n=0;n<t._geometries.length;++n){var i=t._geometries[n],r=mi.Polygon.call(this,i);e.push(r.coordinates)}return{type:\"MultiPolygon\",coordinates:e}},GeometryCollection:function(t){for(var e=[],n=0;n<t._geometries.length;++n){var i=t._geometries[n],r=i.getGeometryType();e.push(mi[r].call(this,i))}return{type:\"GeometryCollection\",geometries:e}}};return{BufferOp:yi,GeoJSONReader:function(){function e(n){t(this,e),this.parser=new _i(n||new ae)}return n(e,[{key:\"read\",value:function(t){return this.parser.read(t)}}]),e}(),GeoJSONWriter:function(){function e(){t(this,e),this.parser=new _i(this.geometryFactory)}return n(e,[{key:\"write\",value:function(t){return this.parser.write(t)}}]),e}()}}));\n//# sourceMappingURL=jsts.min.js.map\n", "!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n", "\nexport default class TinyQueue {\n    constructor(data = [], compare = defaultCompare) {\n        this.data = data;\n        this.length = this.data.length;\n        this.compare = compare;\n\n        if (this.length > 0) {\n            for (let i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n        }\n    }\n\n    push(item) {\n        this.data.push(item);\n        this.length++;\n        this._up(this.length - 1);\n    }\n\n    pop() {\n        if (this.length === 0) return undefined;\n\n        const top = this.data[0];\n        const bottom = this.data.pop();\n        this.length--;\n\n        if (this.length > 0) {\n            this.data[0] = bottom;\n            this._down(0);\n        }\n\n        return top;\n    }\n\n    peek() {\n        return this.data[0];\n    }\n\n    _up(pos) {\n        const {data, compare} = this;\n        const item = data[pos];\n\n        while (pos > 0) {\n            const parent = (pos - 1) >> 1;\n            const current = data[parent];\n            if (compare(item, current) >= 0) break;\n            data[pos] = current;\n            pos = parent;\n        }\n\n        data[pos] = item;\n    }\n\n    _down(pos) {\n        const {data, compare} = this;\n        const halfLength = this.length >> 1;\n        const item = data[pos];\n\n        while (pos < halfLength) {\n            let left = (pos << 1) + 1;\n            let best = data[left];\n            const right = left + 1;\n\n            if (right < this.length && compare(data[right], best) < 0) {\n                left = right;\n                best = data[right];\n            }\n            if (compare(best, item) >= 0) break;\n\n            data[pos] = best;\n            pos = left;\n        }\n\n        data[pos] = item;\n    }\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n", "module.exports = function pointInPolygonFlat (point, vs, start, end) {\n    var x = point[0], y = point[1];\n    var inside = false;\n    if (start === undefined) start = 0;\n    if (end === undefined) end = vs.length;\n    var len = (end-start)/2;\n    for (var i = 0, j = len - 1; i < len; j = i++) {\n        var xi = vs[start+i*2+0], yi = vs[start+i*2+1];\n        var xj = vs[start+j*2+0], yj = vs[start+j*2+1];\n        var intersect = ((yi > y) !== (yj > y))\n            && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n        if (intersect) inside = !inside;\n    }\n    return inside;\n};\n", "// ray-casting algorithm based on\n// https://wrf.ecse.rpi.edu/Research/Short_Notes/pnpoly.html\n\nmodule.exports = function pointInPolygonNested (point, vs, start, end) {\n    var x = point[0], y = point[1];\n    var inside = false;\n    if (start === undefined) start = 0;\n    if (end === undefined) end = vs.length;\n    var len = end - start;\n    for (var i = 0, j = len - 1; i < len; j = i++) {\n        var xi = vs[i+start][0], yi = vs[i+start][1];\n        var xj = vs[j+start][0], yj = vs[j+start][1];\n        var intersect = ((yi > y) !== (yj > y))\n            && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n        if (intersect) inside = !inside;\n    }\n    return inside;\n};\n", "var pointInPolygonFlat = require('./flat.js')\nvar pointInPolygonNested = require('./nested.js')\n\nmodule.exports = function pointInPolygon (point, vs, start, end) {\n    if (vs.length > 0 && Array.isArray(vs[0])) {\n        return pointInPolygonNested(point, vs, start, end);\n    } else {\n        return pointInPolygonFlat(point, vs, start, end);\n    }\n}\nmodule.exports.nested = pointInPolygonNested\nmodule.exports.flat = pointInPolygonFlat\n", "!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?e(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],e):e((t=t||self).predicates={})}(this,function(t){\"use strict\";const e=134217729,n=33306690738754706e-32;function r(t,e,n,r,o){let f,i,u,c,s=e[0],a=r[0],d=0,l=0;a>s==a>-s?(f=s,s=e[++d]):(f=a,a=r[++l]);let p=0;if(d<t&&l<n)for(a>s==a>-s?(u=f-((i=s+f)-s),s=e[++d]):(u=f-((i=a+f)-a),a=r[++l]),f=i,0!==u&&(o[p++]=u);d<t&&l<n;)a>s==a>-s?(u=f-((i=f+s)-(c=i-f))+(s-c),s=e[++d]):(u=f-((i=f+a)-(c=i-f))+(a-c),a=r[++l]),f=i,0!==u&&(o[p++]=u);for(;d<t;)u=f-((i=f+s)-(c=i-f))+(s-c),s=e[++d],f=i,0!==u&&(o[p++]=u);for(;l<n;)u=f-((i=f+a)-(c=i-f))+(a-c),a=r[++l],f=i,0!==u&&(o[p++]=u);return 0===f&&0!==p||(o[p++]=f),p}function o(t){return new Float64Array(t)}const f=33306690738754716e-32,i=22204460492503146e-32,u=11093356479670487e-47,c=o(4),s=o(8),a=o(12),d=o(16),l=o(4);t.orient2d=function(t,o,p,b,y,h){const M=(o-h)*(p-y),x=(t-y)*(b-h),j=M-x;if(0===M||0===x||M>0!=x>0)return j;const m=Math.abs(M+x);return Math.abs(j)>=f*m?j:-function(t,o,f,p,b,y,h){let M,x,j,m,_,v,w,A,F,O,P,g,k,q,z,B,C,D;const E=t-b,G=f-b,H=o-y,I=p-y;_=(z=(A=E-(w=(v=e*E)-(v-E)))*(O=I-(F=(v=e*I)-(v-I)))-((q=E*I)-w*F-A*F-w*O))-(P=z-(C=(A=H-(w=(v=e*H)-(v-H)))*(O=G-(F=(v=e*G)-(v-G)))-((B=H*G)-w*F-A*F-w*O))),c[0]=z-(P+_)+(_-C),_=(k=q-((g=q+P)-(_=g-q))+(P-_))-(P=k-B),c[1]=k-(P+_)+(_-B),_=(D=g+P)-g,c[2]=g-(D-_)+(P-_),c[3]=D;let J=function(t,e){let n=e[0];for(let r=1;r<t;r++)n+=e[r];return n}(4,c),K=i*h;if(J>=K||-J>=K)return J;if(M=t-(E+(_=t-E))+(_-b),j=f-(G+(_=f-G))+(_-b),x=o-(H+(_=o-H))+(_-y),m=p-(I+(_=p-I))+(_-y),0===M&&0===x&&0===j&&0===m)return J;if(K=u*h+n*Math.abs(J),(J+=E*m+I*M-(H*j+G*x))>=K||-J>=K)return J;_=(z=(A=M-(w=(v=e*M)-(v-M)))*(O=I-(F=(v=e*I)-(v-I)))-((q=M*I)-w*F-A*F-w*O))-(P=z-(C=(A=x-(w=(v=e*x)-(v-x)))*(O=G-(F=(v=e*G)-(v-G)))-((B=x*G)-w*F-A*F-w*O))),l[0]=z-(P+_)+(_-C),_=(k=q-((g=q+P)-(_=g-q))+(P-_))-(P=k-B),l[1]=k-(P+_)+(_-B),_=(D=g+P)-g,l[2]=g-(D-_)+(P-_),l[3]=D;const L=r(4,c,4,l,s);_=(z=(A=E-(w=(v=e*E)-(v-E)))*(O=m-(F=(v=e*m)-(v-m)))-((q=E*m)-w*F-A*F-w*O))-(P=z-(C=(A=H-(w=(v=e*H)-(v-H)))*(O=j-(F=(v=e*j)-(v-j)))-((B=H*j)-w*F-A*F-w*O))),l[0]=z-(P+_)+(_-C),_=(k=q-((g=q+P)-(_=g-q))+(P-_))-(P=k-B),l[1]=k-(P+_)+(_-B),_=(D=g+P)-g,l[2]=g-(D-_)+(P-_),l[3]=D;const N=r(L,s,4,l,a);_=(z=(A=M-(w=(v=e*M)-(v-M)))*(O=m-(F=(v=e*m)-(v-m)))-((q=M*m)-w*F-A*F-w*O))-(P=z-(C=(A=x-(w=(v=e*x)-(v-x)))*(O=j-(F=(v=e*j)-(v-j)))-((B=x*j)-w*F-A*F-w*O))),l[0]=z-(P+_)+(_-C),_=(k=q-((g=q+P)-(_=g-q))+(P-_))-(P=k-B),l[1]=k-(P+_)+(_-B),_=(D=g+P)-g,l[2]=g-(D-_)+(P-_),l[3]=D;const Q=r(N,a,4,l,d);return d[Q-1]}(t,o,p,b,y,h,m)},t.orient2dfast=function(t,e,n,r,o,f){return(e-f)*(n-o)-(t-o)*(r-f)},Object.defineProperty(t,\"__esModule\",{value:!0})});\n", "'use strict';\n\nvar RBush = require('rbush');\nvar Queue = require('tinyqueue');\nvar pointInPolygon = require('point-in-polygon');\nvar orient = require('robust-predicates/umd/orient2d.min.js').orient2d;\n\n// Fix for require issue in webpack https://github.com/mapbox/concaveman/issues/18\nif (Queue.default) {\n    Queue = Queue.default;\n}\n\nmodule.exports = concaveman;\nmodule.exports.default = concaveman;\n\nfunction concaveman(points, concavity, lengthThreshold) {\n    // a relative measure of concavity; higher value means simpler hull\n    concavity = Math.max(0, concavity === undefined ? 2 : concavity);\n\n    // when a segment goes below this length threshold, it won't be drilled down further\n    lengthThreshold = lengthThreshold || 0;\n\n    // start with a convex hull of the points\n    var hull = fastConvexHull(points);\n\n    // index the points with an R-tree\n    var tree = new RBush(16);\n    tree.toBBox = function (a) {\n        return {\n            minX: a[0],\n            minY: a[1],\n            maxX: a[0],\n            maxY: a[1]\n        };\n    };\n    tree.compareMinX = function (a, b) { return a[0] - b[0]; };\n    tree.compareMinY = function (a, b) { return a[1] - b[1]; };\n\n    tree.load(points);\n\n    // turn the convex hull into a linked list and populate the initial edge queue with the nodes\n    var queue = [];\n    for (var i = 0, last; i < hull.length; i++) {\n        var p = hull[i];\n        tree.remove(p);\n        last = insertNode(p, last);\n        queue.push(last);\n    }\n\n    // index the segments with an R-tree (for intersection checks)\n    var segTree = new RBush(16);\n    for (i = 0; i < queue.length; i++) segTree.insert(updateBBox(queue[i]));\n\n    var sqConcavity = concavity * concavity;\n    var sqLenThreshold = lengthThreshold * lengthThreshold;\n\n    // process edges one by one\n    while (queue.length) {\n        var node = queue.shift();\n        var a = node.p;\n        var b = node.next.p;\n\n        // skip the edge if it's already short enough\n        var sqLen = getSqDist(a, b);\n        if (sqLen < sqLenThreshold) continue;\n\n        var maxSqLen = sqLen / sqConcavity;\n\n        // find the best connection point for the current edge to flex inward to\n        p = findCandidate(tree, node.prev.p, a, b, node.next.next.p, maxSqLen, segTree);\n\n        // if we found a connection and it satisfies our concavity measure\n        if (p && Math.min(getSqDist(p, a), getSqDist(p, b)) <= maxSqLen) {\n            // connect the edge endpoints through this point and add 2 new edges to the queue\n            queue.push(node);\n            queue.push(insertNode(p, node));\n\n            // update point and segment indexes\n            tree.remove(p);\n            segTree.remove(node);\n            segTree.insert(updateBBox(node));\n            segTree.insert(updateBBox(node.next));\n        }\n    }\n\n    // convert the resulting hull linked list to an array of points\n    node = last;\n    var concave = [];\n    do {\n        concave.push(node.p);\n        node = node.next;\n    } while (node !== last);\n\n    concave.push(node.p);\n\n    return concave;\n}\n\nfunction findCandidate(tree, a, b, c, d, maxDist, segTree) {\n    var queue = new Queue([], compareDist);\n    var node = tree.data;\n\n    // search through the point R-tree with a depth-first search using a priority queue\n    // in the order of distance to the edge (b, c)\n    while (node) {\n        for (var i = 0; i < node.children.length; i++) {\n            var child = node.children[i];\n\n            var dist = node.leaf ? sqSegDist(child, b, c) : sqSegBoxDist(b, c, child);\n            if (dist > maxDist) continue; // skip the node if it's farther than we ever need\n\n            queue.push({\n                node: child,\n                dist: dist\n            });\n        }\n\n        while (queue.length && !queue.peek().node.children) {\n            var item = queue.pop();\n            var p = item.node;\n\n            // skip all points that are as close to adjacent edges (a,b) and (c,d),\n            // and points that would introduce self-intersections when connected\n            var d0 = sqSegDist(p, a, b);\n            var d1 = sqSegDist(p, c, d);\n            if (item.dist < d0 && item.dist < d1 &&\n                noIntersections(b, p, segTree) &&\n                noIntersections(c, p, segTree)) return p;\n        }\n\n        node = queue.pop();\n        if (node) node = node.node;\n    }\n\n    return null;\n}\n\nfunction compareDist(a, b) {\n    return a.dist - b.dist;\n}\n\n// square distance from a segment bounding box to the given one\nfunction sqSegBoxDist(a, b, bbox) {\n    if (inside(a, bbox) || inside(b, bbox)) return 0;\n    var d1 = sqSegSegDist(a[0], a[1], b[0], b[1], bbox.minX, bbox.minY, bbox.maxX, bbox.minY);\n    if (d1 === 0) return 0;\n    var d2 = sqSegSegDist(a[0], a[1], b[0], b[1], bbox.minX, bbox.minY, bbox.minX, bbox.maxY);\n    if (d2 === 0) return 0;\n    var d3 = sqSegSegDist(a[0], a[1], b[0], b[1], bbox.maxX, bbox.minY, bbox.maxX, bbox.maxY);\n    if (d3 === 0) return 0;\n    var d4 = sqSegSegDist(a[0], a[1], b[0], b[1], bbox.minX, bbox.maxY, bbox.maxX, bbox.maxY);\n    if (d4 === 0) return 0;\n    return Math.min(d1, d2, d3, d4);\n}\n\nfunction inside(a, bbox) {\n    return a[0] >= bbox.minX &&\n           a[0] <= bbox.maxX &&\n           a[1] >= bbox.minY &&\n           a[1] <= bbox.maxY;\n}\n\n// check if the edge (a,b) doesn't intersect any other edges\nfunction noIntersections(a, b, segTree) {\n    var minX = Math.min(a[0], b[0]);\n    var minY = Math.min(a[1], b[1]);\n    var maxX = Math.max(a[0], b[0]);\n    var maxY = Math.max(a[1], b[1]);\n\n    var edges = segTree.search({minX: minX, minY: minY, maxX: maxX, maxY: maxY});\n    for (var i = 0; i < edges.length; i++) {\n        if (intersects(edges[i].p, edges[i].next.p, a, b)) return false;\n    }\n    return true;\n}\n\nfunction cross(p1, p2, p3) {\n    return orient(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\n// check if the edges (p1,q1) and (p2,q2) intersect\nfunction intersects(p1, q1, p2, q2) {\n    return p1 !== q2 && q1 !== p2 &&\n        cross(p1, q1, p2) > 0 !== cross(p1, q1, q2) > 0 &&\n        cross(p2, q2, p1) > 0 !== cross(p2, q2, q1) > 0;\n}\n\n// update the bounding box of a node's edge\nfunction updateBBox(node) {\n    var p1 = node.p;\n    var p2 = node.next.p;\n    node.minX = Math.min(p1[0], p2[0]);\n    node.minY = Math.min(p1[1], p2[1]);\n    node.maxX = Math.max(p1[0], p2[0]);\n    node.maxY = Math.max(p1[1], p2[1]);\n    return node;\n}\n\n// speed up convex hull by filtering out points inside quadrilateral formed by 4 extreme points\nfunction fastConvexHull(points) {\n    var left = points[0];\n    var top = points[0];\n    var right = points[0];\n    var bottom = points[0];\n\n    // find the leftmost, rightmost, topmost and bottommost points\n    for (var i = 0; i < points.length; i++) {\n        var p = points[i];\n        if (p[0] < left[0]) left = p;\n        if (p[0] > right[0]) right = p;\n        if (p[1] < top[1]) top = p;\n        if (p[1] > bottom[1]) bottom = p;\n    }\n\n    // filter out points that are inside the resulting quadrilateral\n    var cull = [left, top, right, bottom];\n    var filtered = cull.slice();\n    for (i = 0; i < points.length; i++) {\n        if (!pointInPolygon(points[i], cull)) filtered.push(points[i]);\n    }\n\n    // get convex hull around the filtered points\n    return convexHull(filtered);\n}\n\n// create a new node in a doubly linked list\nfunction insertNode(p, prev) {\n    var node = {\n        p: p,\n        prev: null,\n        next: null,\n        minX: 0,\n        minY: 0,\n        maxX: 0,\n        maxY: 0\n    };\n\n    if (!prev) {\n        node.prev = node;\n        node.next = node;\n\n    } else {\n        node.next = prev.next;\n        node.prev = prev;\n        prev.next.prev = node;\n        prev.next = node;\n    }\n    return node;\n}\n\n// square distance between 2 points\nfunction getSqDist(p1, p2) {\n\n    var dx = p1[0] - p2[0],\n        dy = p1[1] - p2[1];\n\n    return dx * dx + dy * dy;\n}\n\n// square distance from a point to a segment\nfunction sqSegDist(p, p1, p2) {\n\n    var x = p1[0],\n        y = p1[1],\n        dx = p2[0] - x,\n        dy = p2[1] - y;\n\n    if (dx !== 0 || dy !== 0) {\n\n        var t = ((p[0] - x) * dx + (p[1] - y) * dy) / (dx * dx + dy * dy);\n\n        if (t > 1) {\n            x = p2[0];\n            y = p2[1];\n\n        } else if (t > 0) {\n            x += dx * t;\n            y += dy * t;\n        }\n    }\n\n    dx = p[0] - x;\n    dy = p[1] - y;\n\n    return dx * dx + dy * dy;\n}\n\n// segment to segment distance, ported from http://geomalgorithms.com/a07-_distance.html by Dan Sunday\nfunction sqSegSegDist(x0, y0, x1, y1, x2, y2, x3, y3) {\n    var ux = x1 - x0;\n    var uy = y1 - y0;\n    var vx = x3 - x2;\n    var vy = y3 - y2;\n    var wx = x0 - x2;\n    var wy = y0 - y2;\n    var a = ux * ux + uy * uy;\n    var b = ux * vx + uy * vy;\n    var c = vx * vx + vy * vy;\n    var d = ux * wx + uy * wy;\n    var e = vx * wx + vy * wy;\n    var D = a * c - b * b;\n\n    var sc, sN, tc, tN;\n    var sD = D;\n    var tD = D;\n\n    if (D === 0) {\n        sN = 0;\n        sD = 1;\n        tN = e;\n        tD = c;\n    } else {\n        sN = b * e - c * d;\n        tN = a * e - b * d;\n        if (sN < 0) {\n            sN = 0;\n            tN = e;\n            tD = c;\n        } else if (sN > sD) {\n            sN = sD;\n            tN = e + b;\n            tD = c;\n        }\n    }\n\n    if (tN < 0.0) {\n        tN = 0.0;\n        if (-d < 0.0) sN = 0.0;\n        else if (-d > a) sN = sD;\n        else {\n            sN = -d;\n            sD = a;\n        }\n    } else if (tN > tD) {\n        tN = tD;\n        if ((-d + b) < 0.0) sN = 0;\n        else if (-d + b > a) sN = sD;\n        else {\n            sN = -d + b;\n            sD = a;\n        }\n    }\n\n    sc = sN === 0 ? 0 : sN / sD;\n    tc = tN === 0 ? 0 : tN / tD;\n\n    var cx = (1 - sc) * x0 + sc * x1;\n    var cy = (1 - sc) * y0 + sc * y1;\n    var cx2 = (1 - tc) * x2 + tc * x3;\n    var cy2 = (1 - tc) * y2 + tc * y3;\n    var dx = cx2 - cx;\n    var dy = cy2 - cy;\n\n    return dx * dx + dy * dy;\n}\n\nfunction compareByX(a, b) {\n    return a[0] === b[0] ? a[1] - b[1] : a[0] - b[0];\n}\n\nfunction convexHull(points) {\n    points.sort(compareByX);\n\n    var lower = [];\n    for (var i = 0; i < points.length; i++) {\n        while (lower.length >= 2 && cross(lower[lower.length - 2], lower[lower.length - 1], points[i]) <= 0) {\n            lower.pop();\n        }\n        lower.push(points[i]);\n    }\n\n    var upper = [];\n    for (var ii = points.length - 1; ii >= 0; ii--) {\n        while (upper.length >= 2 && cross(upper[upper.length - 2], upper[upper.length - 1], points[ii]) <= 0) {\n            upper.pop();\n        }\n        upper.push(points[ii]);\n    }\n\n    upper.pop();\n    lower.pop();\n    return lower.concat(upper);\n}\n", "module.exports = {\n\t/**\n\t * Euclidean distance\n\t */\n\teudist(v1,v2,sqrt) {\n\t\tvar len = v1.length;\n\t\tvar sum = 0;\n\n\t\tfor(let i=0;i<len;i++) {\n\t\t\tvar d = (v1[i]||0) - (v2[i]||0);\n\t\t\tsum += d*d;\n\t\t}\n\t\t// Square root not really needed\n\t\treturn sqrt? Math.sqrt(sum) : sum;\n\t},\n\n\tmandist(v1,v2,sqrt) {\n\t\tvar len = v1.length;\n\t\tvar sum = 0;\n\n\t\tfor(let i=0;i<len;i++) {\n\t\t\tsum += Math.abs((v1[i]||0) - (v2[i]||0));\n\t\t}\n\n\t\t// Square root not really needed\n\t\treturn sqrt? Math.sqrt(sum) : sum;\n\t},\n\n\t/**\n\t * Unidimensional distance\n\t */\n\tdist(v1,v2,sqrt) {\n\t\tvar d = Math.abs(v1-v2);\n\t\treturn sqrt? d : d*d;\n\t}\n\n}\n", "const\n\tDistance = require(\"./distance.js\"),\n\teudist = Distance.eudist,\n\tdist = Distance.dist;\n\nmodule.exports = {\n\tkmrand(data,k) {\n\t\tvar map = {}, ks = [], t = k<<2;\n\t\tvar len = data.length;\n\t\tvar multi = data[0].length>0;\n\n\t\twhile(ks.length<k && (t--)>0) {\n\t\t\tlet d = data[Math.floor(Math.random()*len)];\n\t\t\tlet key = multi? d.join(\"_\") : `${d}`;\n\t\t\tif(!map[key]) {\n\t\t\t\tmap[key] = true;\n\t\t\t\tks.push(d);\n\t\t\t}\n\t\t}\n\n\t\tif(ks.length<k) throw new Error(\"Error initializating clusters\");\n\t\telse return ks;\n\t},\n\n\t/**\n\t * K-means++ initial centroid selection\n\t */\n\tkmpp(data,k) {\n\t\tvar distance = data[0].length? eudist : dist;\n\t\tvar ks = [], len = data.length;\n\t\tvar multi = data[0].length>0;\n\t\tvar map = {};\n\n\t\t// First random centroid\n\t\tvar c = data[Math.floor(Math.random()*len)];\n\t\tvar key = multi? c.join(\"_\") : `${c}`;\n\t\tks.push(c);\n\t\tmap[key] = true;\n\n\t\t// Retrieve next centroids\n\t\twhile(ks.length<k) {\n\t\t\t// Min Distances between current centroids and data points\n\t\t\tlet dists = [], lk = ks.length;\n\t\t\tlet dsum = 0, prs = [];\n\n\t\t\tfor(let i=0;i<len;i++) {\n\t\t\t\tlet min = Infinity;\n\t\t\t\tfor(let j=0;j<lk;j++) {\n\t\t\t\t\tlet dist = distance(data[i],ks[j]);\n\t\t\t\t\tif(dist<=min) min = dist;\n\t\t\t\t}\n\t\t\t\tdists[i] = min;\n\t\t\t}\n\n\t\t\t// Sum all min distances\n\t\t\tfor(let i=0;i<len;i++) {\n\t\t\t\tdsum += dists[i]\n\t\t\t}\n\n\t\t\t// Probabilities and cummulative prob (cumsum)\n\t\t\tfor(let i=0;i<len;i++) {\n\t\t\t\tprs[i] = {i:i, v:data[i],\tpr:dists[i]/dsum, cs:0}\n\t\t\t}\n\n\t\t\t// Sort Probabilities\n\t\t\tprs.sort((a,b)=>a.pr-b.pr);\n\n\t\t\t// Cummulative Probabilities\n\t\t\tprs[0].cs = prs[0].pr;\n\t\t\tfor(let i=1;i<len;i++) {\n\t\t\t\tprs[i].cs = prs[i-1].cs + prs[i].pr;\n\t\t\t}\n\n\t\t\t// Randomize\n\t\t\tlet rnd = Math.random();\n\n\t\t\t// Gets only the items whose cumsum >= rnd\n\t\t\tlet idx = 0;\n\t\t\twhile(idx<len-1 && prs[idx++].cs<rnd);\n\t\t\tks.push(prs[idx-1].v);\n\t\t\t/*\n\t\t\tlet done = false;\n\t\t\twhile(!done) {\n\t\t\t\t// this is our new centroid\n\t\t\t\tc = prs[idx-1].v\n\t\t\t\tkey = multi? c.join(\"_\") : `${c}`;\n\t\t\t\tif(!map[key]) {\n\t\t\t\t\tmap[key] = true;\n\t\t\t\t\tks.push(c);\n\t\t\t\t\tdone = true;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tidx++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t*/\n\t\t}\n\n\t\treturn ks;\n\t}\n\n}\n", "/*jshint esversion: 6 */\n\nconst\n\tDistance = require(\"./distance.js\"),\n\tClusterInit = require(\"./kinit.js\"),\n\teudist = Distance.eudist,\n\tmandist = Distance.mandist,\n\tdist = Distance.dist,\n\tkmrand = ClusterInit.kmrand,\n\tkmpp = ClusterInit.kmpp;\n\nconst MAX = 10000;\n\n/**\n * Inits an array with values\n */\nfunction init(len,val,v) {\n\tv = v || [];\n\tfor(let i=0;i<len;i++) v[i] = val;\n\treturn v;\n}\n\nfunction skmeans(data,k,initial,maxit) {\n\tvar ks = [], old = [], idxs = [], dist = [];\n\tvar conv = false, it = maxit || MAX;\n\tvar len = data.length, vlen = data[0].length, multi = vlen>0;\n\tvar count = [];\n\n\tif(!initial) {\n\t\tlet idxs = {};\n\t\twhile(ks.length<k) {\n\t\t\tlet idx = Math.floor(Math.random()*len);\n\t\t\tif(!idxs[idx]) {\n\t\t\t\tidxs[idx] = true;\n\t\t\t\tks.push(data[idx]);\n\t\t\t}\n\t\t}\n\t}\n\telse if(initial==\"kmrand\") {\n\t\tks = kmrand(data,k);\n\t}\n\telse if(initial==\"kmpp\") {\n\t\tks = kmpp(data,k);\n\t}\n\telse {\n\t\tks = initial;\n\t}\n\n\tdo {\n\t\t// Reset k count\n\t\tinit(k,0,count);\n\n\t\t// For each value in data, find the nearest centroid\n\t\tfor(let i=0;i<len;i++) {\n\t\t\tlet min = Infinity, idx = 0;\n\t\t\tfor(let j=0;j<k;j++) {\n\t\t\t\t// Multidimensional or unidimensional\n\t\t\t\tvar dist = multi? eudist(data[i],ks[j]) : Math.abs(data[i]-ks[j]);\n\t\t\t\tif(dist<=min) {\n\t\t\t\t\tmin = dist;\n\t\t\t\t\tidx = j;\n\t\t\t\t}\n\t\t\t}\n\t\t\tidxs[i] = idx;\t// Index of the selected centroid for that value\n\t\t\tcount[idx]++;\t\t// Number of values for this centroid\n\t\t}\n\n\t\t// Recalculate centroids\n\t\tvar sum = [], old = [], dif = 0;\n\t\tfor(let j=0;j<k;j++) {\n\t\t\t// Multidimensional or unidimensional\n\t\t\tsum[j] = multi? init(vlen,0,sum[j]) : 0;\n\t\t\told[j] = ks[j];\n\t\t}\n\n\t\t// If multidimensional\n\t\tif(multi) {\n\t\t\tfor(let j=0;j<k;j++) ks[j] = [];\n\n\t\t\t// Sum values and count for each centroid\n\t\t\tfor(let i=0;i<len;i++) {\n\t\t\t\tlet\tidx = idxs[i],\t\t// Centroid for that item\n\t\t\t\t\t\tvsum = sum[idx],\t// Sum values for this centroid\n\t\t\t\t\t\tvect = data[i];\t\t// Current vector\n\n\t\t\t\t// Accumulate value on the centroid for current vector\n\t\t\t\tfor(let h=0;h<vlen;h++) {\n\t\t\t\t\tvsum[h] += vect[h];\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Calculate the average for each centroid\n\t\t\tconv = true;\n\t\t\tfor(let j=0;j<k;j++) {\n\t\t\t\tlet ksj = ks[j],\t\t// Current centroid\n\t\t\t\t\t\tsumj = sum[j],\t// Accumulated centroid values\n\t\t\t\t\t\toldj = old[j], \t// Old centroid value\n\t\t\t\t\t\tcj = count[j];\t// Number of elements for this centroid\n\n\t\t\t\t// New average\n\t\t\t\tfor(let h=0;h<vlen;h++) {\n\t\t\t\t\tksj[h] = (sumj[h])/(cj) || 0;\t// New centroid\n\t\t\t\t}\n\n\t\t\t\t// Find if centroids have moved\n\t\t\t\tif(conv) {\n\t\t\t\t\tfor(let h=0;h<vlen;h++) {\n\t\t\t\t\t\tif(oldj[h]!=ksj[h]) {\n\t\t\t\t\t\t\tconv = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// If unidimensional\n\t\telse {\n\t\t\t// Sum values and count for each centroid\n\t\t\tfor(let i=0;i<len;i++) {\n\t\t\t\tlet idx = idxs[i];\n\t\t\t\tsum[idx] += data[i];\n\t\t\t}\n\t\t\t// Calculate the average for each centroid\n\t\t\tfor(let j=0;j<k;j++) {\n\t\t\t\tks[j] = sum[j]/count[j] || 0;\t// New centroid\n\t\t\t}\n\t\t\t// Find if centroids have moved\n\t\t\tconv = true;\n\t\t\tfor(let j=0;j<k;j++) {\n\t\t\t\tif(old[j]!=ks[j]) {\n\t\t\t\t\tconv = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconv = conv || (--it<=0);\n\t}while(!conv);\n\n\treturn {\n\t\tit : MAX-it,\n\t\tk : k,\n\t\tidxs : idxs,\n\t\tcentroids : ks\n\t};\n}\n\nmodule.exports = skmeans;\n", "'use strict';\n\nmodule.exports = earcut;\nmodule.exports.default = earcut;\n\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, invSize;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 32767 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize, 0);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) break;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\n    var stop = ear,\n        prev, next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim | 0);\n            triangles.push(ear.i / dim | 0);\n            triangles.push(next.i / dim | 0);\n\n            removeNode(ear);\n\n            // skipping the next vertex leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n            // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n            // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n    // triangle bbox; min & max are calculated like this for speed\n    var x0 = ax < bx ? (ax < cx ? ax : cx) : (bx < cx ? bx : cx),\n        y0 = ay < by ? (ay < cy ? ay : cy) : (by < cy ? by : cy),\n        x1 = ax > bx ? (ax > cx ? ax : cx) : (bx > cx ? bx : cx),\n        y1 = ay > by ? (ay > cy ? ay : cy) : (by > cy ? by : cy);\n\n    var p = c.next;\n    while (p !== a) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    var ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n    // triangle bbox; min & max are calculated like this for speed\n    var x0 = ax < bx ? (ax < cx ? ax : cx) : (bx < cx ? bx : cx),\n        y0 = ay < by ? (ay < cy ? ay : cy) : (by < cy ? by : cy),\n        x1 = ax > bx ? (ax > cx ? ax : cx) : (bx > cx ? bx : cx),\n        y1 = ay > by ? (ay > cy ? ay : cy) : (by > cy ? by : cy);\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(x0, y0, minX, minY, invSize),\n        maxZ = zOrder(x1, y1, minX, minY, invSize);\n\n    var p = ear.prevZ,\n        n = ear.nextZ;\n\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim | 0);\n            triangles.push(p.i / dim | 0);\n            triangles.push(b.i / dim | 0);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return filterPoints(p);\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize, 0);\n                earcutLinked(c, triangles, dim, minX, minY, invSize, 0);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        outerNode = eliminateHole(queue[i], outerNode);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    var bridge = findHoleBridge(hole, outerNode);\n    if (!bridge) {\n        return outerNode;\n    }\n\n    var bridgeReverse = splitPolygon(bridge, hole);\n\n    // filter collinear points around the cuts\n    filterPoints(bridgeReverse, bridgeReverse.next);\n    return filterPoints(bridge, bridge.next);\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                m = p.x < p.next.x ? p : p.next;\n                if (x === hx) return m; // hole touches outer segment; pick leftmost endpoint\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m;\n\n    do {\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if (locallyInside(p, hole) &&\n                (tan < tanMin || (tan === tanMin && (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    } while (p !== stop);\n\n    return m;\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m, p) {\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    var p = start;\n    do {\n        if (p.z === 0) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i, p, q, e, tail, numMerges, pSize, qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n            qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = (x - minX) * invSize | 0;\n    y = (y - minY) * invSize | 0;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y)) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) >= (ax - px) * (cy - py) &&\n           (ax - px) * (by - py) >= (bx - px) * (ay - py) &&\n           (bx - px) * (cy - py) >= (cx - px) * (by - py);\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && // dones't intersect other edges\n           (locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && // locally visible\n            (area(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\n            equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    var o1 = sign(area(p1, q1, p2));\n    var o2 = sign(area(p1, q1, q2));\n    var o3 = sign(area(p2, q2, p1));\n    var o4 = sign(area(p2, q2, q1));\n\n    if (o1 !== o2 && o3 !== o4) return true; // general case\n\n    if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n    if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n    if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n    if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n    return false;\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p, q, r) {\n    return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n}\n\nfunction sign(num) {\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertex index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertex nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = 0;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n", "import \"./style/index.css\";\nimport { defineComponent, computed } from \"vue\";\nimport { buttonProps, buttonEmits } from \"./types.mjs\";\nconst _sfc_main = defineComponent({\n  name: \"dls-button\",\n  props: buttonProps,\n  emits: buttonEmits,\n  setup(props, ctx) {\n    const { emit } = ctx;\n    const handleButtonClick = (evt) => {\n      emit(\"click\", evt);\n    };\n    const styleClass = computed(() => {\n      return {\n        [`k-button--${props.type}`]: props.type,\n        \"is-plain\": props.plain,\n        \"is-round\": props.round,\n        \"is-disabled\": props.disabled,\n        [`k-button--${props.size}`]: props.size\n      };\n    });\n    return {\n      styleClass,\n      handleButtonClick\n    };\n  }\n});\nexport {\n  _sfc_main as default\n};\n", "const ButtonType = [\n  \"primary\",\n  \"success\",\n  \"info\",\n  \"warning\",\n  \"danger\",\n  \"text\"\n];\nconst ButtonSize = [\"midium\", \"small\", \"mini\"];\nconst buttonProps = {\n  type: {\n    type: String,\n    validator(value) {\n      return ButtonType.includes(value);\n    }\n  },\n  size: {\n    type: String,\n    validator(value) {\n      return ButtonSize.includes(value);\n    }\n  },\n  plain: Boolean,\n  round: Boolean,\n  disabled: Boolean\n};\nconst buttonEmits = {\n  click: (evt) => evt instanceof MouseEvent\n};\nexport {\n  ButtonSize,\n  ButtonType,\n  buttonEmits,\n  buttonProps\n};\n", "const _export_sfc = (sfc, props) => {\n  const target = sfc.__vccOpts || sfc;\n  for (const [key, val] of props) {\n    target[key] = val;\n  }\n  return target;\n};\nexport {\n  _export_sfc as default\n};\n", "import _sfc_main from \"./dlsButton.vue2.mjs\";\nimport { openBlock, createElementBlock, normalizeClass, renderSlot } from \"vue\";\nimport _export_sfc from \"../../../_virtual/_plugin-vue_export-helper.mjs\";\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.handleButtonClick && _ctx.handleButtonClick(...args)),\n    class: normalizeClass([\"k-button\", _ctx.styleClass])\n  }, [\n    renderSlot(_ctx.$slots, \"default\")\n  ], 2);\n}\nconst _Button = /* @__PURE__ */ _export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport {\n  _Button as default\n};\n", "function Shaders() {\n}\nShaders.prototype = {\n  // 流动线\n  _getFlowLineShader: function() {\n    return \"uniform vec4 color;\\n              uniform float duration;\\n              \\n              czm_material czm_getMaterial(czm_materialInput materialInput){\\n                  czm_material material = czm_getDefaultMaterial(materialInput);\\n                  vec2 st = materialInput.st;\\n                  float t =fract(czm_frameNumber / duration);\\n                  t *= 1.03;\\n                  float alpha = smoothstep(t- 0.03, t, st.s) * step(-t, -st.s);\\n                  alpha += 0.1;\\n                  vec4 fragColor;\\n                  fragColor.rgb = (color.rgb) / 0.5;\\n                  fragColor = czm_gammaCorrect(fragColor);\\n                  material.diffuse = fragColor.rgb;\\n                  material.alpha = alpha;\\n                  material.emission = fragColor.rgb;\\n                  return material;\\n              }\\n              \";\n  },\n  // 动态线\n  _getDynamicLineShader: function(options) {\n    if (options && options.get) {\n      return \"czm_material czm_getMaterial(czm_materialInput materialInput)\\n              {\\n                  czm_material material = czm_getDefaultMaterial(materialInput);\\n                  vec2 st = materialInput.st;\\n                  \\n                  if(texture(image, vec2(0.0, 0.0)).a == 1.0){\\n                      discard;\\n                  }else{\\n                      material.alpha = texture(image, vec2(1.0 - fract(time - st.s), st.t)).a * color.a;\\n                  }\\n                  \\n                  material.diffuse = max(color.rgb * material.alpha * 3.0, color.rgb);\\n                  \\n                  return material;\\n              }\\n              \";\n    }\n  },\n  // 动态泛光线\n  _getDynamicLightLineShader: function(options) {\n    if (options && options.get) {\n      return \"czm_material czm_getMaterial(czm_materialInput materialInput)\\n              {\\n                  czm_material material = czm_getDefaultMaterial(materialInput);\\n                  vec2 st = materialInput.st;\\n                  \\n                  vec4 colorImage = texture(image, vec2(fract(1.0 *st.s - time), fract(st.t)));\\n                  \\n                  vec4 fragColor;\\n                  fragColor.rgb = (colorImage.rgb+color.rgb) / 1.0;\\n                  fragColor = czm_gammaCorrect(fragColor);\\n                  material.diffuse = colorImage.rgb;\\n                  material.alpha = colorImage.a;\\n                  material.emission = fragColor.rgb;\\n                  \\n                  return material;\\n              }\\n              \";\n    }\n  },\n  //带方向的墙体\n  _getDirectionWallShader: function(options) {\n    if (options && options.get) {\n      var materail = \"czm_material czm_getMaterial(czm_materialInput materialInput)\\n                  {\\n                  czm_material material = czm_getDefaultMaterial(materialInput);\\n                  vec2 st = materialInput.st;\\n                  \\n \";\n      if (options.freely == \"vertical\") {\n        materail += \"vec4 colorImage = texture(image, vec2(fract(float(\" + options.count + \")*st.t \" + options.direction + \" time), fract(st.s)));\\n \";\n      } else {\n        materail += \"vec4 colorImage = texture(image, vec2(fract(float(\" + options.count + \")*st.s \" + options.direction + \" time), fract(st.t)));\\n \";\n      }\n      materail += \"vec4 fragColor;\\n                  fragColor.rgb = (colorImage.rgb+color.rgb) / 1.0;\\n                  fragColor = czm_gammaCorrect(fragColor);\\n \";\n      materail += \" material.diffuse = colorImage.rgb;\\n                  material.alpha = colorImage.a;\\n                  material.emission = fragColor.rgb;\\n                  \\n                  return material;\\n                  }\\n                  \";\n      return materail;\n    }\n  },\n  _getCircleFadeShader: function(options) {\n    if (options && options.get) {\n      return `czm_material czm_getMaterial(czm_materialInput materialInput)\n                \n                  {\n                    \n                      czm_material material = czm_getDefaultMaterial(materialInput);\n                    \n                      material.diffuse = 1.5 * color.rgb;\n                    \n                      vec2 st = materialInput.st;\n                    \n                      float dis = distance(st, vec2(0.5, 0.5));\n                    \n                      float per = fract(time);\n                    \n                      if(dis > per * 0.5){\n                        \n                          //material.alpha = 0.0;\n                        \n                          discard;\n                    \n                      }else {\n                            \n                          material.alpha = color.a  * dis / per / 2.0;\n                    \n                      }\n                    \n                      return material;\n                \n                  }`;\n    }\n  },\n  // 波动圆\n  _getDynamicCircleShader: function(options) {\n    if (options && options.get) {\n      return \"uniform vec4 color;\\n              uniform float duration;\\n              uniform float count;\\n              uniform float gradient;\\n              \\n              czm_material czm_getMaterial(czm_materialInput materialInput)\\n              {\\n                  czm_material material = czm_getDefaultMaterial(materialInput);\\n                  material.diffuse = 1.5 * color.rgb;\\n                  vec2 st = materialInput.st;\\n                  vec3 str = materialInput.str;\\n                  float dis = distance(st, vec2(0.5, 0.5));\\n                  float per = fract(czm_frameNumber / duration);\\n                  if(abs(str.z) > 0.001){\\n                      discard;\\n                  }\\n                  if(dis > 0.5){\\n                      discard;\\n                  } else {\\n                      float perDis = 0.5 / count;\\n                      float disNum;\\n                      float bl = .0;\\n                      for (int i = 0; i <= 10; i++) {\\n                          if (float(i) <= count) {\\n                              disNum = perDis * float(i) - dis + per / count;\\n                              if (disNum > 0.0) {\\n                                  if (disNum < perDis) {\\n                                      bl = 1.0 - disNum / perDis;\\n                                  } else if (disNum - perDis < perDis) {\\n                                      bl = 1.0 - abs(1.0 - disNum / perDis);\\n                                  }\\n                                  material.alpha = pow(bl, gradient);\\n                              }\\n                          }\\n                      }\\n                  }\\n                  return material;\\n              }\\n              \";\n    }\n  },\n  // 雷达扫描\n  _getRadarScanShader: function(options) {\n    if (options && options.get) {\n      return \"uniform sampler2D colorTexture;\\n              uniform sampler2D depthTexture;\\n              in vec2 v_textureCoordinates;\\n              uniform vec4 u_scanCenterEC;\\n              uniform vec3 u_scanPlaneNormalEC;\\n              uniform vec3 u_scanLineNormalEC;\\n              out vec4 myOutputColor;\\n              uniform float u_radius;\\n              uniform vec4 u_scanColor;\\n              \\n              vec4 toEye(in vec2 uv, in float depth){\\n              vec2 xy = vec2((uv.x * 2.0 - 1.0),(uv.y * 2.0 - 1.0));\\n              vec4 posInCamera =czm_inverseProjection * vec4(xy, depth, 1.0);\\n              posInCamera =posInCamera / posInCamera.w;\\n              return posInCamera;\\n              }\\n              \\n              bool isPointOnLineRight(in vec3 ptOnLine, in vec3 lineNormal, in vec3 testPt){\\n              vec3 v01 = testPt - ptOnLine;\\n              normalize(v01);\\n              vec3 temp = cross(v01, lineNormal);\\n              float d = dot(temp, u_scanPlaneNormalEC);\\n              return d > 0.5;\\n              }\\n              \\n              vec3 pointProjectOnPlane(in vec3 planeNormal, in vec3 planeOrigin, in vec3 point){\\n              vec3 v01 = point -planeOrigin;\\n              float d = dot(planeNormal, v01) ;\\n              return (point - planeNormal * d);\\n              }\\n              \\n              float distancePointToLine(in vec3 ptOnLine, in vec3 lineNormal, in vec3 testPt){\\n              vec3 tempPt = pointProjectOnPlane(lineNormal, ptOnLine, testPt);\\n              return length(tempPt - ptOnLine);\\n              }\\n              \\n              float getDepth(in vec4 depth){\\n              float z_window = czm_unpackDepth(depth);\\n              z_window = czm_reverseLogDepth(z_window);\\n              float n_range = czm_depthRange.near;\\n              float f_range = czm_depthRange.far;\\n              return (2.0 * z_window - n_range - f_range) / (f_range - n_range);\\n              }\\n              \\n              void main(){\\n              myOutputColor = texture(colorTexture, v_textureCoordinates);\\n              float depth = getDepth( texture(depthTexture, v_textureCoordinates));\\n              vec4 viewPos = toEye(v_textureCoordinates, depth);\\n              vec3 prjOnPlane = pointProjectOnPlane(u_scanPlaneNormalEC.xyz, u_scanCenterEC.xyz, viewPos.xyz);\\n              float dis = length(prjOnPlane.xyz - u_scanCenterEC.xyz);\\n              float twou_radius = u_radius * 2.0;\\n              if(dis < u_radius){\\n                  float f0 = 1.0 -abs(u_radius - dis) / u_radius;\\n                  f0 = pow(f0, 64.0);\\n                  vec3 lineEndPt = vec3(u_scanCenterEC.xyz) + u_scanLineNormalEC * u_radius;\\n                  float f = 0.0;\\n                  if(isPointOnLineRight(u_scanCenterEC.xyz, u_scanLineNormalEC.xyz, prjOnPlane.xyz)){\\n                      float dis1= length(prjOnPlane.xyz - lineEndPt);\\n                      f = abs(twou_radius -dis1) / twou_radius;\\n                      f = pow(f, float(\" + options.width + \"));\\n                  }\\n                  if(float(\" + options.border + \") > 0.0){\\n                    myOutputColor = mix(myOutputColor, u_scanColor, f + f0);\\n                  } else {\\n                    myOutputColor = mix(myOutputColor, u_scanColor, f);\\n                  }\\n                  }\\n              }\\n              \";\n    }\n  },\n  // 圆形扫描\n  _getCircleScanShader: function(options) {\n    if (options && options.get) {\n      return \"uniform sampler2D colorTexture;\\n              uniform sampler2D depthTexture;\\n              in vec2 v_textureCoordinates;\\n              uniform vec4 u_scanCenterEC;\\n              uniform vec3 u_scanPlaneNormalEC;\\n              uniform float u_radius;\\n              out vec4 myOutputColor;\\n              uniform vec4 u_scanColor;\\n              \\n              vec4 toEye(in vec2 uv, in float depth){\\n                vec2 xy = vec2((uv.x * 2.0 - 1.0),(uv.y * 2.0 - 1.0));\\n                vec4 posInCamera = czm_inverseProjection * vec4(xy, depth, 1.0);\\n                posInCamera =posInCamera / posInCamera.w;\\n                return posInCamera;\\n              }\\n              \\n              vec3 pointProjectOnPlane(in vec3 planeNormal, in vec3 planeOrigin, in vec3 point){\\n                  vec3 v01 = point - planeOrigin;\\n                  float d = dot(planeNormal, v01) ;\\n                  return (point - planeNormal * d);\\n              }\\n              \\n              float getDepth(in vec4 depth){\\n                  float z_window = czm_unpackDepth(depth);\\n                  z_window = czm_reverseLogDepth(z_window);\\n                  float n_range = czm_depthRange.near;\\n                  float f_range = czm_depthRange.far;\\n                  return (2.0 * z_window - n_range - f_range) / (f_range - n_range);\\n              }\\n              \\n              void main(){\\n                myOutputColor = texture(colorTexture, v_textureCoordinates);\\n                  float depth = getDepth(texture(depthTexture, v_textureCoordinates));\\n                  vec4 viewPos = toEye(v_textureCoordinates, depth);\\n                  vec3 prjOnPlane = pointProjectOnPlane(u_scanPlaneNormalEC.xyz, u_scanCenterEC.xyz, viewPos.xyz);\\n                  float dis = length(prjOnPlane.xyz - u_scanCenterEC.xyz);\\n                  if(dis < u_radius){\\n                    float f = 1.0 - abs(u_radius - dis) / u_radius;\\n                    f = pow(f, float(\" + options.border + \"));\\n                    myOutputColor = mix(myOutputColor, u_scanColor, f);\\n                  }\\n                }\\n                \";\n    }\n  }\n};\nexport {\n  Shaders\n};\n", "const withInstall = (comp) => {\n  comp.install = (app) => {\n    app.component(comp.name, comp);\n  };\n  return comp;\n};\nconst withInstallFunction = (fn, name) => {\n  fn.install = (app) => {\n    fn._context = app._context;\n    app.config.globalProperties[name] = fn;\n  };\n  return fn;\n};\nexport {\n  withInstall,\n  withInstallFunction\n};\n", "import _Button from \"./dlsButton.vue.mjs\";\nimport \"../../../utils/Shader/Shaders.mjs\";\nimport { withInstall } from \"../../../utils/withinstall/index.mjs\";\nconst DlsButton = withInstall(_Button);\nexport {\n  DlsButton,\n  DlsButton as default\n};\n", "import { defineComponent, ref, reactive, computed, onMounted, openBlock, createElementBlock, createBlock, createCommentVNode, nextTick } from \"vue\";\nimport \"./style/index.css\";\nimport { mapProps, mapEmits } from \"./types.mjs\";\nimport LoadingSpinner from \"./LoadingSpinner.vue.mjs\";\nconst _hoisted_1 = { key: 0 };\nconst _hoisted_2 = [\"id\"];\nconst __default__ = defineComponent({ name: \"dls-map\" });\nconst _sfc_main = /* @__PURE__ */ defineComponent({\n  ...__default__,\n  props: mapProps,\n  emits: mapEmits,\n  setup(__props, { expose: __expose, emit: __emit }) {\n    const props = __props;\n    const emits = __emit;\n    const mapConfig = props.mapConfig;\n    const viewer = ref(null);\n    const dataM = reactive({\n      isCesiumLoaded: false,\n      isClient: false\n    });\n    const containerId = computed(() => {\n      return (mapConfig == null ? void 0 : mapConfig.id) || \"cesiumContainer\";\n    });\n    const checkCesium = () => {\n      const checkInterval = setInterval(() => {\n        try {\n          if (Cesium) {\n            dataM.isCesiumLoaded = true;\n            nextTick(() => {\n              clearInterval(checkInterval);\n              initializeCesium();\n            });\n          }\n        } catch (error) {\n        }\n      }, 100);\n    };\n    const initializeCesium = () => {\n      if (mapConfig == null ? void 0 : mapConfig.defaultAccessToken) {\n        Cesium.Ion.defaultAccessToken = mapConfig.defaultAccessToken;\n      }\n      let viewerMap = new Cesium.Viewer(containerId.value, {\n        // 不显示基础图层选择器\n        baseLayerPicker: false,\n        // 不显示地址搜索栏\n        geocoder: false,\n        // 不显示动画控件（如播放、暂停按钮）\n        animation: false,\n        // 启用或禁用场景动画\n        shouldAnimate: true,\n        // 不显示返回主页按钮\n        homeButton: false,\n        // 场景模式设置为2D或3D，根据 `mapConfig.sceneMode` 来决定\n        sceneMode: (mapConfig == null ? void 0 : mapConfig.sceneModeNum) === 2 ? Cesium.SceneMode.SCENE2D : Cesium.SceneMode.SCENE3D,\n        // 不显示时间轴\n        timeline: false,\n        // 不显示全屏按钮\n        fullscreenButton: false,\n        // 允许切换2D/3D模式\n        scene3DOnly: false,\n        // 不显示2D/3D视图模式切换按钮\n        sceneModePicker: false,\n        // 不显示导航帮助信息\n        navigationInstructionsInitiallyVisible: false,\n        // 不显示导航帮助按钮\n        navigationHelpButton: false,\n        // 不显示选择指示器\n        selectionIndicator: false,\n        // 不显示信息窗口\n        infoBox: false,\n        // 不使用默认影像提供者\n        imageryProvider: false,\n        ...props.viewerConfig\n      });\n      var canvas = viewerMap.scene.canvas;\n      canvas.style.width = props.viewerWidth || \"100%\";\n      canvas.style.height = props.viewerHeight || \"100%\";\n      if ((mapConfig == null ? void 0 : mapConfig.defaultAccessToken) || (mapConfig == null ? void 0 : mapConfig.imageryProvider)) {\n        viewerMap.imageryLayers.addImageryProvider(\n          new Cesium.UrlTemplateImageryProvider(mapConfig == null ? void 0 : mapConfig.imageryProvider)\n        );\n      }\n      viewerMap.cesiumWidget.screenSpaceEventHandler.removeInputAction(\n        Cesium.ScreenSpaceEventType.LEFT_DOUBLE_CLICK\n      );\n      viewer.value = viewerMap;\n      emits(\"cesiumReady\", viewer.value);\n    };\n    onMounted(() => {\n      dataM.isClient = true;\n      checkCesium();\n    });\n    __expose({\n      dataM,\n      viewer\n    });\n    return (_ctx, _cache) => {\n      return dataM.isClient ? (openBlock(), createElementBlock(\"div\", _hoisted_1, [\n        dataM.isCesiumLoaded ? (openBlock(), createElementBlock(\"div\", {\n          key: 0,\n          id: containerId.value,\n          style: { \"position\": \"absolute\", \"width\": \"100%\", \"height\": \"100%\" },\n          class: \"dlsMapContainer\"\n        }, null, 8, _hoisted_2)) : (openBlock(), createBlock(LoadingSpinner, { key: 1 }))\n      ])) : createCommentVNode(\"\", true);\n    };\n  }\n});\nexport {\n  _sfc_main as default\n};\n", "const mapProps = {\n  mapConfig: {\n    type: Object\n    // required: true,\n  },\n  viewerConfig: {\n    type: Object\n    // required: false,\n  },\n  viewerWidth: {\n    type: String,\n    require: false\n  },\n  viewerHeight: {\n    type: String,\n    require: false\n  }\n};\nconst mapEmits = {\n  cesiumReady: (payload) => true\n};\nexport {\n  mapEmits,\n  mapProps\n};\n", "import { openBlock, createElementBlock } from \"vue\";\nimport \"./LoadingSpinner.vue2.mjs\";\nimport _export_sfc from \"../../../_virtual/_plugin-vue_export-helper.mjs\";\nconst _sfc_main = {\n  name: \"LoadingSpinner\"\n};\nconst _hoisted_1 = { class: \"loading-spinner\" };\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"div\", _hoisted_1, \"Loading...\");\n}\nconst LoadingSpinner = /* @__PURE__ */ _export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__scopeId\", \"data-v-1b657085\"]]);\nexport {\n  LoadingSpinner as default\n};\n", "import _sfc_main from \"./dlsMap.vue.mjs\";\nimport \"../../../utils/Shader/Shaders.mjs\";\nimport { withInstall } from \"../../../utils/withinstall/index.mjs\";\nconst DlsMap = withInstall(_sfc_main);\nexport {\n  DlsMap,\n  DlsMap as default\n};\n", "function useSwitchMap(data, viewer) {\n  if (!viewer) {\n    console.error(\"viewer is undefined\");\n    return false;\n  }\n  let imageryLayer = viewer.scene.imageryLayers;\n  try {\n    if (imageryLayer._layers && imageryLayer._layers.length) {\n      imageryLayer._layers.forEach((itemImgery) => {\n        if (itemImgery._imageryProvider && itemImgery._imageryProvider.url) {\n          imageryLayer.remove(itemImgery);\n        }\n      });\n    }\n  } catch (error) {\n    console.error(error);\n  }\n  if (data) {\n    viewer.imageryLayers.addImageryProvider(data);\n  }\n}\nexport {\n  useSwitchMap\n};\n", "import { reactive } from \"vue\";\nfunction useCesiumCoord() {\n  const coords = reactive({\n    longitude: \"0\",\n    //经度\n    latitude: \"0\",\n    //纬度\n    height: \"0\",\n    //视高\n    altitude: \"0\",\n    //海拔\n    cameraHeading: \"0\",\n    //方向\n    pitchDegrees: \"0\",\n    //俯仰角\n    zoomLevel: 0\n    //级别\n  });\n  function listenToMouseMovement(viewer = null) {\n    if (!viewer) {\n      console.error(\"viewer is undefined\");\n      return false;\n    }\n    if (viewer) {\n      let debounceTimeout = null;\n      const camera = viewer.camera;\n      const hander = new Cesium.ScreenSpaceEventHandler(viewer.scene.canvas);\n      hander.setInputAction(function(movement) {\n        const cartesian = viewer.camera.pickEllipsoid(\n          movement.endPosition,\n          viewer.scene.globe.ellipsoid\n        );\n        if (cartesian) {\n          if (debounceTimeout) {\n            clearTimeout(debounceTimeout);\n          }\n          debounceTimeout = setTimeout(() => {\n            const cartographic = Cesium.Cartographic.fromCartesian(cartesian);\n            coords.longitude = Cesium.Math.toDegrees(\n              cartographic.longitude\n            ).toFixed(6);\n            coords.latitude = Cesium.Math.toDegrees(\n              cartographic.latitude\n            ).toFixed(6);\n          }, 300);\n        }\n      }, Cesium.ScreenSpaceEventType.MOUSE_MOVE);\n      hander.setInputAction(function(movement) {\n        let pick = movement.position;\n        if (pick) {\n          let sceneMode = viewer.scene.mode;\n          if (sceneMode === Cesium.SceneMode.SCENE3D) {\n            let cartesianNew = viewer.scene.globe.pick(\n              viewer.camera.getPickRay(pick),\n              viewer.scene\n            );\n            if (cartesianNew) {\n              let cartographicPosition = Cesium.Cartographic.fromCartesian(cartesianNew);\n              coords.longitude = Cesium.Math.toDegrees(\n                cartographicPosition.longitude\n              ).toFixed(6);\n              coords.latitude = Cesium.Math.toDegrees(\n                cartographicPosition.latitude\n              ).toFixed(6);\n              let cartographic = viewer.scene.globe.ellipsoid.cartesianToCartographic(\n                cartesianNew\n              );\n              if (cartographic) {\n                coords.altitude = viewer.scene.globe.getHeight(cartographic).toFixed(2);\n              }\n            }\n          } else {\n            let cartesian = viewer.camera.pickEllipsoid(\n              pick,\n              viewer.scene.globe.ellipsoid\n            );\n            if (cartesian !== void 0) {\n              let cartographic = Cesium.Cartographic.fromCartesian(cartesian);\n              let longitude_num = Cesium.Math.toDegrees(cartographic.longitude);\n              let latitude_num = Cesium.Math.toDegrees(cartographic.latitude);\n              coords.longitude = longitude_num.toFixed(6);\n              coords.latitude = latitude_num.toFixed(6);\n            }\n          }\n        }\n      }, Cesium.ScreenSpaceEventType.LEFT_CLICK);\n      hander.setInputAction(function(wheelment) {\n        coords.height = viewer.camera.positionCartographic.height.toFixed(1);\n        let zoom = heightToZoom(\n          Math.ceil(viewer.camera.positionCartographic.height)\n        );\n        coords.zoomLevel = zoom;\n      }, Cesium.ScreenSpaceEventType.WHEEL);\n      viewer.scene.camera.moveEnd.addEventListener(function() {\n        let cameraDirection = camera.direction;\n        let cameraHeadingData = Cesium.Math.toDegrees(\n          Math.atan2(cameraDirection.y, cameraDirection.x)\n        );\n        coords.cameraHeading = ((cameraHeadingData + 360) % 360).toFixed(0);\n        let pitch = camera.pitch;\n        coords.pitchDegrees = Cesium.Math.toDegrees(pitch).toFixed(0);\n      });\n    }\n  }\n  function heightToZoom(height) {\n    let A = 40487.57;\n    let B = 7096758e-11;\n    let C = 91610.74;\n    let D = -40467.74;\n    return Math.round(D + (A - D) / (1 + Math.pow(height / C, B)));\n  }\n  return {\n    listenToMouseMovement,\n    coords\n  };\n}\nexport {\n  useCesiumCoord\n};\n", "function useCesiumFlyTo(viewer, target) {\n  if (!target[2]) target[2] = 1e6;\n  if (viewer) {\n    viewer.camera.flyTo({\n      destination: Cesium.Cartesian3.fromDegrees(\n        target[0],\n        target[1],\n        target[2]\n      )\n    });\n  }\n}\nfunction handlePitchDegrees(viewer, value) {\n  if (viewer) {\n    if (viewer.scene.mode === Cesium.SceneMode.SCENE3D) {\n      let scene = viewer.scene;\n      let camera = viewer.camera;\n      let position = camera.position.clone();\n      let heading = camera.heading;\n      let roll = camera.roll;\n      scene.camera.setView({\n        destination: position,\n        orientation: {\n          heading,\n          roll,\n          pitch: Cesium.Math.toRadians(value)\n        }\n      });\n    } else {\n      console.error(\"请先切换到三维地球模式！\");\n      return 1;\n    }\n  } else {\n    console.error(\"获取地图失败，请刷新重试！\");\n    return 2;\n  }\n}\nexport {\n  handlePitchDegrees,\n  useCesiumFlyTo\n};\n", "function isDOMElement(obj) {\n  return typeof obj === \"object\" && obj !== null && obj.nodeType && obj.nodeType === 1;\n}\nfunction useRemoveCesium(type = [\"all\"], viewer) {\n  if (!viewer) {\n    console.error(\"viewer is undefined\");\n    return false;\n  }\n  if (!type) type = [\"all\"];\n  if (viewer) {\n    type.forEach((item) => {\n      if (item === \"all\" || item === \"entities\") {\n        viewer.entities.removeAll();\n      }\n      if (item === \"all\" || item === \"echarts\") {\n        const children = viewer.container.childNodes;\n        const keyword = \"echarts\";\n        children.forEach((item2) => {\n          if (isDOMElement(item2)) {\n            if (item2.id.includes(keyword)) {\n              viewer.container.removeChild(item2);\n            }\n          }\n        });\n      }\n      if (item === \"all\" || item === \"divLabel\") {\n        const domDiv = document.querySelectorAll(\".cesium-divLabel\");\n        if (domDiv && domDiv.length) {\n          document.querySelectorAll(\".cesium-divLabel\").forEach((A) => A.remove());\n        }\n      }\n      if (item === \"all\" || item === \"dataSources\") {\n        viewer.dataSources.removeAll();\n      }\n      if (item === \"all\" || item === \"imageryLayers\") {\n        const imageryLayers = viewer.imageryLayers;\n        let obj = imageryLayers._layers;\n        for (let i = obj.length - 1; i > 0; i--) {\n          if (imageryLayers.indexOf(obj[i]) > 0) {\n            imageryLayers.remove(obj[i], false);\n          }\n        }\n      }\n      if (item === \"all\" || item === \"primitives\") {\n        const primitives = viewer.scene.primitives._primitives;\n        if (primitives && primitives.length) {\n          primitives.forEach((item2) => {\n            if (!item2.destroyPrimitives) {\n              viewer.scene.primitives.remove(item2);\n            }\n          });\n        }\n      }\n      if (item === \"all\" || item === \"PostProcessStage\") {\n        viewer.scene.postProcessStages.removeAll(true);\n      }\n    });\n  }\n}\nfunction clearEntityByname(name, viewer) {\n  if (!viewer) {\n    console.error(\"viewer is undefined\");\n    return false;\n  }\n  let entityArr = viewer.entities.values;\n  let CentityArr = entityArr.filter((v) => {\n    if (v.name === name) {\n      return v;\n    }\n  });\n  let len = CentityArr.length;\n  while (len--) {\n    viewer.entities.remove(CentityArr[len]);\n  }\n}\nexport {\n  clearEntityByname,\n  useRemoveCesium\n};\n", "function useSwitchViewPoint(viewType, viewer) {\n  if (!viewer) {\n    console.error(\"viewer is undefined\");\n    return false;\n  }\n  var scene = viewer.scene;\n  switch (viewType) {\n    case \"3d\":\n      scene.morphTo3D(0);\n      break;\n    case \"2d\":\n      scene.morphTo2D(0);\n      break;\n    case \"2.5d\":\n      scene.morphToColumbusView(0);\n      break;\n  }\n}\nexport {\n  useSwitchViewPoint\n};\n", "function isInRange(lon, lat, range) {\n  const [minLon, maxLon, minLat, maxLat] = range;\n  return lon >= minLon && lon <= maxLon && lat >= minLat && lat <= maxLat;\n}\nfunction findRange(lon, lat, ranges) {\n  for (const rangeObj of ranges) {\n    if (isInRange(lon, lat, rangeObj.range)) {\n      return rangeObj;\n    }\n  }\n  return null;\n}\nfunction useLoadTerrain(terrainAry, height = 1e6, viewer) {\n  if (!terrainAry.length) return false;\n  if (!viewer) {\n    console.error(\"viewer is undefined\");\n    return false;\n  }\n  if (viewer.scene.mode === Cesium.SceneMode.SCENE3D) {\n    let globalTerrain = terrainAry.filter((item) => item.type === \"global\");\n    if (globalTerrain && globalTerrain.length) {\n      const terrainProvider = new Cesium.CesiumTerrainProvider({\n        url: globalTerrain[0].url\n      });\n      viewer.terrainProvider = terrainProvider;\n    }\n    let hasReturneRange = false;\n    let hasExecutedOtherMethod = false;\n    let regionTerrain = terrainAry.filter((item) => item.type === \"region\");\n    if (regionTerrain && regionTerrain.length) {\n      viewer.camera.changed.addEventListener(function() {\n        let cameraPosition = viewer.camera.positionCartographic;\n        let latitude = Cesium.Math.toDegrees(cameraPosition.latitude);\n        let longitude = Cesium.Math.toDegrees(cameraPosition.longitude);\n        let heightCam = cameraPosition.height;\n        if (!hasReturneRange) {\n          let matcheRange = findRange(longitude, latitude, regionTerrain);\n          if (matcheRange && heightCam < height) {\n            hasReturneRange = true;\n            hasExecutedOtherMethod = false;\n            const terrainProvider = new Cesium.CesiumTerrainProvider({\n              url: matcheRange.url\n            });\n            viewer.terrainProvider = terrainProvider;\n          }\n        } else if (!hasExecutedOtherMethod && heightCam > height) {\n          if (globalTerrain && globalTerrain.length) {\n            const terrainProvider = new Cesium.CesiumTerrainProvider({\n              url: globalTerrain[0].url\n            });\n            viewer.terrainProvider = terrainProvider;\n          }\n          hasExecutedOtherMethod = true;\n          hasReturneRange = false;\n        }\n      });\n    }\n  }\n}\nexport {\n  useLoadTerrain\n};\n", "function DrawSoildLine(viewer, names, color, width) {\n  if (!viewer) {\n    console.error(\"viewer is undefined\");\n    return false;\n  }\n  let distance = 0;\n  var layerLine = void 0;\n  let lineEntityCollection = new Cesium.CustomDataSource(\"measureLine\");\n  viewer.dataSources.add(lineEntityCollection);\n  document.body.style.cursor = \"crosshair\";\n  var handler = new Cesium.ScreenSpaceEventHandler(viewer.scene.canvas);\n  let option = {\n    name: names,\n    color: color ? Cesium.Color.fromBytes(...color) : Cesium.Color.RED,\n    width\n  };\n  var layer = new Cesium.CustomDataSource(\"MyLines\");\n  viewer.dataSources.add(layer);\n  var activeShapePoints = [], activeShape = void 0;\n  handler.setInputAction((click) => {\n    const earthPosition = getPosition(viewer, click.position);\n    if (Cesium.defined(earthPosition)) {\n      if (activeShapePoints.length === 0) {\n        activeShapePoints.push(earthPosition);\n        const dynamicPositions = new Cesium.CallbackProperty(() => {\n          return activeShapePoints;\n        }, false);\n        activeShape = drawLine(layer, dynamicPositions, option);\n      }\n      activeShapePoints.push(earthPosition);\n      try {\n        if (lineEntityCollection) {\n          let textDisance = distance + \"米\";\n          lineEntityCollection.entities.add({\n            name: \"空间直线距离\",\n            position: activeShapePoints[activeShapePoints.length - 1],\n            point: {\n              pixelSize: 5,\n              color: Cesium.Color.RED,\n              outlineColor: Cesium.Color.WHITE,\n              outlineWidth: 2\n            },\n            label: {\n              text: textDisance,\n              font: \"18px sans-serif\",\n              fillColor: Cesium.Color.GOLD,\n              style: Cesium.LabelStyle.FILL_AND_OUTLINE,\n              outlineWidth: 2,\n              verticalOrigin: Cesium.VerticalOrigin.BOTTOM,\n              pixelOffset: new Cesium.Cartesian2(20, -20)\n            }\n          });\n        }\n      } catch (error) {\n        console.log(`errorerror`, error);\n      }\n    }\n  }, Cesium.ScreenSpaceEventType.LEFT_CLICK);\n  handler.setInputAction((move) => {\n    if (activeShapePoints.length >= 2) {\n      const earthPosition = getPosition(viewer, move.endPosition);\n      if (Cesium.defined(earthPosition)) {\n        activeShapePoints.pop();\n        activeShapePoints.push(earthPosition);\n      }\n      distance = getSpaceDistance(activeShapePoints);\n    }\n  }, Cesium.ScreenSpaceEventType.MOUSE_MOVE);\n  handler.setInputAction((click) => {\n    handler.removeInputAction(Cesium.ScreenSpaceEventType.MOUSE_MOVE);\n    activeShapePoints.pop();\n    layer.entities.remove(activeShape);\n    layerLine = drawLine(layer, activeShapePoints, option);\n    document.body.style.cursor = \"default\";\n    setTimeout(() => {\n      activeShapePoints = [];\n      handler.removeInputAction(Cesium.ScreenSpaceEventType.LEFT_CLICK);\n      handler.removeInputAction(Cesium.ScreenSpaceEventType.LEFT_DOUBLE_CLICK);\n      handler = handler && handler.destroy();\n    }, 500);\n  }, Cesium.ScreenSpaceEventType.LEFT_DOUBLE_CLICK);\n  return layerLine;\n}\nfunction getPosition(viewer, position) {\n  let earthPosition = void 0;\n  if (viewer.terrainProvider instanceof Cesium.EllipsoidTerrainProvider) {\n    earthPosition = viewer.scene.camera.pickEllipsoid(position);\n  } else {\n    const ray = viewer.camera.getPickRay(position);\n    earthPosition = viewer.scene.globe.pick(ray, viewer.scene);\n  }\n  return earthPosition;\n}\nfunction drawLine(layer, positionData, option) {\n  return layer.entities.add({\n    name: option.name,\n    polyline: {\n      positions: positionData,\n      clampToGround: true,\n      width: option.width,\n      material: option.color\n    }\n  });\n}\nfunction removeDrawLine(viewer) {\n  if (!viewer) {\n    console.error(\"viewer is undefined\");\n    return false;\n  }\n  viewer.dataSources.removeAll();\n}\nfunction getSpaceDistance(positions) {\n  let distance = 0;\n  for (let i = 0; i < positions.length - 1; i++) {\n    let point1cartographic = Cesium.Cartographic.fromCartesian(positions[i]);\n    let point2cartographic = Cesium.Cartographic.fromCartesian(\n      positions[i + 1]\n    );\n    let geodesic = new Cesium.EllipsoidGeodesic();\n    geodesic.setEndPoints(point1cartographic, point2cartographic);\n    let s = geodesic.surfaceDistance;\n    s = Math.sqrt(\n      Math.pow(s, 2) + Math.pow(point2cartographic.height - point1cartographic.height, 2)\n    );\n    distance = distance + s;\n  }\n  return distance.toFixed(2);\n}\nexport {\n  DrawSoildLine,\n  removeDrawLine\n};\n", "function addBillboard(lon, lat, imgUrl, {\n  name = \"Point\",\n  width,\n  height,\n  scale,\n  click = true,\n  shengClick = false,\n  doubleClickHeight = 5e3,\n  attribute = {},\n  popContent,\n  pointHeight,\n  doubleClickPitch = -90\n}, viewer) {\n  let h = pointHeight ? pointHeight : 0;\n  if (!viewer) {\n    console.error(\"viewer is undefined\");\n    return false;\n  }\n  let entity = viewer.entities.add({\n    name,\n    position: Cesium.Cartesian3.fromDegrees(lon, lat, h),\n    billboard: {\n      image: imgUrl,\n      width,\n      height,\n      scale,\n      verticalOrigin: Cesium.VerticalOrigin.BOTTOM,\n      HorizontalOrigin: Cesium.HorizontalOrigin.CENTER\n    },\n    attribute,\n    click,\n    shengClick,\n    doubleClickHeight,\n    lon,\n    lat,\n    popContent,\n    doubleClickPitch\n  });\n  return entity;\n}\nfunction addLine(positions, material, viewer, { name = \"Line\", width = 3 }) {\n  if (!viewer) {\n    console.error(\"viewer is undefined\");\n    return false;\n  }\n  let entity = viewer.entities.add({\n    name,\n    polyline: {\n      positions: Cesium.Cartesian3.fromDegreesArray(positions),\n      width,\n      material\n    }\n  });\n  return entity;\n}\nfunction addCircle(longitude, latitude, radius, color, viewer, name = \"Circle\") {\n  if (!viewer) {\n    console.error(\"viewer is undefined\");\n    return false;\n  }\n  let entity = viewer.entities.add({\n    position: Cesium.Cartesian3.fromDegrees(longitude, latitude),\n    ellipse: {\n      semiMinorAxis: radius,\n      semiMajorAxis: radius,\n      material: new Cesium.ColorMaterialProperty(\n        Cesium.Color.fromCssColorString(color)\n      )\n    }\n  });\n  return entity;\n}\nfunction addWall(viewer, positions, hexColor, alpha, MaterialIndex, maximumHeights = [], minimumHeights = []) {\n  if (!viewer) {\n    console.error(\"viewer is undefined\");\n    return false;\n  }\n  let wallGeometry = null;\n  if (maximumHeights.length && minimumHeights.length) {\n    wallGeometry = new Cesium.WallGeometry({\n      positions: Cesium.Cartesian3.fromDegreesArrayHeights(positions),\n      maximumHeights,\n      minimumHeights\n    });\n  } else {\n    wallGeometry = new Cesium.WallGeometry({\n      positions: Cesium.Cartesian3.fromDegreesArrayHeights(positions)\n    });\n  }\n  const wallGeometryInstance = new Cesium.GeometryInstance({\n    geometry: wallGeometry,\n    attributes: {\n      color: Cesium.ColorGeometryInstanceAttribute.fromColor(\n        Cesium.Color.WHITE\n      )\n    }\n  });\n  let areaFabric = null;\n  if (MaterialIndex === 1) {\n    areaFabric = {\n      type: \"Wave\",\n      uniforms: {\n        color: Cesium.Color.fromCssColorString(hexColor).withAlpha(alpha),\n        // 波动颜色\n        time: 0\n        // 初始时间\n      },\n      source: `\n        czm_material czm_getMaterial(czm_materialInput materialInput) {\n            czm_material material = czm_getDefaultMaterial(materialInput);\n            vec2 st = materialInput.st;\n            float time = czm_frameNumber / 60.0; // 动态时间\n            float wave = sin((st.s + st.t) * 10.0 + time * 4.0); // 波动公式\n            material.diffuse = color.rgb;\n            material.alpha = color.a * abs(wave);\n            return material;\n        }`\n    };\n  } else if (MaterialIndex === 2) {\n    areaFabric = {\n      type: \"Blinking\",\n      uniforms: {\n        color: Cesium.Color.fromCssColorString(hexColor).withAlpha(alpha),\n        // 基础颜色\n        time: 0\n        // 动态时间\n      },\n      source: `\n        czm_material czm_getMaterial(czm_materialInput materialInput) {\n            czm_material material = czm_getDefaultMaterial(materialInput);\n            float alpha = abs(sin(czm_frameNumber / 60.0)); // 闪烁效果\n            material.diffuse = color.rgb;\n            material.alpha = color.a * alpha;\n            return material;\n        }`\n    };\n  } else if (MaterialIndex === 3) {\n    areaFabric = {\n      type: \"Gradient\",\n      uniforms: {\n        color: Cesium.Color.fromCssColorString(hexColor).withAlpha(alpha)\n        // 渐变颜色\n      },\n      source: `\n        czm_material czm_getMaterial(czm_materialInput materialInput) {\n            czm_material material = czm_getDefaultMaterial(materialInput);\n            vec2 st = materialInput.st;\n            material.diffuse = color.rgb * st.t; // 渐变效果\n            material.alpha = color.a;\n            return material;\n        }`\n    };\n  } else if (MaterialIndex === 4) {\n    areaFabric = {\n      type: \"MovingStripe\",\n      uniforms: {\n        color: Cesium.Color.fromCssColorString(hexColor).withAlpha(alpha),\n        repeat: 10,\n        // 条纹重复次数\n        speed: 2,\n        // 条纹移动速度\n        time: 0\n        // 动态时间\n      },\n      source: `\n        czm_material czm_getMaterial(czm_materialInput materialInput) {\n            czm_material material = czm_getDefaultMaterial(materialInput);\n            vec2 st = materialInput.st;\n            float time = czm_frameNumber / 60.0 * speed;\n            float stripe = abs(sin(st.s * repeat + time));\n            material.diffuse = color.rgb * stripe;\n            material.alpha = color.a * stripe;\n            return material;\n        }`\n    };\n  }\n  const wallPrimitive = new Cesium.Primitive({\n    geometryInstances: wallGeometryInstance,\n    appearance: new Cesium.MaterialAppearance({\n      material: new Cesium.Material({\n        fabric: areaFabric\n      }),\n      translucent: true\n    }),\n    asynchronous: false\n  });\n  viewer.scene.primitives.add(wallPrimitive);\n  viewer.camera.setView({\n    destination: Cesium.Cartesian3.fromDegrees(-115, 37, 2e6)\n  });\n}\nexport {\n  addBillboard,\n  addCircle,\n  addLine,\n  addWall\n};\n", "class DlsDivLabel {\n  constructor(val) {\n    if (val) {\n      this.viewer = val.viewer;\n      this.height = val.height;\n      this.position = Cesium.Cartesian3.fromDegrees(\n        val.position[0],\n        val.position[1],\n        val.height\n      );\n      this.layerData = val;\n      this.vmInstance = typeof val.dom === \"string\" ? this.createDom(val.dom) : val.dom;\n      this.dId = val.id ? val.id : void 0;\n      this.className = val.className ? val.className : void 0;\n      this.offset = val.offset;\n      this.type = val.type;\n      if (!this.vmInstance || !this.vmInstance.style) {\n        throw new Error(\"Not passing available Dom\");\n      }\n      this.initDom();\n      this.show = true;\n      val.viewer.cesiumWidget.container.appendChild(this.vmInstance);\n      this.addPostRender();\n    }\n  }\n  createDom(html) {\n    const el = document.createElement(\"div\");\n    el.innerHTML = html;\n    return el;\n  }\n  initDom() {\n    if (this.className) {\n      this.vmInstance.classList.add(this.className);\n    }\n    if (this.dId) this.vmInstance.id = \"divLabel\" + this.dId;\n    this.vmInstance.style.position = \"absolute\";\n    this.vmInstance.style.zIndex = \"5\";\n    this.vmInstance.addEventListener(\"click\", () => {\n    });\n    if (!this.vmInstance.classList.contains(\"cesium-divLabel\")) {\n      this.vmInstance.classList.add(\"cesium-divLabel\");\n    }\n  }\n  setDom(dom) {\n    if (dom instanceof HTMLElement) {\n      this.vmInstance.remove();\n      this.vmInstance = dom;\n      this.initDom();\n    } else {\n      this.vmInstance.innerHTML = dom;\n    }\n  }\n  addPostRender() {\n    this.viewer.scene.postRender.addEventListener(this.postRender.bind(this));\n    this._render = this.postRender.bind(this);\n  }\n  postRender() {\n    if (!this.vmInstance || !this.vmInstance.style) return;\n    if (this.vmInstance.style.zIndex === \"-1\") return;\n    const is3D = this.viewer.scene.mode === Cesium.SceneMode.SCENE3D;\n    const is2D = this.viewer.scene.mode === Cesium.SceneMode.SCENE2D;\n    let p_2d;\n    if (is3D) {\n      p_2d = this.viewer.scene.cartesianToCanvasCoordinates(this.position);\n    } else if (is2D) {\n      p_2d = Cesium.SceneTransforms.wgs84ToWindowCoordinates(\n        this.viewer.scene,\n        this.position\n      );\n    }\n    if (p_2d) {\n      if (this.offset) {\n        if (this.type && this.type === \"LayerPointTime\") {\n          this.vmInstance.style.top = p_2d.y + \"px\";\n          this.vmInstance.style.left = p_2d.x + this.offset[0] + \"px\";\n        } else {\n          this.vmInstance.style.top = p_2d.y + this.offset[1] + \"px\";\n          const elWidth = this.vmInstance.offsetWidth;\n          this.vmInstance.style.left = p_2d.x - elWidth / 2 + this.offset[0] + \"px\";\n        }\n      } else {\n        this.vmInstance.style.top = p_2d.y + \"px\";\n        const elWidth = this.vmInstance.offsetWidth;\n        this.vmInstance.style.left = p_2d.x - elWidth / 2 + \"px\";\n      }\n      const camerPosition = this.viewer.camera.position;\n      let height = this.viewer.scene.globe.ellipsoid.cartesianToCartographic(\n        camerPosition\n      ).height;\n      height += this.viewer.scene.globe.ellipsoid.maximumRadius;\n      if (!(Cesium.Cartesian3.distance(camerPosition, this.position) > height) && this.viewer.camera.positionCartographic.height < 5e7) {\n        this.vmInstance.style.display = \"block\";\n      } else {\n        this.vmInstance.style.display = \"none\";\n      }\n    }\n  }\n  changePosition(position) {\n    if (position.length === 2) {\n      this.position = Cesium.Cartesian3.fromDegrees(\n        position[0],\n        position[1],\n        this.height\n      );\n    }\n    return this;\n  }\n  removeAllDiv(id) {\n    document.querySelectorAll(id).forEach((A) => A.remove());\n  }\n}\nexport {\n  DlsDivLabel as default\n};\n", "class EventDispatcher {\n  constructor() {\n    this.listeners = /* @__PURE__ */ new Map([\n      [\"drawStart\", /* @__PURE__ */ new Set()],\n      [\"drawUpdate\", /* @__PURE__ */ new Set()],\n      [\"drawEnd\", /* @__PURE__ */ new Set()],\n      [\"editStart\", /* @__PURE__ */ new Set()],\n      [\"editEnd\", /* @__PURE__ */ new Set()]\n    ]);\n  }\n  on(event, listener) {\n    if (!this.listeners.has(event)) {\n      console.warn(\"Event binding must be one of 'drawStart', 'drawUpdate', or 'drawEnd'.\");\n      return;\n    }\n    this.listeners.get(event).add(listener);\n  }\n  off(event, listener) {\n    if (this.listeners.has(event)) {\n      this.listeners.get(event).delete(listener);\n    }\n  }\n  dispatchEvent(event, eventData) {\n    if (this.listeners.has(event)) {\n      this.listeners.get(event).forEach((listener) => {\n        listener(eventData);\n      });\n    }\n  }\n}\nexport {\n  EventDispatcher as default\n};\n", "import EventDispatcher from \"./events.mjs\";\nimport cloneDeep from \"/Users/kangshuolei/Desktop/code/dls-map/node_modules/.pnpm/lodash.clonedeep@4.5.0/node_modules/lodash.clonedeep/index.js\";\nimport { getCurvePoints } from \"./utils.mjs\";\nclass Base {\n  constructor(cesium, viewer, style) {\n    this.geometryPoints = [];\n    this.state = \"drawing\";\n    this.controlPoints = [];\n    this.entityId = \"\";\n    this.points = [];\n    this.minPointsForShape = 0;\n    this.cesium = cesium;\n    this.viewer = viewer;\n    this.type = this.getType();\n    this.mergeStyle(style);\n    this.cartesianToLnglat = this.cartesianToLnglat.bind(this);\n    this.pixelToCartesian = this.pixelToCartesian.bind(this);\n    this.eventDispatcher = new EventDispatcher();\n    viewer.trackedEntity = void 0;\n    viewer.cesiumWidget.screenSpaceEventHandler.removeInputAction(\n      this.cesium.ScreenSpaceEventType.LEFT_DOUBLE_CLICK\n    );\n    this.onClick();\n  }\n  mergeStyle(style) {\n    if (this.type === \"polygon\") {\n      this.style = Object.assign(\n        {\n          material: new this.cesium.Color(),\n          outlineMaterial: new this.cesium.Color(),\n          outlineWidth: 2\n        },\n        style\n      );\n    } else if (this.type === \"line\") {\n      this.style = Object.assign(\n        {\n          material: new this.cesium.Color(),\n          lineWidth: 2\n        },\n        style\n      );\n    } else if (this.type === \"point\") {\n      this.style = Object.assign(\n        {\n          pixelSize: 10,\n          heightReference: this.cesium.HeightReference.CLAMP_TO_GROUND,\n          color: this.cesium.Color.RED\n        },\n        style\n      );\n    }\n    this.styleCache = cloneDeep(this.style);\n  }\n  /**\n   * Base Class提供了更改状态的方法，并根据状态实现不同的逻辑。\n   * 状态由各个子组件根据实际情况进行控制。\n   * @param State\n   */\n  setState(state) {\n    this.state = state;\n  }\n  getState() {\n    return this.state;\n  }\n  /**\n   * 绑定根据状态而做出不同响应的全局单击事件。当处于绘图状态时，\n   * 单击即可为几何形状添加点。在编辑过程中，选择绘制的形状将其置于\n   * 可编辑状态。单击空白将其设置为静态状态。\n   */\n  onClick() {\n    this.eventHandler = new this.cesium.ScreenSpaceEventHandler(\n      this.viewer.canvas\n    );\n    this.eventHandler.setInputAction((evt) => {\n      const pickedObject = this.viewer.scene.pick(evt.position);\n      const hitEntities = this.cesium.defined(pickedObject) && pickedObject.id instanceof this.cesium.Entity;\n      let activeEntity = this.polygonEntity;\n      if (this.type === \"line\") {\n        activeEntity = this.lineEntity;\n      }\n      if (this.type === \"point\") {\n        activeEntity = this.pointEntity;\n      }\n      if (this.state === \"drawing\") {\n        const cartesian = this.pixelToCartesian(evt.position);\n        const points = this.getPoints();\n        if (!cartesian) {\n          return;\n        }\n        if (!this.freehand && points.length > 0 && !this.checkDistance(cartesian, points[points.length - 1])) {\n          return;\n        }\n        this.addPoint(cartesian);\n        if (this.getPoints().length === 1) {\n          this.eventDispatcher.dispatchEvent(\"drawStart\");\n        }\n        this.eventDispatcher.dispatchEvent(\"drawUpdate\", cartesian);\n      } else if (this.state === \"edit\") {\n        if (!hitEntities || activeEntity.id !== pickedObject.id.id) {\n          this.setState(\"static\");\n          this.type !== \"point\" ? this.removeControlPoints() : null;\n          this.disableDrag();\n          this.eventDispatcher.dispatchEvent(\"editEnd\", this.getPoints());\n        }\n      } else if (this.state === \"static\") {\n        try {\n          if (hitEntities && activeEntity.id === pickedObject.id.id) {\n            const pickedGraphics = this.type === \"line\" ? pickedObject.id.polyline : this.type === \"polygon\" ? pickedObject.id.polygon : pickedObject.id.point;\n            if (this.cesium.defined(pickedGraphics)) {\n              this.setState(\"edit\");\n              this.type !== \"point\" ? this.addControlPoints() : null;\n              this.draggable();\n              this.eventDispatcher.dispatchEvent(\"editStart\");\n            }\n          }\n        } catch (e) {\n          console.log(\"eeee\", e);\n        }\n      }\n    }, this.cesium.ScreenSpaceEventType.LEFT_CLICK);\n  }\n  onMouseMove() {\n    this.eventHandler.setInputAction((evt) => {\n      const points = this.getPoints();\n      const cartesian = this.pixelToCartesian(evt.endPosition);\n      if (!cartesian) {\n        return;\n      }\n      if (this.checkDistance(cartesian, points[points.length - 1])) {\n        this.updateMovingPoint(cartesian, points.length);\n      }\n    }, this.cesium.ScreenSpaceEventType.MOUSE_MOVE);\n  }\n  onDoubleClick() {\n    this.eventHandler.setInputAction((evt) => {\n      if (this.state === \"drawing\") {\n        this.finishDrawing();\n      }\n    }, this.cesium.ScreenSpaceEventType.LEFT_DOUBLE_CLICK);\n  }\n  /**\n   * 检查两点之间的距离是否大于10米。\n   */\n  checkDistance(cartesian1, cartesian2) {\n    const distance = this.cesium.Cartesian3.distance(cartesian1, cartesian2);\n    return distance > 10;\n  }\n  finishDrawing() {\n    this.type === \"polygon\" && this.lineEntity && this.viewer.entities.remove(this.lineEntity);\n    this.removeMoveListener();\n    this.setState(\"edit\");\n    this.type !== \"point\" ? this.addControlPoints() : null;\n    this.draggable();\n    const entity = this.polygonEntity || this.lineEntity || this.pointEntity;\n    this.entityId = entity.id;\n    this.eventDispatcher.dispatchEvent(\"drawEnd\", this.getPoints());\n  }\n  removeClickListener() {\n    this.eventHandler.removeInputAction(\n      this.cesium.ScreenSpaceEventType.LEFT_CLICK\n    );\n  }\n  removeMoveListener() {\n    this.eventHandler.removeInputAction(\n      this.cesium.ScreenSpaceEventType.MOUSE_MOVE\n    );\n  }\n  removeDoubleClickListener() {\n    this.eventHandler.removeInputAction(\n      this.cesium.ScreenSpaceEventType.LEFT_DOUBLE_CLICK\n    );\n  }\n  setGeometryPoints(geometryPoints) {\n    this.geometryPoints = geometryPoints;\n  }\n  getGeometryPoints() {\n    return this.geometryPoints;\n  }\n  drawPolygon() {\n    const callback = () => {\n      return new this.cesium.PolygonHierarchy(this.geometryPoints);\n    };\n    if (!this.polygonEntity) {\n      const style = this.style;\n      this.polygonEntity = this.viewer.entities.add({\n        polygon: new this.cesium.PolygonGraphics({\n          hierarchy: new this.cesium.CallbackProperty(callback, false),\n          show: true,\n          material: style.material\n        })\n      });\n      this.outlineEntity = this.viewer.entities.add({\n        polyline: {\n          positions: new this.cesium.CallbackProperty(() => {\n            return [...this.geometryPoints, this.geometryPoints[0]];\n          }, false),\n          width: style.outlineWidth,\n          material: style.outlineMaterial,\n          clampToGround: true\n        }\n      });\n    }\n  }\n  drawLine() {\n    if (!this.lineEntity) {\n      const style = this.style;\n      this.lineEntity = this.addLineEntity(style);\n    }\n  }\n  drawPoint() {\n    if (!this.pointEntity) {\n      const points = this.getPoints();\n      const style = this.style;\n      this.pointEntity = this.viewer.entities.add({\n        position: points[0],\n        point: {\n          pixelSize: style.pixelSize,\n          heightReference: style.heightReference,\n          color: style.color\n        }\n      });\n    }\n  }\n  addTempLine() {\n    if (!this.tempLineEntity) {\n      const style = this.style;\n      const lineStyle = {\n        material: style.outlineMaterial,\n        lineWidth: style.outlineWidth\n      };\n      this.tempLineEntity = this.addLineEntity(lineStyle);\n    }\n  }\n  removeTempLine() {\n    if (this.tempLineEntity) {\n      this.viewer.entities.remove(this.tempLineEntity);\n    }\n  }\n  addLineEntity(style) {\n    const entity = this.viewer.entities.add({\n      polyline: {\n        positions: new this.cesium.CallbackProperty(\n          () => this.geometryPoints,\n          false\n        ),\n        width: style.lineWidth,\n        material: style.material,\n        clampToGround: true\n      }\n    });\n    return entity;\n  }\n  cartesianToLnglat(cartesian) {\n    const lnglat = this.viewer.scene.globe.ellipsoid.cartesianToCartographic(cartesian);\n    const lat = this.cesium.Math.toDegrees(lnglat.latitude);\n    const lng = this.cesium.Math.toDegrees(lnglat.longitude);\n    return [lng, lat];\n  }\n  pixelToCartesian(position) {\n    const ray = this.viewer.camera.getPickRay(position);\n    const cartesian = this.viewer.scene.globe.pick(ray, this.viewer.scene);\n    return cartesian;\n  }\n  /**\n   *  创建形状时显示关键点，允许拖动这些点来编辑和生成新形状。\n   */\n  addControlPoints() {\n    const points = this.getPoints();\n    this.controlPoints = points.map((position) => {\n      return this.viewer.entities.add({\n        position,\n        point: {\n          pixelSize: 10,\n          heightReference: this.cesium.HeightReference.CLAMP_TO_GROUND,\n          color: this.cesium.Color.RED\n        }\n      });\n    });\n    let isDragging = false;\n    let draggedIcon = null;\n    let dragStartPosition;\n    this.controlPointsEventHandler = new this.cesium.ScreenSpaceEventHandler(\n      this.viewer.canvas\n    );\n    this.controlPointsEventHandler.setInputAction((clickEvent) => {\n      const pickedObject = this.viewer.scene.pick(clickEvent.position);\n      if (this.cesium.defined(pickedObject)) {\n        for (let i = 0; i < this.controlPoints.length; i++) {\n          if (pickedObject.id._id === this.controlPoints[i]._id) {\n            isDragging = true;\n            draggedIcon = this.controlPoints[i];\n            dragStartPosition = draggedIcon.position._value;\n            draggedIcon.index = i;\n            break;\n          }\n        }\n        this.viewer.scene.screenSpaceCameraController.enableRotate = false;\n      }\n    }, this.cesium.ScreenSpaceEventType.LEFT_DOWN);\n    this.controlPointsEventHandler.setInputAction((moveEvent) => {\n      if (isDragging && draggedIcon) {\n        const cartesian = this.viewer.camera.pickEllipsoid(\n          moveEvent.endPosition,\n          this.viewer.scene.globe.ellipsoid\n        );\n        if (cartesian) {\n          draggedIcon.position.setValue(cartesian);\n          this.updateDraggingPoint(cartesian, draggedIcon.index);\n        }\n      }\n    }, this.cesium.ScreenSpaceEventType.MOUSE_MOVE);\n    this.controlPointsEventHandler.setInputAction(() => {\n      if (draggedIcon && !this.cesium.Cartesian3.equals(\n        dragStartPosition,\n        draggedIcon.position._value\n      )) {\n        this.eventDispatcher.dispatchEvent(\n          \"drawUpdate\",\n          draggedIcon.position._value\n        );\n      }\n      isDragging = false;\n      draggedIcon = null;\n      this.viewer.scene.screenSpaceCameraController.enableRotate = true;\n    }, this.cesium.ScreenSpaceEventType.LEFT_UP);\n  }\n  removeControlPoints() {\n    if (this.controlPoints.length > 0) {\n      this.controlPoints.forEach((entity) => {\n        this.viewer.entities.remove(entity);\n      });\n      this.controlPointsEventHandler.removeInputAction(\n        this.cesium.ScreenSpaceEventType.LEFT_DOWN\n      );\n      this.controlPointsEventHandler.removeInputAction(\n        this.cesium.ScreenSpaceEventType.MOUSE_MOVE\n      );\n      this.controlPointsEventHandler.removeInputAction(\n        this.cesium.ScreenSpaceEventType.LEFT_UP\n      );\n    }\n  }\n  /**\n   *  在编辑模式下允许拖动整个形状。\n   */\n  draggable() {\n    let dragging = false;\n    let startPosition;\n    this.dragEventHandler = new this.cesium.ScreenSpaceEventHandler(\n      this.viewer.canvas\n    );\n    this.dragEventHandler.setInputAction((event) => {\n      const pickRay = this.viewer.scene.camera.getPickRay(event.position);\n      if (pickRay) {\n        const cartesian = this.viewer.scene.globe.pick(\n          pickRay,\n          this.viewer.scene\n        );\n        const pickedObject = this.viewer.scene.pick(event.position);\n        if (this.cesium.defined(pickedObject) && pickedObject.id instanceof this.cesium.Entity) {\n          const clickedEntity = pickedObject.id;\n          if (this.isCurrentEntity(clickedEntity.id)) {\n            dragging = true;\n            startPosition = cartesian;\n            this.viewer.scene.screenSpaceCameraController.enableRotate = false;\n          }\n        }\n      }\n    }, this.cesium.ScreenSpaceEventType.LEFT_DOWN);\n    this.dragEventHandler.setInputAction((event) => {\n      var _a, _b;\n      if (dragging && startPosition) {\n        const newPosition = this.pixelToCartesian(event.endPosition);\n        if (newPosition) {\n          const translation = this.cesium.Cartesian3.subtract(\n            newPosition,\n            startPosition,\n            new this.cesium.Cartesian3()\n          );\n          if (this.type === \"point\") {\n            const position = (_a = this.pointEntity.position) == null ? void 0 : _a.getValue(\n              this.cesium.JulianDate.now()\n            );\n            const newPosition2 = this.cesium.Cartesian3.add(\n              position,\n              translation,\n              new this.cesium.Cartesian3()\n            );\n            (_b = this.pointEntity.position) == null ? void 0 : _b.setValue(newPosition2);\n          }\n          const newPoints = this.geometryPoints.map((p) => {\n            return this.cesium.Cartesian3.add(\n              p,\n              translation,\n              new this.cesium.Cartesian3()\n            );\n          });\n          this.points = this.points.map((p) => {\n            return this.cesium.Cartesian3.add(\n              p,\n              translation,\n              new this.cesium.Cartesian3()\n            );\n          });\n          this.controlPoints.map((p) => {\n            var _a2, _b2;\n            const position = (_a2 = p.position) == null ? void 0 : _a2.getValue(this.cesium.JulianDate.now());\n            const newPosition2 = this.cesium.Cartesian3.add(\n              position,\n              translation,\n              new this.cesium.Cartesian3()\n            );\n            (_b2 = p.position) == null ? void 0 : _b2.setValue(newPosition2);\n          });\n          this.setGeometryPoints(newPoints);\n          if (this.minPointsForShape === 4) {\n            this.curveControlPointLeft = this.cesium.Cartesian3.add(\n              this.curveControlPointLeft,\n              translation,\n              new this.cesium.Cartesian3()\n            );\n            this.curveControlPointRight = this.cesium.Cartesian3.add(\n              this.curveControlPointRight,\n              translation,\n              new this.cesium.Cartesian3()\n            );\n          }\n          startPosition = newPosition;\n        }\n      } else {\n        const pickRay = this.viewer.scene.camera.getPickRay(event.endPosition);\n        if (pickRay) {\n          const pickedObject = this.viewer.scene.pick(event.endPosition);\n          if (this.cesium.defined(pickedObject) && pickedObject.id instanceof this.cesium.Entity) {\n            const clickedEntity = pickedObject.id;\n            if (this.isCurrentEntity(clickedEntity.id)) {\n              this.viewer.scene.canvas.style.cursor = \"move\";\n            } else {\n              this.viewer.scene.canvas.style.cursor = \"default\";\n            }\n          } else {\n            this.viewer.scene.canvas.style.cursor = \"default\";\n          }\n        }\n      }\n    }, this.cesium.ScreenSpaceEventType.MOUSE_MOVE);\n    this.dragEventHandler.setInputAction(() => {\n      dragging = false;\n      startPosition = void 0;\n      this.viewer.scene.screenSpaceCameraController.enableRotate = true;\n    }, this.cesium.ScreenSpaceEventType.LEFT_UP);\n  }\n  // 完成编辑，禁用拖动。\n  disableDrag() {\n    this.dragEventHandler.removeInputAction(\n      this.cesium.ScreenSpaceEventType.LEFT_DOWN\n    );\n    this.dragEventHandler.removeInputAction(\n      this.cesium.ScreenSpaceEventType.MOUSE_MOVE\n    );\n    this.dragEventHandler.removeInputAction(\n      this.cesium.ScreenSpaceEventType.LEFT_UP\n    );\n  }\n  show(opts) {\n    if (opts) {\n      const { duration, delay, callback } = opts;\n      this.showWithAnimation(duration, delay, callback);\n      return;\n    } else {\n      this.showWithAnimation(0, 0);\n    }\n  }\n  hide(opts) {\n    if (opts) {\n      const { duration, delay, callback } = opts;\n      this.hideWithAnimation(duration, delay, callback);\n      return;\n    } else {\n      this.hideWithAnimation(0, 0);\n    }\n  }\n  showWithAnimation(duration = 2e3, delay = 0, callback) {\n    var _a, _b, _c, _d;\n    if (this.state !== \"hidden\") {\n      return;\n    }\n    this.setState(\"static\");\n    if (this.type === \"polygon\") {\n      let alpha = 0.3;\n      const material = this.styleCache.material;\n      if (material.image) {\n        alpha = material.color.getValue().alpha;\n      } else {\n        alpha = material.alpha;\n      }\n      this.animateOpacity(\n        this.polygonEntity,\n        alpha,\n        duration,\n        delay,\n        callback,\n        this.state\n      );\n      const outlineAlpha = (_b = (_a = this.styleCache) == null ? void 0 : _a.outlineMaterial) == null ? void 0 : _b.alpha;\n      this.animateOpacity(\n        this.outlineEntity,\n        outlineAlpha || 1,\n        duration,\n        delay,\n        void 0,\n        this.state\n      );\n    } else if (this.type === \"line\") {\n      const material = this.styleCache.material;\n      let alpha = 1;\n      if (material.image) {\n        alpha = material.color.alpha;\n      } else if (material.dashLength) {\n        const color = material.color.getValue();\n        alpha = color.alpha;\n      } else {\n        alpha = (_d = (_c = this.styleCache) == null ? void 0 : _c.material) == null ? void 0 : _d.alpha;\n      }\n      this.animateOpacity(\n        this.lineEntity,\n        alpha,\n        duration,\n        delay,\n        callback,\n        this.state\n      );\n    }\n    if (duration != 0) {\n      this.setState(\"animating\");\n    }\n  }\n  hideWithAnimation(duration = 2e3, delay = 0, callback) {\n    if (this.state === \"hidden\" || this.state != \"static\") {\n      return;\n    }\n    this.setState(\"hidden\");\n    if (this.type === \"polygon\") {\n      this.animateOpacity(\n        this.polygonEntity,\n        0,\n        duration,\n        delay,\n        callback,\n        this.state\n      );\n      this.animateOpacity(\n        this.outlineEntity,\n        0,\n        duration,\n        delay,\n        void 0,\n        this.state\n      );\n    } else if (this.type === \"line\") {\n      this.animateOpacity(\n        this.lineEntity,\n        0,\n        duration,\n        delay,\n        callback,\n        this.state\n      );\n    }\n    if (duration != 0) {\n      this.setState(\"animating\");\n    }\n  }\n  animateOpacity(entity, targetAlpha, duration, delay, callback, state) {\n    setTimeout(() => {\n      const graphics = entity.polygon || entity.polyline || entity.billboard;\n      let startAlpha;\n      let material = graphics.material;\n      if (material) {\n        if (material.image && material.color.alpha !== void 0) {\n          startAlpha = material.color.alpha;\n        } else {\n          startAlpha = material.color.getValue().alpha;\n        }\n      } else {\n        const color = graphics.color.getValue();\n        startAlpha = color.alpha;\n      }\n      let startTime = 0;\n      const animate = (currentTime) => {\n        if (!startTime) {\n          startTime = currentTime;\n        }\n        const elapsedTime = currentTime - startTime;\n        if (elapsedTime < duration) {\n          const deltalpha = elapsedTime / duration * (targetAlpha - startAlpha);\n          const newAlpha = startAlpha + deltalpha;\n          if (material) {\n            if (material.image && material.color.alpha !== void 0) {\n              material.color.alpha = newAlpha;\n            } else {\n              const newColor = material.color.getValue().withAlpha(newAlpha);\n              material.color.setValue(newColor);\n            }\n          } else {\n            const color = graphics.color.getValue();\n            const newColor = color.withAlpha(newAlpha);\n            graphics.color.setValue(newColor);\n          }\n          requestAnimationFrame(animate);\n        } else {\n          callback && callback();\n          const restoredState = state ? state : \"static\";\n          if (material) {\n            if (material.image && material.color.alpha !== void 0) {\n              material.color.alpha = targetAlpha;\n            } else {\n              const newColor = material.color.getValue().withAlpha(targetAlpha);\n              material.color.setValue(newColor);\n            }\n          } else {\n            const color = graphics.color.getValue();\n            const newColor = color.withAlpha(targetAlpha);\n            graphics.color.setValue(newColor);\n          }\n          requestAnimationFrame(() => {\n            this.setState(restoredState);\n          });\n        }\n      };\n      requestAnimationFrame(animate);\n    }, delay);\n  }\n  startGrowthAnimation(opts) {\n    const { duration = 2e3, delay = 0, callback } = opts || {};\n    if (this.state === \"hidden\" || this.state != \"static\") {\n      return;\n    }\n    if (!this.minPointsForShape) {\n      console.warn(\"Growth animation is not supported for this type of shape\");\n      return;\n    }\n    this.setState(\"animating\");\n    if (this.minPointsForShape === 4) {\n      this.doubleArrowGrowthAnimation(duration, delay, callback);\n      return;\n    }\n    setTimeout(() => {\n      this.hideWithAnimation(0, 0, void 0);\n      const points = this.getPoints();\n      let segmentDuration = 0;\n      if (this.minPointsForShape === 2) {\n        segmentDuration = duration / (points.length - 1);\n      } else {\n        segmentDuration = duration / (points.length - 2);\n      }\n      let startTime = Date.now();\n      let movingPointIndex = 0;\n      this.viewer.clock.shouldAnimate = true;\n      const frameListener = (clock) => {\n        const currentTime = Date.now();\n        const elapsedTime = currentTime - startTime;\n        if (elapsedTime >= duration) {\n          callback && callback();\n          startTime = 0;\n          this.viewer.clock.shouldAnimate = false;\n          this.viewer.clock.onTick.removeEventListener(frameListener);\n          this.setState(\"static\");\n          return;\n        }\n        const currentSegment = Math.floor(elapsedTime / segmentDuration);\n        let startPoint;\n        if (this.minPointsForShape === 2) {\n          movingPointIndex = currentSegment + 1;\n        } else {\n          movingPointIndex = currentSegment + 2;\n        }\n        startPoint = points[movingPointIndex - 1];\n        if (currentSegment == 0 && this.minPointsForShape === 3) {\n          startPoint = this.cesium.Cartesian3.midpoint(\n            points[0],\n            points[1],\n            new this.cesium.Cartesian3()\n          );\n        }\n        let endPoint = points[movingPointIndex];\n        const t = (elapsedTime - currentSegment * segmentDuration) / segmentDuration;\n        const newPosition = this.cesium.Cartesian3.lerp(\n          startPoint,\n          endPoint,\n          t,\n          new this.cesium.Cartesian3()\n        );\n        const tempPoints = points.slice(0, movingPointIndex + 1);\n        tempPoints[tempPoints.length - 1] = newPosition;\n        const geometryPoints = this.createGraphic(tempPoints);\n        this.setGeometryPoints(geometryPoints);\n        this.showWithAnimation(0, 0, void 0);\n      };\n      this.viewer.clock.onTick.addEventListener(frameListener);\n    }, delay);\n  }\n  doubleArrowGrowthAnimation(duration = 2e3, delay = 0, callback) {\n    setTimeout(() => {\n      this.hideWithAnimation(0, 0, void 0);\n      const points = this.getPoints();\n      let startTime = Date.now();\n      this.viewer.clock.shouldAnimate = true;\n      const frameListener = (clock) => {\n        const currentTime = Date.now();\n        const elapsedTime = currentTime - startTime;\n        if (elapsedTime >= duration) {\n          callback && callback();\n          startTime = 0;\n          this.viewer.clock.shouldAnimate = false;\n          this.viewer.clock.onTick.removeEventListener(frameListener);\n          this.setState(\"static\");\n          return;\n        }\n        const midPoint = this.cesium.Cartesian3.midpoint(\n          points[0],\n          points[1],\n          new this.cesium.Cartesian3()\n        );\n        const startPointLeft = this.cesium.Cartesian3.midpoint(\n          points[0],\n          midPoint,\n          new this.cesium.Cartesian3()\n        );\n        const startPointRight = this.cesium.Cartesian3.midpoint(\n          midPoint,\n          points[1],\n          new this.cesium.Cartesian3()\n        );\n        let endPointLeft = points[3];\n        let endPointRight = points[2];\n        const t = elapsedTime / duration;\n        const controlPoint = this.getBezierControlPointforGrowthAnimation();\n        let curveControlPointsLeft = [\n          startPointLeft,\n          controlPoint.left,\n          endPointLeft\n        ];\n        let curveControlPointsRight = [\n          startPointRight,\n          controlPoint.right,\n          endPointRight\n        ];\n        const newPositionLeft = this.getNewPosition(curveControlPointsLeft, t);\n        const newPositionRight = this.getNewPosition(\n          curveControlPointsRight,\n          t\n        );\n        const tempPoints = [...points];\n        tempPoints[2] = newPositionRight;\n        tempPoints[3] = newPositionLeft;\n        const geometryPoints = this.createGraphic(tempPoints);\n        this.setGeometryPoints(geometryPoints);\n        this.showWithAnimation(0, 0, void 0);\n      };\n      this.viewer.clock.onTick.addEventListener(frameListener);\n    }, delay);\n  }\n  getNewPosition(curveControlPoints, t) {\n    curveControlPoints = curveControlPoints.map((item) => {\n      return this.cartesianToLnglat(item);\n    });\n    let curvePoints = getCurvePoints(0.3, curveControlPoints);\n    curvePoints = curvePoints.map((p) => {\n      return this.cesium.Cartesian3.fromDegrees(p[0], p[1]);\n    });\n    let newPosition = this.interpolateAlongCurve(curvePoints, t);\n    return newPosition;\n  }\n  interpolateAlongCurve(curvePoints, t) {\n    const numPoints = curvePoints.length - 1;\n    const index = Math.floor(t * numPoints);\n    const tSegment = t * numPoints - index;\n    const startPoint = curvePoints[index];\n    const endPoint = curvePoints[index + 1];\n    const x = startPoint.x + (endPoint.x - startPoint.x) * tSegment;\n    const y = startPoint.y + (endPoint.y - startPoint.y) * tSegment;\n    const z = startPoint.z + (endPoint.z - startPoint.z) * tSegment;\n    return new this.cesium.Cartesian3(x, y, z);\n  }\n  remove() {\n    if (this.type === \"polygon\") {\n      this.viewer.entities.remove(this.polygonEntity);\n      this.viewer.entities.remove(this.outlineEntity);\n      this.polygonEntity = null;\n      this.outlineEntity = null;\n      this.lineEntity = null;\n    } else if (this.type === \"line\") {\n      this.viewer.entities.remove(this.lineEntity);\n    } else if (this.type === \"point\") {\n      this.viewer.entities.remove(this.pointEntity);\n    }\n    this.removeClickListener();\n    this.removeMoveListener();\n    this.removeDoubleClickListener();\n    this.removeControlPoints();\n  }\n  on(eventType, listener) {\n    this.eventDispatcher.on(eventType, listener);\n  }\n  off(eventType, listener) {\n    this.eventDispatcher.off(eventType, listener);\n  }\n  isCurrentEntity(id) {\n    return this.entityId === id;\n  }\n  addPoint(cartesian) {\n  }\n  getPoints() {\n    return [new this.cesium.Cartesian3()];\n  }\n  updateMovingPoint(cartesian, index) {\n  }\n  updateDraggingPoint(cartesian, index) {\n  }\n  getType() {\n    return \"polygon\";\n  }\n  createGraphic(points) {\n    return points;\n  }\n}\nexport {\n  Base as default\n};\n", "const FITTING_COUNT = 100;\nconst ZERO_TOLERANCE = 1e-4;\nconst MathDistance = (pnt1, pnt2) => Math.sqrt((pnt1[0] - pnt2[0]) ** 2 + (pnt1[1] - pnt2[1]) ** 2);\nconst wholeDistance = (points) => {\n  let distance = 0;\n  if (points && Array.isArray(points) && points.length > 0) {\n    points.forEach((item, index) => {\n      if (index < points.length - 1) {\n        distance += MathDistance(item, points[index + 1]);\n      }\n    });\n  }\n  return distance;\n};\nconst getBaseLength = (points) => wholeDistance(points) ** 0.99;\nconst Mid = (point1, point2) => [(point1[0] + point2[0]) / 2, (point1[1] + point2[1]) / 2];\nconst getCircleCenterOfThreePoints = (point1, point2, point3) => {\n  const pntA = [(point1[0] + point2[0]) / 2, (point1[1] + point2[1]) / 2];\n  const pntB = [pntA[0] - point1[1] + point2[1], pntA[1] + point1[0] - point2[0]];\n  const pntC = [(point1[0] + point3[0]) / 2, (point1[1] + point3[1]) / 2];\n  const pntD = [pntC[0] - point1[1] + point3[1], pntC[1] + point1[0] - point3[0]];\n  return getIntersectPoint(pntA, pntB, pntC, pntD);\n};\nconst getIntersectPoint = (pntA, pntB, pntC, pntD) => {\n  if (pntA[1] === pntB[1]) {\n    const f2 = (pntD[0] - pntC[0]) / (pntD[1] - pntC[1]);\n    const x2 = f2 * (pntA[1] - pntC[1]) + pntC[0];\n    const y2 = pntA[1];\n    return [x2, y2];\n  }\n  if (pntC[1] === pntD[1]) {\n    const e2 = (pntB[0] - pntA[0]) / (pntB[1] - pntA[1]);\n    const x2 = e2 * (pntC[1] - pntA[1]) + pntA[0];\n    const y2 = pntC[1];\n    return [x2, y2];\n  }\n  const e = (pntB[0] - pntA[0]) / (pntB[1] - pntA[1]);\n  const f = (pntD[0] - pntC[0]) / (pntD[1] - pntC[1]);\n  const y = (e * pntA[1] - pntA[0] - f * pntC[1] + pntC[0]) / (e - f);\n  const x = e * y - e * pntA[1] + pntA[0];\n  return [x, y];\n};\nconst getAzimuth = (startPoint, endPoint) => {\n  let azimuth;\n  const angle = Math.asin(Math.abs(endPoint[1] - startPoint[1]) / MathDistance(startPoint, endPoint));\n  if (endPoint[1] >= startPoint[1] && endPoint[0] >= startPoint[0]) {\n    azimuth = angle + Math.PI;\n  } else if (endPoint[1] >= startPoint[1] && endPoint[0] < startPoint[0]) {\n    azimuth = Math.PI * 2 - angle;\n  } else if (endPoint[1] < startPoint[1] && endPoint[0] < startPoint[0]) {\n    azimuth = angle;\n  } else if (endPoint[1] < startPoint[1] && endPoint[0] >= startPoint[0]) {\n    azimuth = Math.PI - angle;\n  }\n  return azimuth;\n};\nconst getAngleOfThreePoints = (pntA, pntB, pntC) => {\n  const angle = getAzimuth(pntB, pntA) - getAzimuth(pntB, pntC);\n  return angle < 0 ? angle + Math.PI * 2 : angle;\n};\nconst isClockWise = (pnt1, pnt2, pnt3) => (pnt3[1] - pnt1[1]) * (pnt2[0] - pnt1[0]) > (pnt2[1] - pnt1[1]) * (pnt3[0] - pnt1[0]);\nconst getCubicValue = (t, startPnt, cPnt1, cPnt2, endPnt) => {\n  t = Math.max(Math.min(t, 1), 0);\n  const [tp, t2] = [1 - t, t * t];\n  const t3 = t2 * t;\n  const tp2 = tp * tp;\n  const tp3 = tp2 * tp;\n  const x = tp3 * startPnt[0] + 3 * tp2 * t * cPnt1[0] + 3 * tp * t2 * cPnt2[0] + t3 * endPnt[0];\n  const y = tp3 * startPnt[1] + 3 * tp2 * t * cPnt1[1] + 3 * tp * t2 * cPnt2[1] + t3 * endPnt[1];\n  return [x, y];\n};\nconst getThirdPoint = (startPnt, endPnt, angle, distance, clockWise) => {\n  const azimuth = getAzimuth(startPnt, endPnt);\n  const alpha = clockWise ? azimuth + angle : azimuth - angle;\n  const dx = distance * Math.cos(alpha);\n  const dy = distance * Math.sin(alpha);\n  return [endPnt[0] + dx, endPnt[1] + dy];\n};\nconst getArcPoints = (center, radius, startAngle, endAngle) => {\n  let [x, y, pnts, angleDiff] = [null, null, [], endAngle - startAngle];\n  angleDiff = angleDiff < 0 ? angleDiff + Math.PI * 2 : angleDiff;\n  for (let i = 0; i <= 100; i++) {\n    const angle = startAngle + angleDiff * i / 100;\n    x = center[0] + radius * Math.cos(angle);\n    y = center[1] + radius * Math.sin(angle);\n    pnts.push([x, y]);\n  }\n  return pnts;\n};\nconst getBisectorNormals = (t, pnt1, pnt2, pnt3) => {\n  const normal = getNormal(pnt1, pnt2, pnt3);\n  let [bisectorNormalRight, bisectorNormalLeft, dt, x, y] = [null, null, null, null, null];\n  const dist = Math.sqrt(normal[0] * normal[0] + normal[1] * normal[1]);\n  const uX = normal[0] / dist;\n  const uY = normal[1] / dist;\n  const d1 = MathDistance(pnt1, pnt2);\n  const d2 = MathDistance(pnt2, pnt3);\n  if (dist > ZERO_TOLERANCE) {\n    if (isClockWise(pnt1, pnt2, pnt3)) {\n      dt = t * d1;\n      x = pnt2[0] - dt * uY;\n      y = pnt2[1] + dt * uX;\n      bisectorNormalRight = [x, y];\n      dt = t * d2;\n      x = pnt2[0] + dt * uY;\n      y = pnt2[1] - dt * uX;\n      bisectorNormalLeft = [x, y];\n    } else {\n      dt = t * d1;\n      x = pnt2[0] + dt * uY;\n      y = pnt2[1] - dt * uX;\n      bisectorNormalRight = [x, y];\n      dt = t * d2;\n      x = pnt2[0] - dt * uY;\n      y = pnt2[1] + dt * uX;\n      bisectorNormalLeft = [x, y];\n    }\n  } else {\n    x = pnt2[0] + t * (pnt1[0] - pnt2[0]);\n    y = pnt2[1] + t * (pnt1[1] - pnt2[1]);\n    bisectorNormalRight = [x, y];\n    x = pnt2[0] + t * (pnt3[0] - pnt2[0]);\n    y = pnt2[1] + t * (pnt3[1] - pnt2[1]);\n    bisectorNormalLeft = [x, y];\n  }\n  return [bisectorNormalRight, bisectorNormalLeft];\n};\nconst getNormal = (pnt1, pnt2, pnt3) => {\n  let dX1 = pnt1[0] - pnt2[0];\n  let dY1 = pnt1[1] - pnt2[1];\n  const d1 = Math.sqrt(dX1 * dX1 + dY1 * dY1);\n  dX1 /= d1;\n  dY1 /= d1;\n  let dX2 = pnt3[0] - pnt2[0];\n  let dY2 = pnt3[1] - pnt2[1];\n  const d2 = Math.sqrt(dX2 * dX2 + dY2 * dY2);\n  dX2 /= d2;\n  dY2 /= d2;\n  const uX = dX1 + dX2;\n  const uY = dY1 + dY2;\n  return [uX, uY];\n};\nconst getLeftMostControlPoint = (controlPoints, t) => {\n  let [pnt1, pnt2, pnt3, controlX, controlY] = [controlPoints[0], controlPoints[1], controlPoints[2], null, null];\n  const pnts = getBisectorNormals(0, pnt1, pnt2, pnt3);\n  const normalRight = pnts[0];\n  const normal = getNormal(pnt1, pnt2, pnt3);\n  const dist = Math.sqrt(normal[0] * normal[0] + normal[1] * normal[1]);\n  if (dist > ZERO_TOLERANCE) {\n    const mid = Mid(pnt1, pnt2);\n    const pX = pnt1[0] - mid[0];\n    const pY = pnt1[1] - mid[1];\n    const d1 = MathDistance(pnt1, pnt2);\n    const n = 2 / d1;\n    const nX = -n * pY;\n    const nY = n * pX;\n    const a11 = nX * nX - nY * nY;\n    const a12 = 2 * nX * nY;\n    const a22 = nY * nY - nX * nX;\n    const dX = normalRight[0] - mid[0];\n    const dY = normalRight[1] - mid[1];\n    controlX = mid[0] + a11 * dX + a12 * dY;\n    controlY = mid[1] + a12 * dX + a22 * dY;\n  } else {\n    controlX = pnt1[0] + t * (pnt2[0] - pnt1[0]);\n    controlY = pnt1[1] + t * (pnt2[1] - pnt1[1]);\n  }\n  return [controlX, controlY];\n};\nconst getRightMostControlPoint = (controlPoints, t) => {\n  const count = controlPoints.length;\n  const pnt1 = controlPoints[count - 3];\n  const pnt2 = controlPoints[count - 2];\n  const pnt3 = controlPoints[count - 1];\n  const pnts = getBisectorNormals(0, pnt1, pnt2, pnt3);\n  const normalLeft = pnts[1];\n  const normal = getNormal(pnt1, pnt2, pnt3);\n  const dist = Math.sqrt(normal[0] * normal[0] + normal[1] * normal[1]);\n  let [controlX, controlY] = [null, null];\n  if (dist > ZERO_TOLERANCE) {\n    const mid = Mid(pnt2, pnt3);\n    const pX = pnt3[0] - mid[0];\n    const pY = pnt3[1] - mid[1];\n    const d1 = MathDistance(pnt2, pnt3);\n    const n = 2 / d1;\n    const nX = -n * pY;\n    const nY = n * pX;\n    const a11 = nX * nX - nY * nY;\n    const a12 = 2 * nX * nY;\n    const a22 = nY * nY - nX * nX;\n    const dX = normalLeft[0] - mid[0];\n    const dY = normalLeft[1] - mid[1];\n    controlX = mid[0] + a11 * dX + a12 * dY;\n    controlY = mid[1] + a12 * dX + a22 * dY;\n  } else {\n    controlX = pnt3[0] + t * (pnt2[0] - pnt3[0]);\n    controlY = pnt3[1] + t * (pnt2[1] - pnt3[1]);\n  }\n  return [controlX, controlY];\n};\nconst getCurvePoints = (t, controlPoints) => {\n  const leftControl = getLeftMostControlPoint(controlPoints, t);\n  let [pnt1, pnt2, pnt3, normals, points] = [null, null, null, [leftControl], []];\n  for (let i = 0; i < controlPoints.length - 2; i++) {\n    [pnt1, pnt2, pnt3] = [controlPoints[i], controlPoints[i + 1], controlPoints[i + 2]];\n    const normalPoints = getBisectorNormals(t, pnt1, pnt2, pnt3);\n    normals = normals.concat(normalPoints);\n  }\n  const rightControl = getRightMostControlPoint(controlPoints, t);\n  if (rightControl) {\n    normals.push(rightControl);\n  }\n  for (let i = 0; i < controlPoints.length - 1; i++) {\n    pnt1 = controlPoints[i];\n    pnt2 = controlPoints[i + 1];\n    points.push(pnt1);\n    for (let j = 0; j < FITTING_COUNT; j++) {\n      const pnt = getCubicValue(j / FITTING_COUNT, pnt1, normals[i * 2], normals[i * 2 + 1], pnt2);\n      points.push(pnt);\n    }\n    points.push(pnt2);\n  }\n  return points;\n};\nconst getBezierPoints = function(points) {\n  if (points.length <= 2) {\n    return points;\n  }\n  const bezierPoints = [];\n  const n = points.length - 1;\n  for (let t = 0; t <= 1; t += 0.01) {\n    let [x, y] = [0, 0];\n    for (let index = 0; index <= n; index++) {\n      const factor = getBinomialFactor(n, index);\n      const a = t ** index;\n      const b = (1 - t) ** (n - index);\n      x += factor * a * b * points[index][0];\n      y += factor * a * b * points[index][1];\n    }\n    bezierPoints.push([x, y]);\n  }\n  bezierPoints.push(points[n]);\n  return bezierPoints;\n};\nconst getFactorial = (n) => {\n  let result = 1;\n  switch (n) {\n    case n <= 1:\n      result = 1;\n      break;\n    case n === 2:\n      result = 2;\n      break;\n    case n === 3:\n      result = 6;\n      break;\n    case n === 24:\n      result = 24;\n      break;\n    case n === 5:\n      result = 120;\n      break;\n    default:\n      for (let i = 1; i <= n; i++) {\n        result *= i;\n      }\n      break;\n  }\n  return result;\n};\nconst getBinomialFactor = (n, index) => getFactorial(n) / (getFactorial(index) * getFactorial(n - index));\nconst getQBSplinePoints = (points) => {\n  if (points.length <= 2) {\n    return points;\n  }\n  const [n, bSplinePoints] = [2, []];\n  const m = points.length - n - 1;\n  bSplinePoints.push(points[0]);\n  for (let i = 0; i <= m; i++) {\n    for (let t = 0; t <= 1; t += 0.05) {\n      let [x, y] = [0, 0];\n      for (let k = 0; k <= n; k++) {\n        const factor = getQuadricBSplineFactor(k, t);\n        x += factor * points[i + k][0];\n        y += factor * points[i + k][1];\n      }\n      bSplinePoints.push([x, y]);\n    }\n  }\n  bSplinePoints.push(points[points.length - 1]);\n  return bSplinePoints;\n};\nconst getQuadricBSplineFactor = (k, t) => {\n  let res = 0;\n  if (k === 0) {\n    res = (t - 1) ** 2 / 2;\n  } else if (k === 1) {\n    res = (-2 * t ** 2 + 2 * t + 1) / 2;\n  } else if (k === 2) {\n    res = t ** 2 / 2;\n  }\n  return res;\n};\nexport {\n  MathDistance,\n  Mid,\n  getAngleOfThreePoints,\n  getArcPoints,\n  getAzimuth,\n  getBaseLength,\n  getBezierPoints,\n  getBinomialFactor,\n  getBisectorNormals,\n  getCircleCenterOfThreePoints,\n  getCubicValue,\n  getCurvePoints,\n  getFactorial,\n  getIntersectPoint,\n  getLeftMostControlPoint,\n  getNormal,\n  getQBSplinePoints,\n  getQuadricBSplineFactor,\n  getRightMostControlPoint,\n  getThirdPoint,\n  isClockWise,\n  wholeDistance\n};\n", "import Base from \"../base.mjs\";\nimport { getBaseLength, getThirdPoint } from \"../utils.mjs\";\nclass FineArrow extends Base {\n  constructor(cesium, viewer, style) {\n    super(cesium, viewer, style);\n    this.points = [];\n    this.arrowLengthScale = 5;\n    this.maxArrowLength = 2;\n    this.cesium = cesium;\n    this.tailWidthFactor = 0.1;\n    this.neckWidthFactor = 0.2;\n    this.headWidthFactor = 0.25;\n    this.headAngle = Math.PI / 8.5;\n    this.neckAngle = Math.PI / 13;\n    this.minPointsForShape = 2;\n    this.setState(\"drawing\");\n  }\n  getType() {\n    return \"polygon\";\n  }\n  /**\n   * Add points only on click events\n   */\n  addPoint(cartesian) {\n    if (this.points.length < 2) {\n      this.points.push(cartesian);\n      this.onMouseMove();\n    }\n    if (this.points.length === 2) {\n      const geometryPoints = this.createGraphic(this.points);\n      this.setGeometryPoints(geometryPoints);\n      this.drawPolygon();\n      this.finishDrawing();\n    }\n  }\n  /**\n   * Draw a shape based on mouse movement points during the initial drawing.\n   */\n  updateMovingPoint(cartesian) {\n    const tempPoints = [...this.points, cartesian];\n    const geometryPoints = this.createGraphic(tempPoints);\n    this.setGeometryPoints(geometryPoints);\n    this.drawPolygon();\n  }\n  /**\n   * In edit mode, drag key points to update corresponding key point data.\n   */\n  updateDraggingPoint(cartesian, index) {\n    this.points[index] = cartesian;\n    const geometryPoints = this.createGraphic(this.points);\n    this.setGeometryPoints(geometryPoints);\n    this.drawPolygon();\n  }\n  /**\n   * Generate geometric shapes based on key points.\n   */\n  createGraphic(positions) {\n    const [p1, p2] = positions.map(this.cartesianToLnglat);\n    const len = getBaseLength([p1, p2]);\n    const tailWidth = len * this.tailWidthFactor;\n    const neckWidth = len * this.neckWidthFactor;\n    const headWidth = len * this.headWidthFactor;\n    const tailLeft = getThirdPoint(p2, p1, Math.PI / 2, tailWidth, true);\n    const tailRight = getThirdPoint(\n      p2,\n      p1,\n      Math.PI / 2,\n      tailWidth,\n      false\n    );\n    const headLeft = getThirdPoint(\n      p1,\n      p2,\n      this.headAngle,\n      headWidth,\n      false\n    );\n    const headRight = getThirdPoint(\n      p1,\n      p2,\n      this.headAngle,\n      headWidth,\n      true\n    );\n    const neckLeft = getThirdPoint(\n      p1,\n      p2,\n      this.neckAngle,\n      neckWidth,\n      false\n    );\n    const neckRight = getThirdPoint(\n      p1,\n      p2,\n      this.neckAngle,\n      neckWidth,\n      true\n    );\n    const points = [\n      ...tailLeft,\n      ...neckLeft,\n      ...headLeft,\n      ...p2,\n      ...headRight,\n      ...neckRight,\n      ...tailRight,\n      ...p1\n    ];\n    const cartesianPoints = this.cesium.Cartesian3.fromDegreesArray(points);\n    return cartesianPoints;\n  }\n  getPoints() {\n    return this.points;\n  }\n}\nexport {\n  FineArrow as default\n};\n", "import Base from \"../base.mjs\";\nimport { isClockWise, Mid, MathDistance, getBaseLength, getQBSplinePoints, getThirdPoint, wholeDistance, getAngleOfThreePoints } from \"../utils.mjs\";\nclass AttackArrow extends Base {\n  constructor(cesium, viewer, style) {\n    super(cesium, viewer, style);\n    this.points = [];\n    this.cesium = cesium;\n    this.headHeightFactor = 0.18;\n    this.headWidthFactor = 0.3;\n    this.neckHeightFactor = 0.85;\n    this.neckWidthFactor = 0.15;\n    this.headTailFactor = 0.8;\n    this.minPointsForShape = 3;\n    this.setState(\"drawing\");\n    this.onDoubleClick();\n  }\n  getType() {\n    return \"polygon\";\n  }\n  /**\n   * Add points only on click events\n   */\n  addPoint(cartesian) {\n    this.points.push(cartesian);\n    if (this.points.length < 2) {\n      this.onMouseMove();\n    } else if (this.points.length === 2) {\n      this.setGeometryPoints(this.points);\n      this.drawPolygon();\n    }\n  }\n  /**\n   * Draw a shape based on mouse movement points during the initial drawing.\n   */\n  updateMovingPoint(cartesian) {\n    const tempPoints = [...this.points, cartesian];\n    this.setGeometryPoints(tempPoints);\n    if (tempPoints.length === 2) {\n      this.addTempLine();\n    } else {\n      this.removeTempLine();\n      const geometryPoints = this.createGraphic(tempPoints);\n      this.setGeometryPoints(geometryPoints);\n      this.drawPolygon();\n    }\n  }\n  /**\n   * Generate geometric shapes based on key points.\n   */\n  createGraphic(positions) {\n    const lnglatPoints = positions.map((pnt) => {\n      return this.cartesianToLnglat(pnt);\n    });\n    let [tailLeft, tailRight] = [lnglatPoints[0], lnglatPoints[1]];\n    if (isClockWise(lnglatPoints[0], lnglatPoints[1], lnglatPoints[2])) {\n      tailLeft = lnglatPoints[1];\n      tailRight = lnglatPoints[0];\n    }\n    const midTail = Mid(tailLeft, tailRight);\n    const bonePnts = [midTail].concat(lnglatPoints.slice(2));\n    const headPnts = this.getArrowHeadPoints(bonePnts, tailLeft, tailRight);\n    const [neckLeft, neckRight] = [headPnts[0], headPnts[4]];\n    const tailWidthFactor = MathDistance(tailLeft, tailRight) / getBaseLength(bonePnts);\n    const bodyPnts = this.getArrowBodyPoints(\n      bonePnts,\n      neckLeft,\n      neckRight,\n      tailWidthFactor\n    );\n    const count = bodyPnts.length;\n    let leftPnts = [tailLeft].concat(bodyPnts.slice(0, count / 2));\n    leftPnts.push(neckLeft);\n    let rightPnts = [tailRight].concat(bodyPnts.slice(count / 2, count));\n    rightPnts.push(neckRight);\n    leftPnts = getQBSplinePoints(leftPnts);\n    rightPnts = getQBSplinePoints(rightPnts);\n    const points = leftPnts.concat(headPnts, rightPnts.reverse());\n    const temp = [].concat(...points);\n    const cartesianPoints = this.cesium.Cartesian3.fromDegreesArray(temp);\n    return cartesianPoints;\n  }\n  getPoints() {\n    return this.points;\n  }\n  getArrowHeadPoints(points, tailLeft, tailRight) {\n    try {\n      let len = getBaseLength(points);\n      let headHeight = len * this.headHeightFactor;\n      const headPnt = points[points.length - 1];\n      len = MathDistance(headPnt, points[points.length - 2]);\n      const tailWidth = MathDistance(tailLeft, tailRight);\n      if (headHeight > tailWidth * this.headTailFactor) {\n        headHeight = tailWidth * this.headTailFactor;\n      }\n      const headWidth = headHeight * this.headWidthFactor;\n      const neckWidth = headHeight * this.neckWidthFactor;\n      headHeight = headHeight > len ? len : headHeight;\n      const neckHeight = headHeight * this.neckHeightFactor;\n      const headEndPnt = getThirdPoint(\n        points[points.length - 2],\n        headPnt,\n        0,\n        headHeight,\n        true\n      );\n      const neckEndPnt = getThirdPoint(\n        points[points.length - 2],\n        headPnt,\n        0,\n        neckHeight,\n        true\n      );\n      const headLeft = getThirdPoint(\n        headPnt,\n        headEndPnt,\n        Math.PI / 2,\n        headWidth,\n        false\n      );\n      const headRight = getThirdPoint(\n        headPnt,\n        headEndPnt,\n        Math.PI / 2,\n        headWidth,\n        true\n      );\n      const neckLeft = getThirdPoint(\n        headPnt,\n        neckEndPnt,\n        Math.PI / 2,\n        neckWidth,\n        false\n      );\n      const neckRight = getThirdPoint(\n        headPnt,\n        neckEndPnt,\n        Math.PI / 2,\n        neckWidth,\n        true\n      );\n      return [neckLeft, headLeft, headPnt, headRight, neckRight];\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  getArrowBodyPoints(points, neckLeft, neckRight, tailWidthFactor) {\n    const allLen = wholeDistance(points);\n    const len = getBaseLength(points);\n    const tailWidth = len * tailWidthFactor;\n    const neckWidth = MathDistance(neckLeft, neckRight);\n    const widthDif = (tailWidth - neckWidth) / 2;\n    let [tempLen, leftBodyPnts, rightBodyPnts] = [0, [], []];\n    for (let i = 1; i < points.length - 1; i++) {\n      const angle = getAngleOfThreePoints(points[i - 1], points[i], points[i + 1]) / 2;\n      tempLen += MathDistance(points[i - 1], points[i]);\n      const w = (tailWidth / 2 - tempLen / allLen * widthDif) / Math.sin(angle);\n      const left = getThirdPoint(\n        points[i - 1],\n        points[i],\n        Math.PI - angle,\n        w,\n        true\n      );\n      const right = getThirdPoint(\n        points[i - 1],\n        points[i],\n        angle,\n        w,\n        false\n      );\n      leftBodyPnts.push(left);\n      rightBodyPnts.push(right);\n    }\n    return leftBodyPnts.concat(rightBodyPnts);\n  }\n  /**\n   * In edit mode, drag key points to update corresponding key point data.\n   */\n  updateDraggingPoint(cartesian, index) {\n    this.points[index] = cartesian;\n    const geometryPoints = this.createGraphic(this.points);\n    this.setGeometryPoints(geometryPoints);\n    this.drawPolygon();\n  }\n}\nexport {\n  AttackArrow as default\n};\n", "import { isClockWise, Mid, MathDistance, getBaseLength, getThirdPoint, getQBSplinePoints } from \"../utils.mjs\";\nimport AttackArrow from \"./attack-arrow.mjs\";\nclass SwallowtailAttackArrow extends AttackArrow {\n  constructor(cesium, viewer, style) {\n    super(cesium, viewer, style);\n    this.points = [];\n    this.cesium = cesium;\n    this.headHeightFactor = 0.18;\n    this.headWidthFactor = 0.3;\n    this.neckHeightFactor = 0.85;\n    this.neckWidthFactor = 0.15;\n    this.tailWidthFactor = 0.1;\n    this.headTailFactor = 0.8;\n    this.swallowTailFactor = 1;\n    this.swallowTailPnt = [0, 0];\n    this.minPointsForShape = 3;\n  }\n  /**\n   * Generate geometric shapes based on key points.\n   */\n  createGraphic(positions) {\n    const lnglatPoints = positions.map((pnt) => {\n      return this.cartesianToLnglat(pnt);\n    });\n    let [tailLeft, tailRight] = [lnglatPoints[0], lnglatPoints[1]];\n    if (isClockWise(lnglatPoints[0], lnglatPoints[1], lnglatPoints[2])) {\n      tailLeft = lnglatPoints[1];\n      tailRight = lnglatPoints[0];\n    }\n    const midTail = Mid(tailLeft, tailRight);\n    const bonePnts = [midTail].concat(lnglatPoints.slice(2));\n    const headPnts = this.getArrowHeadPoints(bonePnts, tailLeft, tailRight);\n    const [neckLeft, neckRight] = [headPnts[0], headPnts[4]];\n    const tailWidth = MathDistance(tailLeft, tailRight);\n    const allLen = getBaseLength(bonePnts);\n    const len = allLen * this.tailWidthFactor * this.swallowTailFactor;\n    this.swallowTailPnt = getThirdPoint(\n      bonePnts[1],\n      bonePnts[0],\n      0,\n      len,\n      true\n    );\n    const factor = tailWidth / allLen;\n    const bodyPnts = this.getArrowBodyPoints(\n      bonePnts,\n      neckLeft,\n      neckRight,\n      factor\n    );\n    const count = bodyPnts.length;\n    let leftPnts = [tailLeft].concat(bodyPnts.slice(0, count / 2));\n    leftPnts.push(neckLeft);\n    let rightPnts = [tailRight].concat(bodyPnts.slice(count / 2, count));\n    rightPnts.push(neckRight);\n    leftPnts = getQBSplinePoints(leftPnts);\n    rightPnts = getQBSplinePoints(rightPnts);\n    const points = leftPnts.concat(headPnts, rightPnts.reverse(), [\n      this.swallowTailPnt,\n      leftPnts[0]\n    ]);\n    const temp = [].concat(...points);\n    const cartesianPoints = this.cesium.Cartesian3.fromDegreesArray(temp);\n    return cartesianPoints;\n  }\n}\nexport {\n  SwallowtailAttackArrow as default\n};\n", "import { getQBSplinePoints, getBaseLength, getThirdPoint } from \"../utils.mjs\";\nimport AttackArrow from \"./attack-arrow.mjs\";\nclass SquadCombat extends AttackArrow {\n  constructor(cesium, viewer, style) {\n    super(cesium, viewer, style);\n    this.points = [];\n    this.cesium = cesium;\n    this.headHeightFactor = 0.18;\n    this.headWidthFactor = 0.3;\n    this.neckHeightFactor = 0.85;\n    this.neckWidthFactor = 0.15;\n    this.tailWidthFactor = 0.1;\n    this.minPointsForShape = 2;\n  }\n  /**\n   * Add points only on click events\n   */\n  addPoint(cartesian) {\n    this.points.push(cartesian);\n    if (this.points.length < 2) {\n      this.onMouseMove();\n    } else if (this.points.length > 2) {\n      this.lineEntity && this.viewer.entities.remove(this.lineEntity);\n    }\n  }\n  /**\n   * Draw a shape based on mouse movement points during the initial drawing.\n   */\n  updateMovingPoint(cartesian) {\n    const tempPoints = [...this.points, cartesian];\n    this.setGeometryPoints(tempPoints);\n    if (tempPoints.length < 2) {\n      return;\n    } else {\n      const geometryPoints = this.createGraphic(tempPoints);\n      this.setGeometryPoints(geometryPoints);\n      this.drawPolygon();\n    }\n  }\n  /**\n   * Generate geometric shapes based on key points.\n   */\n  createGraphic(positions) {\n    const lnglatPoints = positions.map((pnt) => {\n      return this.cartesianToLnglat(pnt);\n    });\n    const tailPnts = this.getTailPoints(lnglatPoints);\n    const headPnts = this.getArrowHeadPoints(\n      lnglatPoints,\n      tailPnts[0],\n      tailPnts[1]\n    );\n    const neckLeft = headPnts[0];\n    const neckRight = headPnts[4];\n    const bodyPnts = this.getArrowBodyPoints(\n      lnglatPoints,\n      neckLeft,\n      neckRight,\n      this.tailWidthFactor\n    );\n    const count = bodyPnts.length;\n    let leftPnts = [tailPnts[0]].concat(bodyPnts.slice(0, count / 2));\n    leftPnts.push(neckLeft);\n    let rightPnts = [tailPnts[1]].concat(bodyPnts.slice(count / 2, count));\n    rightPnts.push(neckRight);\n    leftPnts = getQBSplinePoints(leftPnts);\n    rightPnts = getQBSplinePoints(rightPnts);\n    const points = leftPnts.concat(headPnts, rightPnts.reverse());\n    const temp = [].concat(...points);\n    const cartesianPoints = this.cesium.Cartesian3.fromDegreesArray(temp);\n    return cartesianPoints;\n  }\n  getTailPoints(points) {\n    const allLen = getBaseLength(points);\n    const tailWidth = allLen * this.tailWidthFactor;\n    const tailLeft = getThirdPoint(\n      points[1],\n      points[0],\n      Math.PI / 2,\n      tailWidth,\n      false\n    );\n    const tailRight = getThirdPoint(\n      points[1],\n      points[0],\n      Math.PI / 2,\n      tailWidth,\n      true\n    );\n    return [tailLeft, tailRight];\n  }\n}\nexport {\n  SquadCombat as default\n};\n", "import { getQBSplinePoints, getBaseLength, getThirdPoint } from \"../utils.mjs\";\nimport SquadCombat from \"./squad-combat.mjs\";\nclass SwallowtailSquadCombat extends SquadCombat {\n  constructor(cesium, viewer, style) {\n    super(cesium, viewer, style);\n    this.points = [];\n    this.cesium = cesium;\n    this.headHeightFactor = 0.18;\n    this.headWidthFactor = 0.3;\n    this.neckHeightFactor = 0.85;\n    this.neckWidthFactor = 0.15;\n    this.tailWidthFactor = 0.1;\n    this.swallowTailFactor = 1;\n    this.minPointsForShape = 2;\n  }\n  /**\n   * Generate geometric shapes based on key points.\n   */\n  createGraphic(positions) {\n    const lnglatPoints = positions.map((pnt) => {\n      return this.cartesianToLnglat(pnt);\n    });\n    const tailPnts = this.getTailPoints(lnglatPoints);\n    const headPnts = this.getArrowHeadPoints(\n      lnglatPoints,\n      tailPnts[0],\n      tailPnts[2]\n    );\n    const neckLeft = headPnts[0];\n    const neckRight = headPnts[4];\n    const bodyPnts = this.getArrowBodyPoints(\n      lnglatPoints,\n      neckLeft,\n      neckRight,\n      this.tailWidthFactor\n    );\n    const count = bodyPnts.length;\n    let leftPnts = [tailPnts[0]].concat(bodyPnts.slice(0, count / 2));\n    leftPnts.push(neckLeft);\n    let rightPnts = [tailPnts[2]].concat(bodyPnts.slice(count / 2, count));\n    rightPnts.push(neckRight);\n    leftPnts = getQBSplinePoints(leftPnts);\n    rightPnts = getQBSplinePoints(rightPnts);\n    const points = leftPnts.concat(headPnts, rightPnts.reverse(), [\n      tailPnts[1],\n      leftPnts[0]\n    ]);\n    const temp = [].concat(...points);\n    const cartesianPoints = this.cesium.Cartesian3.fromDegreesArray(temp);\n    return cartesianPoints;\n  }\n  getTailPoints(points) {\n    const allLen = getBaseLength(points);\n    const tailWidth = allLen * this.tailWidthFactor;\n    const tailLeft = getThirdPoint(\n      points[1],\n      points[0],\n      Math.PI / 2,\n      tailWidth,\n      false\n    );\n    const tailRight = getThirdPoint(\n      points[1],\n      points[0],\n      Math.PI / 2,\n      tailWidth,\n      true\n    );\n    const len = tailWidth * this.swallowTailFactor;\n    const swallowTailPnt = getThirdPoint(\n      points[1],\n      points[0],\n      0,\n      len,\n      true\n    );\n    return [tailLeft, swallowTailPnt, tailRight];\n  }\n}\nexport {\n  SwallowtailSquadCombat as default\n};\n", "import { MathDistance, getThirdPoint } from \"../utils.mjs\";\nimport Base from \"../base.mjs\";\nclass StraightArrow extends Base {\n  constructor(cesium, viewer, style) {\n    super(cesium, viewer, style);\n    this.points = [];\n    this.arrowLengthScale = 5;\n    this.maxArrowLength = 3e6;\n    this.cesium = cesium;\n    this.minPointsForShape = 2;\n    this.setState(\"drawing\");\n  }\n  getType() {\n    return \"line\";\n  }\n  /**\n   * Add points only on click events\n   */\n  addPoint(cartesian) {\n    if (this.points.length < 2) {\n      this.points.push(cartesian);\n      this.onMouseMove();\n    }\n    if (this.points.length === 2) {\n      const geometryPoints = this.createGraphic(this.points);\n      this.setGeometryPoints(geometryPoints);\n      this.drawLine();\n      this.finishDrawing();\n    }\n  }\n  /**\n   * Draw a shape based on mouse movement points during the initial drawing.\n   */\n  updateMovingPoint(cartesian) {\n    const tempPoints = [...this.points, cartesian];\n    const geometryPoints = this.createGraphic(tempPoints);\n    this.setGeometryPoints(geometryPoints);\n    this.drawLine();\n  }\n  /**\n   * In edit mode, drag key points to update corresponding key point data.\n   */\n  updateDraggingPoint(cartesian, index) {\n    this.points[index] = cartesian;\n    const geometryPoints = this.createGraphic(this.points);\n    this.setGeometryPoints(geometryPoints);\n    this.drawLine();\n  }\n  /**\n   * Generate geometric shapes based on key points.\n   */\n  createGraphic(positions) {\n    const [pnt1, pnt2] = positions.map(this.cartesianToLnglat);\n    const distance = MathDistance(pnt1, pnt2);\n    let len = distance / this.arrowLengthScale;\n    len = len > this.maxArrowLength ? this.maxArrowLength : len;\n    const leftPnt = getThirdPoint(\n      pnt1,\n      pnt2,\n      Math.PI / 6,\n      len / 2,\n      false\n    );\n    const rightPnt = getThirdPoint(\n      pnt1,\n      pnt2,\n      Math.PI / 6,\n      len / 2,\n      true\n    );\n    const points = [...pnt1, ...pnt2, ...leftPnt, ...pnt2, ...rightPnt];\n    const cartesianPoints = this.cesium.Cartesian3.fromDegreesArray(points);\n    return cartesianPoints;\n  }\n  getPoints() {\n    return this.points;\n  }\n}\nexport {\n  StraightArrow as default\n};\n", "import { MathDistance, getThirdPoint, getCurvePoints, wholeDistance } from \"../utils.mjs\";\nimport Base from \"../base.mjs\";\nclass CurvedArrow extends Base {\n  constructor(cesium, viewer, style) {\n    super(cesium, viewer, style);\n    this.points = [];\n    this.arrowLengthScale = 5;\n    this.maxArrowLength = 3e6;\n    this.cesium = cesium;\n    this.t = 0.3;\n    this.minPointsForShape = 2;\n    this.setState(\"drawing\");\n    this.onDoubleClick();\n  }\n  getType() {\n    return \"line\";\n  }\n  /**\n   * Add points only on click events\n   */\n  addPoint(cartesian) {\n    this.points.push(cartesian);\n    if (this.points.length < 2) {\n      this.onMouseMove();\n    }\n  }\n  /**\n   * Draw a shape based on mouse movement points during the initial drawing.\n   */\n  updateMovingPoint(cartesian) {\n    const tempPoints = [...this.points, cartesian];\n    let geometryPoints = this.createGraphic(tempPoints);\n    this.setGeometryPoints(geometryPoints);\n    this.drawLine();\n  }\n  createStraightArrow(positions) {\n    const [pnt1, pnt2] = positions.map(this.cartesianToLnglat);\n    const distance = MathDistance(pnt1, pnt2);\n    let len = distance / this.arrowLengthScale;\n    len = len > this.maxArrowLength ? this.maxArrowLength : len;\n    const leftPnt = getThirdPoint(\n      pnt1,\n      pnt2,\n      Math.PI / 6,\n      len / 2,\n      false\n    );\n    const rightPnt = getThirdPoint(\n      pnt1,\n      pnt2,\n      Math.PI / 6,\n      len / 2,\n      true\n    );\n    const points = [...pnt1, ...pnt2, ...leftPnt, ...pnt2, ...rightPnt];\n    const cartesianPoints = this.cesium.Cartesian3.fromDegreesArray(points);\n    return cartesianPoints;\n  }\n  /**\n   * In edit mode, drag key points to update corresponding key point data.\n   */\n  updateDraggingPoint(cartesian, index) {\n    this.points[index] = cartesian;\n    const geometryPoints = this.createGraphic(this.points);\n    this.setGeometryPoints(geometryPoints);\n    this.drawLine();\n  }\n  /**\n   * Generate geometric shapes based on key points.\n   */\n  createGraphic(positions) {\n    const lnglatPoints = positions.map((pnt) => {\n      return this.cartesianToLnglat(pnt);\n    });\n    if (positions.length === 2) {\n      return this.createStraightArrow(positions);\n    }\n    const curvePoints = getCurvePoints(this.t, lnglatPoints);\n    lnglatPoints[lnglatPoints.length - 2];\n    const pnt2 = lnglatPoints[lnglatPoints.length - 1];\n    const distance = wholeDistance(lnglatPoints);\n    let len = distance / this.arrowLengthScale;\n    len = len > this.maxArrowLength ? this.maxArrowLength : len;\n    const leftPnt = getThirdPoint(\n      curvePoints[curvePoints.length - 2],\n      curvePoints[curvePoints.length - 1],\n      Math.PI / 6,\n      len / 2,\n      false\n    );\n    const rightPnt = getThirdPoint(\n      curvePoints[curvePoints.length - 2],\n      curvePoints[curvePoints.length - 1],\n      Math.PI / 6,\n      len / 2,\n      true\n    );\n    const temp = [].concat(...curvePoints);\n    const points = [...temp, ...leftPnt, ...pnt2, ...rightPnt];\n    const cartesianPoints = this.cesium.Cartesian3.fromDegreesArray(points);\n    return cartesianPoints;\n  }\n  getPoints() {\n    return this.points;\n  }\n}\nexport {\n  CurvedArrow as default\n};\n", "import FineArrow from \"./fine-arrow.mjs\";\nimport { getBaseLength, getThirdPoint } from \"../utils.mjs\";\nclass AssaultDirection extends FineArrow {\n  constructor(cesium, viewer, style) {\n    super(cesium, viewer, style);\n    this.points = [];\n    this.arrowLengthScale = 5;\n    this.maxArrowLength = 2;\n    this.cesium = cesium;\n    this.tailWidthFactor = 0.08;\n    this.neckWidthFactor = 0.1;\n    this.headWidthFactor = 0.13;\n    this.headAngle = Math.PI / 4;\n    this.neckAngle = Math.PI * 0.17741;\n    this.minPointsForShape = 2;\n    this.setState(\"drawing\");\n  }\n  createGraphic(positions) {\n    const [p1, p2] = positions.map(this.cartesianToLnglat);\n    const len = getBaseLength([p1, p2]) * 1.5;\n    const tailWidth = len * this.tailWidthFactor;\n    const neckWidth = len * this.neckWidthFactor;\n    const headWidth = len * this.headWidthFactor;\n    const tailLeft = getThirdPoint(p2, p1, Math.PI / 2, tailWidth, true);\n    const tailRight = getThirdPoint(\n      p2,\n      p1,\n      Math.PI / 2,\n      tailWidth,\n      false\n    );\n    const headLeft = getThirdPoint(\n      p1,\n      p2,\n      this.headAngle,\n      headWidth,\n      false\n    );\n    const headRight = getThirdPoint(\n      p1,\n      p2,\n      this.headAngle,\n      headWidth,\n      true\n    );\n    const neckLeft = getThirdPoint(\n      p1,\n      p2,\n      this.neckAngle,\n      neckWidth,\n      false\n    );\n    const neckRight = getThirdPoint(\n      p1,\n      p2,\n      this.neckAngle,\n      neckWidth,\n      true\n    );\n    const points = [\n      ...tailLeft,\n      ...neckLeft,\n      ...headLeft,\n      ...p2,\n      ...headRight,\n      ...neckRight,\n      ...tailRight,\n      ...p1\n    ];\n    const cartesianPoints = this.cesium.Cartesian3.fromDegreesArray(points);\n    return cartesianPoints;\n  }\n}\nexport {\n  AssaultDirection as default\n};\n", "import Base from \"../base.mjs\";\nimport { Mid, isClockWise, getBezierPoints, MathDistance, getAngleOfThreePoints, getThirdPoint, getBaseLength, wholeDistance } from \"../utils.mjs\";\nclass DoubleArrow extends Base {\n  constructor(cesium, viewer, style) {\n    super(cesium, viewer, style);\n    this.points = [];\n    this.arrowLengthScale = 5;\n    this.maxArrowLength = 2;\n    this.llBodyPnts = [];\n    this.rrBodyPnts = [];\n    this.cesium = cesium;\n    this.headHeightFactor = 0.25;\n    this.headWidthFactor = 0.3;\n    this.neckHeightFactor = 0.85;\n    this.neckWidthFactor = 0.15;\n    this.connPoint = [0, 0];\n    this.tempPoint4 = [0, 0];\n    this.minPointsForShape = 4;\n    this.setState(\"drawing\");\n  }\n  getType() {\n    return \"polygon\";\n  }\n  /**\n   * Add points only on click events\n   */\n  addPoint(cartesian) {\n    this.points.push(cartesian);\n    if (this.points.length < 2) {\n      this.onMouseMove();\n    } else if (this.points.length === 2) {\n      this.setGeometryPoints(this.points);\n      this.drawPolygon();\n    } else if (this.points.length === 3) {\n      this.lineEntity && this.viewer.entities.remove(this.lineEntity);\n    } else {\n      this.finishDrawing();\n    }\n  }\n  finishDrawing() {\n    this.curveControlPointLeft = this.cesium.Cartesian3.fromDegrees(\n      this.llBodyPnts[2][0],\n      this.llBodyPnts[2][1]\n    );\n    this.curveControlPointRight = this.cesium.Cartesian3.fromDegrees(\n      this.rrBodyPnts[1][0],\n      this.rrBodyPnts[1][1]\n    );\n    super.finishDrawing();\n  }\n  /**\n   * Draw a shape based on mouse movement points during the initial drawing.\n   */\n  updateMovingPoint(cartesian) {\n    const tempPoints = [...this.points, cartesian];\n    this.setGeometryPoints(tempPoints);\n    if (tempPoints.length === 2) {\n      this.addTempLine();\n    } else if (tempPoints.length > 2) {\n      this.removeTempLine();\n      const geometryPoints = this.createGraphic(tempPoints);\n      this.setGeometryPoints(geometryPoints);\n      this.drawPolygon();\n    }\n  }\n  /**\n   * In edit mode, drag key points to update corresponding key point data.\n   */\n  updateDraggingPoint(cartesian, index) {\n    this.points[index] = cartesian;\n    const geometryPoints = this.createGraphic(this.points);\n    this.setGeometryPoints(geometryPoints);\n    this.drawPolygon();\n  }\n  /**\n   * Generate geometric shapes based on key points.\n   */\n  createGraphic(positions) {\n    const lnglatPoints = positions.map((pnt) => {\n      return this.cartesianToLnglat(pnt);\n    });\n    const [pnt1, pnt2, pnt3] = [\n      lnglatPoints[0],\n      lnglatPoints[1],\n      lnglatPoints[2]\n    ];\n    const count = lnglatPoints.length;\n    if (count === 3) {\n      this.tempPoint4 = this.getTempPoint4(pnt1, pnt2, pnt3);\n      this.connPoint = Mid(pnt1, pnt2);\n    } else if (count === 4) {\n      this.tempPoint4 = lnglatPoints[3];\n      this.connPoint = Mid(pnt1, pnt2);\n    } else {\n      this.tempPoint4 = lnglatPoints[3];\n      this.connPoint = lnglatPoints[4];\n    }\n    let leftArrowPnts;\n    let rightArrowPnts;\n    this.isClockWise = isClockWise(pnt1, pnt2, pnt3);\n    if (this.isClockWise) {\n      leftArrowPnts = this.getArrowPoints(\n        pnt1,\n        this.connPoint,\n        this.tempPoint4,\n        false\n      );\n      rightArrowPnts = this.getArrowPoints(this.connPoint, pnt2, pnt3, true);\n    } else {\n      leftArrowPnts = this.getArrowPoints(pnt2, this.connPoint, pnt3, false);\n      rightArrowPnts = this.getArrowPoints(\n        this.connPoint,\n        pnt1,\n        this.tempPoint4,\n        true\n      );\n    }\n    const m = leftArrowPnts.length;\n    const t = (m - 5) / 2;\n    const llBodyPnts = leftArrowPnts.slice(0, t);\n    const lArrowPnts = leftArrowPnts.slice(t, t + 5);\n    let lrBodyPnts = leftArrowPnts.slice(t + 5, m);\n    this.llBodyPnts = llBodyPnts;\n    let rlBodyPnts = rightArrowPnts.slice(0, t);\n    const rArrowPnts = rightArrowPnts.slice(t, t + 5);\n    const rrBodyPnts = rightArrowPnts.slice(t + 5, m);\n    this.rrBodyPnts = rrBodyPnts;\n    rlBodyPnts = getBezierPoints(rlBodyPnts);\n    const bodyPnts = getBezierPoints(\n      rrBodyPnts.concat(llBodyPnts.slice(1))\n    );\n    lrBodyPnts = getBezierPoints(lrBodyPnts);\n    const pnts = rlBodyPnts.concat(\n      rArrowPnts,\n      bodyPnts,\n      lArrowPnts,\n      lrBodyPnts\n    );\n    const temp = [].concat(...pnts);\n    const cartesianPoints = this.cesium.Cartesian3.fromDegreesArray(temp);\n    return cartesianPoints;\n  }\n  getTempPoint4(linePnt1, linePnt2, point) {\n    const midPnt = Mid(linePnt1, linePnt2);\n    const len = MathDistance(midPnt, point);\n    const angle = getAngleOfThreePoints(linePnt1, midPnt, point);\n    let symPnt = [0, 0];\n    let distance1;\n    let distance2;\n    let mid;\n    if (angle < Math.PI / 2) {\n      distance1 = len * Math.sin(angle);\n      distance2 = len * Math.cos(angle);\n      mid = getThirdPoint(\n        linePnt1,\n        midPnt,\n        Math.PI / 2,\n        distance1,\n        false\n      );\n      symPnt = getThirdPoint(midPnt, mid, Math.PI / 2, distance2, true);\n    } else if (angle >= Math.PI / 2 && angle < Math.PI) {\n      distance1 = len * Math.sin(Math.PI - angle);\n      distance2 = len * Math.cos(Math.PI - angle);\n      mid = getThirdPoint(\n        linePnt1,\n        midPnt,\n        Math.PI / 2,\n        distance1,\n        false\n      );\n      symPnt = getThirdPoint(midPnt, mid, Math.PI / 2, distance2, false);\n    } else if (angle >= Math.PI && angle < Math.PI * 1.5) {\n      distance1 = len * Math.sin(angle - Math.PI);\n      distance2 = len * Math.cos(angle - Math.PI);\n      mid = getThirdPoint(linePnt1, midPnt, Math.PI / 2, distance1, true);\n      symPnt = getThirdPoint(midPnt, mid, Math.PI / 2, distance2, true);\n    } else {\n      distance1 = len * Math.sin(Math.PI * 2 - angle);\n      distance2 = len * Math.cos(Math.PI * 2 - angle);\n      mid = getThirdPoint(linePnt1, midPnt, Math.PI / 2, distance1, true);\n      symPnt = getThirdPoint(midPnt, mid, Math.PI / 2, distance2, false);\n    }\n    return symPnt;\n  }\n  getArrowPoints(pnt1, pnt2, pnt3, clockWise) {\n    const midPnt = Mid(pnt1, pnt2);\n    const len = MathDistance(midPnt, pnt3);\n    let midPnt1 = getThirdPoint(pnt3, midPnt, 0, len * 0.3, true);\n    let midPnt2 = getThirdPoint(pnt3, midPnt, 0, len * 0.5, true);\n    midPnt1 = getThirdPoint(\n      midPnt,\n      midPnt1,\n      Math.PI / 2,\n      len / 5,\n      clockWise\n    );\n    midPnt2 = getThirdPoint(\n      midPnt,\n      midPnt2,\n      Math.PI / 2,\n      len / 4,\n      clockWise\n    );\n    const points = [midPnt, midPnt1, midPnt2, pnt3];\n    const arrowPnts = this.getArrowHeadPoints(points);\n    if (arrowPnts && Array.isArray(arrowPnts) && arrowPnts.length > 0) {\n      const neckLeftPoint = arrowPnts[0];\n      const neckRightPoint = arrowPnts[4];\n      const tailWidthFactor = MathDistance(pnt1, pnt2) / getBaseLength(points) / 2;\n      const bodyPnts = this.getArrowBodyPoints(\n        points,\n        neckLeftPoint,\n        neckRightPoint,\n        tailWidthFactor\n      );\n      if (bodyPnts) {\n        const n = bodyPnts.length;\n        let lPoints = bodyPnts.slice(0, n / 2);\n        let rPoints = bodyPnts.slice(n / 2, n);\n        lPoints.push(neckLeftPoint);\n        rPoints.push(neckRightPoint);\n        lPoints = lPoints.reverse();\n        lPoints.push(pnt2);\n        rPoints = rPoints.reverse();\n        rPoints.push(pnt1);\n        return lPoints.reverse().concat(arrowPnts, rPoints);\n      }\n    } else {\n      throw new Error(\"Interpolation Error\");\n    }\n  }\n  getArrowBodyPoints(points, neckLeft, neckRight, tailWidthFactor) {\n    const allLen = wholeDistance(points);\n    const len = getBaseLength(points);\n    const tailWidth = len * tailWidthFactor;\n    const neckWidth = MathDistance(neckLeft, neckRight);\n    const widthDif = (tailWidth - neckWidth) / 2;\n    let tempLen = 0;\n    let leftBodyPnts = [];\n    let rightBodyPnts = [];\n    for (let i = 1; i < points.length - 1; i++) {\n      const angle = getAngleOfThreePoints(points[i - 1], points[i], points[i + 1]) / 2;\n      tempLen += MathDistance(points[i - 1], points[i]);\n      const w = (tailWidth / 2 - tempLen / allLen * widthDif) / Math.sin(angle);\n      const left = getThirdPoint(\n        points[i - 1],\n        points[i],\n        Math.PI - angle,\n        w,\n        true\n      );\n      const right = getThirdPoint(\n        points[i - 1],\n        points[i],\n        angle,\n        w,\n        false\n      );\n      leftBodyPnts.push(left);\n      rightBodyPnts.push(right);\n    }\n    return leftBodyPnts.concat(rightBodyPnts);\n  }\n  getArrowHeadPoints(points) {\n    const len = getBaseLength(points);\n    const headHeight = len * this.headHeightFactor;\n    const headPnt = points[points.length - 1];\n    const headWidth = headHeight * this.headWidthFactor;\n    const neckWidth = headHeight * this.neckWidthFactor;\n    const neckHeight = headHeight * this.neckHeightFactor;\n    const headEndPnt = getThirdPoint(\n      points[points.length - 2],\n      headPnt,\n      0,\n      headHeight,\n      true\n    );\n    const neckEndPnt = getThirdPoint(\n      points[points.length - 2],\n      headPnt,\n      0,\n      neckHeight,\n      true\n    );\n    const headLeft = getThirdPoint(\n      headPnt,\n      headEndPnt,\n      Math.PI / 2,\n      headWidth,\n      false\n    );\n    const headRight = getThirdPoint(\n      headPnt,\n      headEndPnt,\n      Math.PI / 2,\n      headWidth,\n      true\n    );\n    const neckLeft = getThirdPoint(\n      headPnt,\n      neckEndPnt,\n      Math.PI / 2,\n      neckWidth,\n      false\n    );\n    const neckRight = getThirdPoint(\n      headPnt,\n      neckEndPnt,\n      Math.PI / 2,\n      neckWidth,\n      true\n    );\n    return [neckLeft, headLeft, headPnt, headRight, neckRight];\n  }\n  getPoints() {\n    return this.points;\n  }\n  getBezierControlPointforGrowthAnimation() {\n    return this.isClockWise ? {\n      left: this.curveControlPointLeft,\n      right: this.curveControlPointRight\n    } : {\n      right: this.curveControlPointLeft,\n      left: this.curveControlPointRight\n    };\n  }\n}\nexport {\n  DoubleArrow as default\n};\n", "import Base from \"../base.mjs\";\nclass FreehandLine extends Base {\n  constructor(cesium, viewer, style) {\n    super(cesium, viewer, style);\n    this.points = [];\n    this.cesium = cesium;\n    this.freehand = true;\n    this.setState(\"drawing\");\n  }\n  getType() {\n    return \"line\";\n  }\n  /**\n   * Add points only on click events\n   */\n  addPoint(cartesian) {\n    this.points.push(cartesian);\n    if (this.points.length < 2) {\n      this.onMouseMove();\n    } else {\n      this.finishDrawing();\n    }\n  }\n  /**\n   * Draw a shape based on mouse movement points during the initial drawing.\n   */\n  updateMovingPoint(cartesian) {\n    this.points.push(cartesian);\n    this.setGeometryPoints(this.points);\n    this.drawLine();\n    this.eventDispatcher.dispatchEvent(\"drawUpdate\", cartesian);\n  }\n  /**\n   * In edit mode, drag key points to update corresponding key point data.\n   */\n  updateDraggingPoint(cartesian, index) {\n    this.points[index] = cartesian;\n    this.setGeometryPoints(this.points);\n    this.drawLine();\n  }\n  getPoints() {\n    return this.points;\n  }\n}\nexport {\n  FreehandLine as default\n};\n", "import Base from \"../base.mjs\";\nclass FreehandPolygon extends Base {\n  constructor(cesium, viewer, style) {\n    super(cesium, viewer, style);\n    this.points = [];\n    this.cesium = cesium;\n    this.freehand = true;\n    this.setState(\"drawing\");\n  }\n  getType() {\n    return \"polygon\";\n  }\n  /**\n   * Add points only on click events\n   */\n  addPoint(cartesian) {\n    this.points.push(cartesian);\n    if (this.points.length === 1) {\n      this.onMouseMove();\n    } else if (this.points.length > 2) {\n      this.finishDrawing();\n    }\n  }\n  /**\n   * Draw a shape based on mouse movement points during the initial drawing.\n   */\n  updateMovingPoint(cartesian) {\n    this.points.push(cartesian);\n    if (this.points.length > 2) {\n      this.setGeometryPoints(this.points);\n      this.drawPolygon();\n      this.eventDispatcher.dispatchEvent(\"drawUpdate\", cartesian);\n    }\n  }\n  /**\n   * In edit mode, drag key points to update corresponding key point data.\n   */\n  updateDraggingPoint(cartesian, index) {\n    this.points[index] = cartesian;\n    this.setGeometryPoints(this.points);\n    this.drawPolygon();\n  }\n  getPoints() {\n    return this.points;\n  }\n}\nexport {\n  FreehandPolygon as default\n};\n", "import { getCurvePoints } from \"../utils.mjs\";\nimport Base from \"../base.mjs\";\nclass Curve extends Base {\n  constructor(cesium, viewer, style) {\n    super(cesium, viewer, style);\n    this.points = [];\n    this.arrowLengthScale = 5;\n    this.maxArrowLength = 3e6;\n    this.cesium = cesium;\n    this.t = 0.3;\n    this.setState(\"drawing\");\n    this.onDoubleClick();\n  }\n  getType() {\n    return \"line\";\n  }\n  /**\n   * Points are only added upon click events.\n   */\n  addPoint(cartesian) {\n    this.points.push(cartesian);\n    if (this.points.length < 2) {\n      this.onMouseMove();\n    } else if (this.points.length === 2) {\n      this.setGeometryPoints(this.points);\n      this.drawLine();\n    }\n  }\n  /**\n   * Draw the shape based on the mouse movement position during the initial drawing.\n   */\n  updateMovingPoint(cartesian) {\n    const tempPoints = [...this.points, cartesian];\n    let geometryPoints = [];\n    if (tempPoints.length === 2) {\n      this.setGeometryPoints(tempPoints);\n      this.drawLine();\n    } else {\n      geometryPoints = this.createGraphic(tempPoints);\n      this.setGeometryPoints(geometryPoints);\n    }\n  }\n  /**\n   * During editing mode, drag key points to update the corresponding data.\n   */\n  updateDraggingPoint(cartesian, index) {\n    this.points[index] = cartesian;\n    const geometryPoints = this.createGraphic(this.points);\n    this.setGeometryPoints(geometryPoints);\n    this.drawLine();\n  }\n  /**\n   * Generate geometric shape points based on key points..\n   */\n  createGraphic(positions) {\n    const lnglatPoints = positions.map((pnt) => {\n      return this.cartesianToLnglat(pnt);\n    });\n    const curvePoints = getCurvePoints(this.t, lnglatPoints);\n    const temp = [].concat(...curvePoints);\n    const cartesianPoints = this.cesium.Cartesian3.fromDegreesArray(temp);\n    return cartesianPoints;\n  }\n  getPoints() {\n    return this.points;\n  }\n}\nexport {\n  Curve as default\n};\n", "import Base from \"../base.mjs\";\nimport { Mid } from \"../utils.mjs\";\nclass Ellipse extends Base {\n  constructor(cesium, viewer, style) {\n    super(cesium, viewer, style);\n    this.points = [];\n    this.cesium = cesium;\n    this.freehand = true;\n    this.setState(\"drawing\");\n  }\n  getType() {\n    return \"polygon\";\n  }\n  /**\n   * Add points only on click events\n   */\n  addPoint(cartesian) {\n    this.points.push(cartesian);\n    if (this.points.length === 1) {\n      this.onMouseMove();\n    } else if (this.points.length > 1) {\n      this.finishDrawing();\n    }\n  }\n  /**\n   * Draw a shape based on mouse movement points during the initial drawing.\n   */\n  updateMovingPoint(cartesian) {\n    const tempPoints = [...this.points, cartesian];\n    const geometryPoints = this.createGraphic(tempPoints);\n    this.setGeometryPoints(geometryPoints);\n    this.drawPolygon();\n  }\n  /**\n   * In edit mode, drag key points to update corresponding key point data.\n   */\n  updateDraggingPoint(cartesian, index) {\n    this.points[index] = cartesian;\n    const geometryPoints = this.createGraphic(this.points);\n    this.setGeometryPoints(geometryPoints);\n    this.drawPolygon();\n  }\n  createGraphic(positions) {\n    const lnglatPoints = positions.map((pnt) => {\n      return this.cartesianToLnglat(pnt);\n    });\n    const pnt1 = lnglatPoints[0];\n    const pnt2 = lnglatPoints[1];\n    const center = Mid(pnt1, pnt2);\n    const majorRadius = Math.abs((pnt1[0] - pnt2[0]) / 2);\n    const minorRadius = Math.abs((pnt1[1] - pnt2[1]) / 2);\n    const res = this.generatePoints(center, majorRadius, minorRadius);\n    const temp = [].concat(...res);\n    const cartesianPoints = this.cesium.Cartesian3.fromDegreesArray(temp);\n    return cartesianPoints;\n  }\n  generatePoints(center, majorRadius, minorRadius) {\n    let [x, y, angle, points] = [null, null, 0, []];\n    for (let i = 0; i <= 100; i++) {\n      angle = Math.PI * 2 * i / 100;\n      x = center[0] + majorRadius * Math.cos(angle);\n      y = center[1] + minorRadius * Math.sin(angle);\n      points.push([x, y]);\n    }\n    return points;\n  }\n  getPoints() {\n    return this.points;\n  }\n}\nexport {\n  Ellipse as default\n};\n", "import Base from \"../base.mjs\";\nimport { Mid, MathDistance, getThirdPoint, getCircleCenterOfThreePoints, getAzimuth, isClockWise, getArcPoints } from \"../utils.mjs\";\nclass Lune extends Base {\n  constructor(cesium, viewer, style) {\n    super(cesium, viewer, style);\n    this.points = [];\n    this.cesium = cesium;\n    this.freehand = true;\n    this.setState(\"drawing\");\n  }\n  getType() {\n    return \"polygon\";\n  }\n  /**\n   * Add points only on click events\n   */\n  addPoint(cartesian) {\n    this.points.push(cartesian);\n    if (this.points.length === 1) {\n      this.onMouseMove();\n    } else if (this.points.length === 2) ;\n    else if (this.points.length > 2) {\n      this.finishDrawing();\n    }\n  }\n  /**\n   * Draw a shape based on mouse movement points during the initial drawing.\n   */\n  updateMovingPoint(cartesian) {\n    const tempPoints = [...this.points, cartesian];\n    const geometryPoints = this.createGraphic(tempPoints);\n    this.setGeometryPoints(geometryPoints);\n    this.drawPolygon();\n  }\n  /**\n   * In edit mode, drag key points to update corresponding key point data.\n   */\n  updateDraggingPoint(cartesian, index) {\n    this.points[index] = cartesian;\n    const geometryPoints = this.createGraphic(this.points);\n    this.setGeometryPoints(geometryPoints);\n    this.drawPolygon();\n  }\n  createGraphic(positions) {\n    const lnglatPoints = positions.map((pnt) => {\n      return this.cartesianToLnglat(pnt);\n    });\n    if (lnglatPoints.length === 2) {\n      const mid = Mid(lnglatPoints[0], lnglatPoints[1]);\n      const d = MathDistance(lnglatPoints[0], mid);\n      const pnt = getThirdPoint(\n        lnglatPoints[0],\n        mid,\n        Math.PI / 2,\n        d,\n        false\n      );\n      lnglatPoints.push(pnt);\n    }\n    let [pnt1, pnt2, pnt3, startAngle, endAngle] = [\n      lnglatPoints[0],\n      lnglatPoints[1],\n      lnglatPoints[2],\n      void 0,\n      void 0\n    ];\n    const center = getCircleCenterOfThreePoints(pnt1, pnt2, pnt3);\n    const radius = MathDistance(pnt1, center);\n    const angle1 = getAzimuth(pnt1, center);\n    const angle2 = getAzimuth(pnt2, center);\n    if (isClockWise(pnt1, pnt2, pnt3)) {\n      startAngle = angle2;\n      endAngle = angle1;\n    } else {\n      startAngle = angle1;\n      endAngle = angle2;\n    }\n    let points = getArcPoints(center, radius, startAngle, endAngle);\n    const temp = [].concat(...points);\n    const cartesianPoints = this.cesium.Cartesian3.fromDegreesArray(temp);\n    return cartesianPoints;\n  }\n  getPoints() {\n    return this.points;\n  }\n}\nexport {\n  Lune as default\n};\n", "import Base from \"../base.mjs\";\nclass Rectangle extends Base {\n  constructor(cesium, viewer, style) {\n    super(cesium, viewer, style);\n    this.points = [];\n    this.cesium = cesium;\n    this.setState(\"drawing\");\n  }\n  getType() {\n    return \"polygon\";\n  }\n  /**\n   * Add points only on click events\n   */\n  addPoint(cartesian) {\n    this.points.push(cartesian);\n    if (this.points.length === 1) {\n      this.onMouseMove();\n    } else if (this.points.length > 1) {\n      this.finishDrawing();\n    }\n  }\n  /**\n   * Draw a shape based on mouse movement points during the initial drawing.\n   */\n  updateMovingPoint(cartesian) {\n    const tempPoints = [...this.points, cartesian];\n    const geometryPoints = this.createGraphic(tempPoints);\n    this.setGeometryPoints(geometryPoints);\n    this.drawPolygon();\n  }\n  /**\n   * In edit mode, drag key points to update corresponding key point data.\n   */\n  updateDraggingPoint(cartesian, index) {\n    this.points[index] = cartesian;\n    const geometryPoints = this.createGraphic(this.points);\n    this.setGeometryPoints(geometryPoints);\n    this.drawPolygon();\n  }\n  createGraphic(positions) {\n    const [p1, p2] = positions.map(this.cartesianToLnglat);\n    const coords = [...p1, p1[0], p2[1], ...p2, p2[0], p1[1], ...p1];\n    const cartesianPoints = this.cesium.Cartesian3.fromDegreesArray(coords);\n    return cartesianPoints;\n  }\n  getPoints() {\n    return this.points;\n  }\n}\nexport {\n  Rectangle as default\n};\n", "import Base from \"../base.mjs\";\nclass Triangle extends Base {\n  constructor(cesium, viewer, style) {\n    super(cesium, viewer, style);\n    this.points = [];\n    this.cesium = cesium;\n    this.setState(\"drawing\");\n  }\n  getType() {\n    return \"polygon\";\n  }\n  /**\n   * Add points only on click events\n   */\n  addPoint(cartesian) {\n    this.points.push(cartesian);\n    if (this.points.length === 1) {\n      this.onMouseMove();\n    } else if (this.points.length === 3) {\n      this.finishDrawing();\n    }\n  }\n  /**\n   * Draw a shape based on mouse movement points during the initial drawing.\n   */\n  updateMovingPoint(cartesian) {\n    const tempPoints = [...this.points, cartesian];\n    this.setGeometryPoints(tempPoints);\n    if (tempPoints.length === 2) {\n      this.addTempLine();\n    } else {\n      this.removeTempLine();\n      this.drawPolygon();\n    }\n  }\n  /**\n   * In edit mode, drag key points to update corresponding key point data.\n   */\n  updateDraggingPoint(cartesian, index) {\n    this.points[index] = cartesian;\n    this.setGeometryPoints(this.points);\n    this.drawPolygon();\n  }\n  getPoints() {\n    return this.points;\n  }\n}\nexport {\n  Triangle as default\n};\n", "import Base from \"../base.mjs\";\nclass Polygon extends Base {\n  constructor(cesium, viewer, style) {\n    super(cesium, viewer, style);\n    this.points = [];\n    this.cesium = cesium;\n    this.setState(\"drawing\");\n    this.onDoubleClick();\n  }\n  getType() {\n    return \"polygon\";\n  }\n  /**\n   * Add points only on click events\n   */\n  addPoint(cartesian) {\n    this.points.push(cartesian);\n    if (this.points.length === 1) {\n      this.onMouseMove();\n    }\n  }\n  /**\n   * Draw a shape based on mouse movement points during the initial drawing.\n   */\n  updateMovingPoint(cartesian) {\n    const tempPoints = [...this.points, cartesian];\n    this.setGeometryPoints(tempPoints);\n    if (tempPoints.length === 2) {\n      this.addTempLine();\n    } else {\n      this.removeTempLine();\n      this.drawPolygon();\n    }\n  }\n  /**\n   * In edit mode, drag key points to update corresponding key point data.\n   */\n  updateDraggingPoint(cartesian, index) {\n    this.points[index] = cartesian;\n    this.setGeometryPoints(this.points);\n    this.drawPolygon();\n  }\n  getPoints() {\n    return this.points;\n  }\n}\nexport {\n  Polygon as default\n};\n", "import Base from \"../base.mjs\";\nimport { MathDistance } from \"../utils.mjs\";\nclass Circle extends Base {\n  constructor(cesium, viewer, style) {\n    super(cesium, viewer, style);\n    this.points = [];\n    this.cesium = cesium;\n    this.freehand = true;\n    this.setState(\"drawing\");\n  }\n  getType() {\n    return \"polygon\";\n  }\n  /**\n   * Add points only on click events\n   */\n  addPoint(cartesian) {\n    this.points.push(cartesian);\n    if (this.points.length === 1) {\n      this.onMouseMove();\n    } else if (this.points.length > 1) {\n      this.finishDrawing();\n    }\n  }\n  /**\n   * Draw a shape based on mouse movement points during the initial drawing.\n   */\n  updateMovingPoint(cartesian) {\n    const tempPoints = [...this.points, cartesian];\n    const geometryPoints = this.createGraphic(tempPoints);\n    this.setGeometryPoints(geometryPoints);\n    this.drawPolygon();\n  }\n  /**\n   * In edit mode, drag key points to update corresponding key point data.\n   */\n  updateDraggingPoint(cartesian, index) {\n    this.points[index] = cartesian;\n    const geometryPoints = this.createGraphic(this.points);\n    this.setGeometryPoints(geometryPoints);\n    this.drawPolygon();\n  }\n  createGraphic(positions) {\n    const lnglatPoints = positions.map((pnt) => {\n      return this.cartesianToLnglat(pnt);\n    });\n    const center = lnglatPoints[0];\n    const pnt2 = lnglatPoints[1];\n    const radius = MathDistance(center, pnt2);\n    const res = this.generatePoints(center, radius);\n    const temp = [].concat(...res);\n    const cartesianPoints = this.cesium.Cartesian3.fromDegreesArray(temp);\n    return cartesianPoints;\n  }\n  generatePoints(center, radius) {\n    let x, y, angle;\n    const points = [];\n    for (let i = 0; i <= 100; i++) {\n      angle = Math.PI * 2 * i / 100;\n      x = center[0] + radius * Math.cos(angle);\n      y = center[1] + radius * Math.sin(angle);\n      points.push([x, y]);\n    }\n    return points;\n  }\n  getPoints() {\n    return this.points;\n  }\n}\nexport {\n  Circle as default\n};\n", "import Base from \"../base.mjs\";\nimport { MathDistance, getAzimuth, getArcPoints } from \"../utils.mjs\";\nclass Sector extends Base {\n  constructor(cesium, viewer, style) {\n    super(cesium, viewer, style);\n    this.points = [];\n    this.cesium = cesium;\n    this.setState(\"drawing\");\n  }\n  getType() {\n    return \"polygon\";\n  }\n  /**\n   * Add points only on click events\n   */\n  addPoint(cartesian) {\n    this.points.push(cartesian);\n    if (this.points.length === 1) {\n      this.onMouseMove();\n    } else if (this.points.length === 3) {\n      this.finishDrawing();\n    }\n  }\n  /**\n   * Draw a shape based on mouse movement points during the initial drawing.\n   */\n  updateMovingPoint(cartesian) {\n    const tempPoints = [...this.points, cartesian];\n    this.setGeometryPoints(tempPoints);\n    if (tempPoints.length === 2) {\n      this.addTempLine();\n    } else {\n      this.removeTempLine();\n      const geometryPoints = this.createGraphic(tempPoints);\n      this.setGeometryPoints(geometryPoints);\n      this.drawPolygon();\n    }\n  }\n  createGraphic(positions) {\n    const lnglatPoints = positions.map((pnt) => {\n      return this.cartesianToLnglat(pnt);\n    });\n    const [center, pnt2, pnt3] = [\n      lnglatPoints[0],\n      lnglatPoints[1],\n      lnglatPoints[2]\n    ];\n    const radius = MathDistance(pnt2, center);\n    const startAngle = getAzimuth(pnt2, center);\n    const endAngle = getAzimuth(pnt3, center);\n    const res = getArcPoints(center, radius, startAngle, endAngle);\n    res.push(center, res[0]);\n    const temp = [].concat(...res);\n    const cartesianPoints = this.cesium.Cartesian3.fromDegreesArray(temp);\n    return cartesianPoints;\n  }\n  /**\n   * In edit mode, drag key points to update corresponding key point data.\n   */\n  updateDraggingPoint(cartesian, index) {\n    this.points[index] = cartesian;\n    const geometryPoints = this.createGraphic(this.points);\n    this.setGeometryPoints(geometryPoints);\n    this.drawPolygon();\n  }\n  getPoints() {\n    return this.points;\n  }\n}\nexport {\n  Sector as default\n};\n", "import Base from \"../base.mjs\";\nimport { Mid, MathDistance, getThirdPoint, getBisectorNormals, getCubicValue } from \"../utils.mjs\";\nclass GatheringPlace extends Base {\n  constructor(cesium, viewer, style) {\n    super(cesium, viewer, style);\n    this.points = [];\n    this.cesium = cesium;\n    this.freehand = true;\n    this.t = 0.4;\n    this.setState(\"drawing\");\n  }\n  getType() {\n    return \"polygon\";\n  }\n  /**\n   * Add points only on click events\n   */\n  addPoint(cartesian) {\n    this.points.push(cartesian);\n    if (this.points.length === 1) {\n      this.onMouseMove();\n    } else if (this.points.length === 2) ;\n    else if (this.points.length > 2) {\n      this.finishDrawing();\n    }\n  }\n  /**\n   * Draw a shape based on mouse movement points during the initial drawing.\n   */\n  updateMovingPoint(cartesian) {\n    const tempPoints = [...this.points, cartesian];\n    const geometryPoints = this.createGraphic(tempPoints);\n    this.setGeometryPoints(geometryPoints);\n    this.drawPolygon();\n  }\n  /**\n   * In edit mode, drag key points to update corresponding key point data.\n   */\n  updateDraggingPoint(cartesian, index) {\n    this.points[index] = cartesian;\n    const geometryPoints = this.createGraphic(this.points);\n    this.setGeometryPoints(geometryPoints);\n    this.drawPolygon();\n  }\n  createGraphic(positions) {\n    let arr = [];\n    let lnglatPoints = positions.map((pnt) => {\n      return this.cartesianToLnglat(pnt);\n    }).slice(0);\n    if (lnglatPoints.length === 2) {\n      const mid2 = Mid(lnglatPoints[0], lnglatPoints[1]);\n      const d = MathDistance(lnglatPoints[0], mid2);\n      const pnt = getThirdPoint(\n        lnglatPoints[0],\n        mid2,\n        Math.PI / 2,\n        d,\n        true\n      );\n      lnglatPoints = [lnglatPoints[0], pnt, lnglatPoints[1]];\n    }\n    let mid = Mid(lnglatPoints[0], lnglatPoints[2]);\n    lnglatPoints.push(mid, lnglatPoints[0], lnglatPoints[1]);\n    let [normals, pnt1, pnt2, pnt3, pList] = [\n      [],\n      void 0,\n      void 0,\n      void 0,\n      []\n    ];\n    for (let i = 0; i < lnglatPoints.length - 2; i++) {\n      pnt1 = lnglatPoints[i];\n      pnt2 = lnglatPoints[i + 1];\n      pnt3 = lnglatPoints[i + 2];\n      let normalPoints = getBisectorNormals(\n        this.t,\n        pnt1,\n        pnt2,\n        pnt3\n      );\n      normals = normals.concat(normalPoints);\n    }\n    let count = normals.length;\n    normals = [normals[count - 1]].concat(normals.slice(0, count - 1));\n    for (let i = 0; i < lnglatPoints.length - 2; i++) {\n      pnt1 = lnglatPoints[i];\n      pnt2 = lnglatPoints[i + 1];\n      pList.push(pnt1);\n      for (let t = 0; t <= 40; t++) {\n        let pnt = getCubicValue(\n          t / 40,\n          pnt1,\n          normals[i * 2],\n          normals[i * 2 + 1],\n          pnt2\n        );\n        pList.push(pnt);\n      }\n      pList.push(pnt2);\n    }\n    let points = pList;\n    for (let i = 0; i < points.length; i++) {\n      arr = arr.concat(points[i]);\n    }\n    const cartesianPoints = Cesium.Cartesian3.fromDegreesArray(arr);\n    return cartesianPoints;\n  }\n  getPoints() {\n    return this.points;\n  }\n}\nexport {\n  GatheringPlace as default\n};\n", "import { getCircleCenterOfThreePoints, MathDistance, getAzimuth, isClockWise, getArcPoints } from \"../utils.mjs\";\nimport Base from \"../base.mjs\";\nclass Arc extends Base {\n  constructor(cesium, viewer, style) {\n    super(cesium, viewer, style);\n    this.points = [];\n    this.arrowLengthScale = 5;\n    this.maxArrowLength = 3e6;\n    this.cesium = cesium;\n    this.t = 0.3;\n    this.setState(\"drawing\");\n    this.onDoubleClick();\n  }\n  getType() {\n    return \"line\";\n  }\n  /**\n   * Points are only added upon click events.\n   */\n  addPoint(cartesian) {\n    this.points.push(cartesian);\n    if (this.points.length < 2) {\n      this.onMouseMove();\n    } else if (this.points.length === 2) {\n      this.setGeometryPoints(this.points);\n      this.drawLine();\n    } else if (this.points.length > 2) {\n      this.finishDrawing();\n    }\n  }\n  /**\n   * Draw the shape based on the mouse movement position during the initial drawing.\n   */\n  updateMovingPoint(cartesian) {\n    const tempPoints = [...this.points, cartesian];\n    let geometryPoints = [];\n    if (tempPoints.length === 2) {\n      this.setGeometryPoints(tempPoints);\n      this.drawLine();\n    } else {\n      geometryPoints = this.createGraphic(tempPoints);\n      this.setGeometryPoints(geometryPoints);\n    }\n  }\n  /**\n   * During editing mode, drag key points to update the corresponding data.\n   */\n  updateDraggingPoint(cartesian, index) {\n    this.points[index] = cartesian;\n    const geometryPoints = this.createGraphic(this.points);\n    this.setGeometryPoints(geometryPoints);\n    this.drawLine();\n  }\n  /**\n   * Generate geometric shape points based on key points..\n   */\n  createGraphic(positions) {\n    const lnglatPoints = positions.map((pnt) => {\n      return this.cartesianToLnglat(pnt);\n    });\n    let count = lnglatPoints.length;\n    let arr = [];\n    if (count < 2) return;\n    if (count === 2) {\n      for (let i = 0; i < lnglatPoints.length; i++) {\n        arr = arr.concat(lnglatPoints[i]);\n      }\n      const cartesianPoints = Cesium.Cartesian3.fromDegreesArray(arr);\n      return cartesianPoints;\n    } else {\n      let [pnt1, pnt2, pnt3, startAngle, endAngle] = [\n        lnglatPoints[0],\n        lnglatPoints[1],\n        lnglatPoints[2],\n        null,\n        null\n      ];\n      let center = getCircleCenterOfThreePoints(pnt1, pnt2, pnt3);\n      let radius = MathDistance(pnt1, center);\n      let angle1 = getAzimuth(pnt1, center);\n      let angle2 = getAzimuth(pnt2, center);\n      if (isClockWise(pnt1, pnt2, pnt3)) {\n        startAngle = angle2;\n        endAngle = angle1;\n      } else {\n        startAngle = angle1;\n        endAngle = angle2;\n      }\n      let points = getArcPoints(center, radius, startAngle, endAngle);\n      for (let i = 0; i < points.length; i++) {\n        arr = arr.concat(points[i]);\n      }\n      const cartesianPoints = Cesium.Cartesian3.fromDegreesArray(arr);\n      return cartesianPoints;\n    }\n  }\n  getPoints() {\n    return this.points;\n  }\n}\nexport {\n  Arc as default\n};\n", "import Base from \"../base.mjs\";\nclass Polyline extends Base {\n  constructor(cesium, viewer, style) {\n    super(cesium, viewer, style);\n    this.points = [];\n    this.arrowLengthScale = 5;\n    this.maxArrowLength = 3e6;\n    this.cesium = cesium;\n    this.t = 0.3;\n    this.setState(\"drawing\");\n    this.onDoubleClick();\n  }\n  getType() {\n    return \"line\";\n  }\n  /**\n   * Points are only added upon click events.\n   */\n  addPoint(cartesian) {\n    this.points.push(cartesian);\n    if (this.points.length < 2) {\n      this.onMouseMove();\n    } else if (this.points.length === 2) {\n      this.setGeometryPoints(this.points);\n      this.drawLine();\n    }\n  }\n  /**\n   * Draw the shape based on the mouse movement position during the initial drawing.\n   */\n  updateMovingPoint(cartesian) {\n    const tempPoints = [...this.points, cartesian];\n    let geometryPoints = [];\n    if (tempPoints.length === 2) {\n      this.setGeometryPoints(tempPoints);\n      this.drawLine();\n    } else {\n      geometryPoints = this.createGraphic(tempPoints);\n      this.setGeometryPoints(geometryPoints);\n    }\n  }\n  /**\n   * During editing mode, drag key points to update the corresponding data.\n   */\n  updateDraggingPoint(cartesian, index) {\n    this.points[index] = cartesian;\n    const geometryPoints = this.createGraphic(this.points);\n    this.setGeometryPoints(geometryPoints);\n    this.drawLine();\n  }\n  /**\n   * Generate geometric shape points based on key points..\n   */\n  createGraphic(positions) {\n    const lnglatPoints = positions.map((pnt) => {\n      return this.cartesianToLnglat(pnt);\n    });\n    let arr = [];\n    for (let i = 0; i < lnglatPoints.length; i++) {\n      arr = arr.concat(lnglatPoints[i]);\n    }\n    const cartesianPoints = Cesium.Cartesian3.fromDegreesArray(arr);\n    return cartesianPoints;\n  }\n  getPoints() {\n    return this.points;\n  }\n}\nexport {\n  Polyline as default\n};\n", "import Base from \"../base.mjs\";\nimport { getBisectorNormals, getCubicValue } from \"../utils.mjs\";\nclass ClosedCurve extends Base {\n  constructor(cesium, viewer, style) {\n    super(cesium, viewer, style);\n    this.points = [];\n    this.cesium = cesium;\n    this.freehand = true;\n    this.t = 0.4;\n    this.setState(\"drawing\");\n    this.onDoubleClick();\n  }\n  getType() {\n    return \"polygon\";\n  }\n  /**\n   * Add points only on click events\n   */\n  addPoint(cartesian) {\n    this.points.push(cartesian);\n    if (this.points.length === 1) {\n      this.onMouseMove();\n    }\n  }\n  /**\n   * Draw a shape based on mouse movement points during the initial drawing.\n   */\n  updateMovingPoint(cartesian) {\n    const tempPoints = [...this.points, cartesian];\n    const geometryPoints = this.createGraphic(tempPoints);\n    this.setGeometryPoints(geometryPoints);\n    this.drawPolygon();\n  }\n  /**\n   * In edit mode, drag key points to update corresponding key point data.\n   */\n  updateDraggingPoint(cartesian, index) {\n    this.points[index] = cartesian;\n    const geometryPoints = this.createGraphic(this.points);\n    this.setGeometryPoints(geometryPoints);\n    this.drawPolygon();\n  }\n  createGraphic(positions) {\n    let arr = [];\n    let lnglatPoints = positions.map((pnt) => {\n      return this.cartesianToLnglat(pnt);\n    });\n    if (lnglatPoints.length === 2) {\n      for (let i = 0; i < lnglatPoints.length; i++) {\n        arr = arr.concat(lnglatPoints[i]);\n      }\n      const cartesianPoints = Cesium.Cartesian3.fromDegreesArray(arr);\n      return cartesianPoints;\n    } else {\n      let pnts = lnglatPoints.slice(0);\n      pnts.push(pnts[0], pnts[1]);\n      let [normals, pList] = [[], []];\n      for (let i = 0; i < pnts.length - 2; i++) {\n        let normalPoints = getBisectorNormals(\n          this.t,\n          pnts[i],\n          pnts[i + 1],\n          pnts[i + 2]\n        );\n        normals = normals.concat(normalPoints);\n      }\n      let count = normals.length;\n      normals = [normals[count - 1]].concat(normals.slice(0, count - 1));\n      for (let i = 0; i < pnts.length - 2; i++) {\n        let pnt1 = pnts[i];\n        let pnt2 = pnts[i + 1];\n        pList.push(pnt1);\n        for (let t = 0; t <= 40; t++) {\n          let pnt = getCubicValue(\n            t / 40,\n            pnt1,\n            normals[i * 2],\n            normals[i * 2 + 1],\n            pnt2\n          );\n          pList.push(pnt);\n        }\n        pList.push(pnt2);\n      }\n      let points = pList;\n      for (let i = 0; i < points.length; i++) {\n        arr = arr.concat(points[i]);\n      }\n      const cartesianPoints = Cesium.Cartesian3.fromDegreesArray(arr);\n      return cartesianPoints;\n    }\n  }\n  getPoints() {\n    return this.points;\n  }\n}\nexport {\n  ClosedCurve as default\n};\n", "import Base from \"../base.mjs\";\nclass Point extends Base {\n  constructor(cesium, viewer, style) {\n    super(cesium, viewer, style);\n    this.points = [];\n    this.cesium = cesium;\n    this.setState(\"drawing\");\n  }\n  getType() {\n    return \"point\";\n  }\n  /**\n   * Add points only on click events\n   */\n  addPoint(cartesian) {\n    this.points.push(cartesian);\n    if (this.points.length === 1) {\n      this.drawPoint();\n      this.finishDrawing();\n    }\n  }\n  /**\n   * Draw a shape based on mouse movement points during the initial drawing.\n   */\n  updateMovingPoint(cartesian) {\n    const tempPoints = [...this.points, cartesian];\n    this.setGeometryPoints(tempPoints);\n  }\n  /**\n   * In edit mode, drag key points to update corresponding key point data.\n   */\n  updateDraggingPoint(cartesian, index) {\n    this.points[index] = cartesian;\n    this.setGeometryPoints(this.points);\n  }\n  getPoints() {\n    return this.points;\n  }\n}\nexport {\n  Point as default\n};\n", "import FineArrow from \"./arrow/fine-arrow.mjs\";\nimport AttackArrow from \"./arrow/attack-arrow.mjs\";\nimport SwallowtailAttackArrow from \"./arrow/swallowtail-attack-arrow.mjs\";\nimport SquadCombat from \"./arrow/squad-combat.mjs\";\nimport SwallowtailSquadCombat from \"./arrow/swallowtail-squad-combat.mjs\";\nimport StraightArrow from \"./arrow/straight-arrow.mjs\";\nimport CurvedArrow from \"./arrow/curved-arrow.mjs\";\nimport AssaultDirection from \"./arrow/assault-direction.mjs\";\nimport DoubleArrow from \"./arrow/double-arrow.mjs\";\nimport FreehandLine from \"./line/freehand-line.mjs\";\nimport FreehandPolygon from \"./polygon/freehand-polygon.mjs\";\nimport Curve from \"./line/curve.mjs\";\nimport Ellipse from \"./polygon/ellipse.mjs\";\nimport Lune from \"./polygon/lune.mjs\";\nimport Rectangle from \"./polygon/rectangle.mjs\";\nimport Triangle from \"./polygon/triangle.mjs\";\nimport Polygon from \"./polygon/polygon.mjs\";\nimport Circle from \"./polygon/circle.mjs\";\nimport Sector from \"./polygon/sector.mjs\";\nimport GatheringPlace from \"./polygon/gathering-place.mjs\";\nimport Arc from \"./line/arc.mjs\";\nimport Polyline from \"./line/polyline.mjs\";\nimport ClosedCurve from \"./polygon/closed-curve.mjs\";\nimport Point from \"./point/point.mjs\";\nconst CesiumPlot = {\n  FineArrow,\n  AttackArrow,\n  SwallowtailAttackArrow,\n  SquadCombat,\n  SwallowtailSquadCombat,\n  StraightArrow,\n  CurvedArrow,\n  AssaultDirection,\n  DoubleArrow,\n  FreehandLine,\n  FreehandPolygon,\n  Curve,\n  Ellipse,\n  Lune,\n  Reactangle: Rectangle,\n  Triangle,\n  Polygon,\n  Circle,\n  Sector,\n  GatheringPlace,\n  Arc,\n  Polyline,\n  ClosedCurve,\n  Point\n};\nCesiumPlot.createGeometryFromData = (cesium, viewer, opts) => {\n  console.log(\"执行了\");\n  const { type, style, cartesianPoints } = opts;\n  const geometry = new CesiumPlot[type](cesium, viewer, style);\n  geometry.points = cartesianPoints;\n  const geometryPoints = geometry.createGraphic(cartesianPoints);\n  geometry.setGeometryPoints(geometryPoints);\n  if (geometry.type == \"polygon\") {\n    geometry.drawPolygon();\n  } else {\n    geometry.drawLine();\n  }\n  geometry.finishDrawing();\n  geometry.onClick();\n  return geometry;\n};\nexport {\n  CesiumPlot as default\n};\n", "function FS_Snow() {\n  return \"#version 300 es\\n    precision highp float;\\n    uniform sampler2D colorTexture;\\n    in vec2 v_textureCoordinates;\\n    out vec4 fragColor;\\n\\n    float snow(vec2 uv, float scale) {\\n        float time = czm_frameNumber / 60.0;\\n        float w = smoothstep(1.0, 0.0, -uv.y * (scale / 10.0));\\n        if (w < 0.1) return 0.0;\\n        uv += time / scale;\\n        uv.y += time * 2.0 / scale;\\n        uv.x += sin(uv.y + time * 0.5) / scale;\\n        uv *= scale;\\n        vec2 s = floor(uv), f = fract(uv), p;\\n        float k = 3.0, d;\\n        p = 0.5 + 0.35 * sin(11.0 * fract(sin((s + p + scale) * mat2(7, 3, 6, 5)) * 5.0)) - f;\\n        d = length(p);\\n        k = min(d, k);\\n        k = smoothstep(0.0, k, sin(f.x + f.y) * 0.01);\\n        return k * w;\\n    }\\n\\n    void main(void) {\\n        vec2 resolution = czm_viewport.zw;\\n        vec2 uv = (gl_FragCoord.xy * 2.0 - resolution.xy) / min(resolution.x, resolution.y);\\n        vec3 finalColor = vec3(0.0);\\n        float c = 0.0;\\n        c += snow(uv, 30.0) * 0.0;\\n        c += snow(uv, 20.0) * 0.0;\\n        c += snow(uv, 15.0) * 0.0;\\n        c += snow(uv, 10.0);\\n        c += snow(uv, 8.0);\\n        c += snow(uv, 6.0);\\n        c += snow(uv, 5.0);\\n        finalColor = vec3(c);\\n        fragColor = mix(texture(colorTexture, v_textureCoordinates), vec4(finalColor, 1.0), 0.3);\\n    }\\n\";\n}\nfunction FS_Rain() {\n  return `#version 300 es\n    precision highp float;\n    uniform sampler2D colorTexture;\n    in vec2 v_textureCoordinates;\n    out vec4 fragColor;\n\n    float hash(float x) {\n      return fract(sin(x * 23.3) * 13.13);\n    }\n\n    void main(void) {\n      float time = czm_frameNumber / 60.0;\n      vec2 resolution = czm_viewport.zw;\n\n      vec2 uv = (gl_FragCoord.xy * 2.0 - resolution.xy) / min(resolution.x, resolution.y);\n      vec3 c = vec3(0.6, 0.7, 0.8);\n\n      float a = -0.4;\n      float si = sin(a), co = cos(a);\n      uv *= mat2(co, -si, si, co);\n      uv *= length(uv + vec2(0, 4.9)) * 0.3 + 1.0;\n\n      float v = 1.0 - sin(hash(floor(uv.x * 100.0)) * 2.0);\n      float b = clamp(abs(sin(20.0 * time * v + uv.y * (5.0 / (2.0 + v)))) - 0.95, 0.0, 1.0) * 20.0;\n      c *= v * b;\n\n      fragColor = mix(texture(colorTexture, v_textureCoordinates), vec4(c, 1.0), 0.5);\n    }\n  `;\n}\nfunction addSnowScene(viewer) {\n  let collection = viewer.scene.postProcessStages;\n  let fs_snow = FS_Snow();\n  let snow = new Cesium.PostProcessStage({\n    name: \"czm_snow\",\n    fragmentShader: fs_snow\n  });\n  collection.add(snow);\n}\nfunction addRainScene(viewer) {\n  let collection = viewer.scene.postProcessStages;\n  let fs_rain = FS_Rain();\n  let rain = new Cesium.PostProcessStage({\n    name: \"czm_rain\",\n    fragmentShader: fs_rain\n  });\n  collection.add(rain);\n}\nexport {\n  addRainScene,\n  addSnowScene\n};\n", "async function CesiumUseEcharts(Cesium, viewer, option, canvasConfig) {\n  (function(e) {\n    const t = {};\n    function n(r) {\n      if (t[r]) return t[r].exports;\n      const i = t[r] = {\n        i: r,\n        l: false,\n        exports: {}\n      };\n      return e[r].call(i.exports, i, i.exports, n), i.l = true, i.exports;\n    }\n    n.m = e, n.c = t, n.d = function(e2, t2, r) {\n      n.o(e2, t2) || Object.defineProperty(e2, t2, {\n        enumerable: true,\n        get: r\n      });\n    }, n.r = function(e2) {\n      \"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e2, Symbol.toStringTag, {\n        value: \"Module\"\n      }), Object.defineProperty(e2, \"__esModule\", {\n        value: true\n      });\n    }, n.t = function(e2, t2) {\n      if (1 & t2 && (e2 = n(e2)), 8 & t2) return e2;\n      if (4 & t2 && \"object\" == typeof e2 && e2 && e2.__esModule) return e2;\n      const r = /* @__PURE__ */ Object.create(null);\n      if (n.r(r), Object.defineProperty(r, \"default\", {\n        enumerable: true,\n        value: e2\n      }), 2 & t2 && \"string\" != typeof e2)\n        for (let i in e2)\n          n.d(\n            r,\n            i,\n            (function(t3) {\n              return e2[t3];\n            }).bind(null, i)\n          );\n      return r;\n    }, n.n = function(e2) {\n      let t2 = e2 && e2.__esModule ? function() {\n        return e2.default;\n      } : function() {\n        return e2;\n      };\n      return n.d(t2, \"a\", t2), t2;\n    }, n.o = function(e2, t2) {\n      return Object.prototype.hasOwnProperty.call(e2, t2);\n    }, n.p = \"\", n(n.s = 0);\n  })([\n    function(e, t, n) {\n      e.exports = n(1);\n    },\n    function(e, t, n) {\n      echarts ? n(2).load() : console.error(\"missing echarts lib\");\n    },\n    function(e, t, n) {\n      function r(e2, t2) {\n        for (let n2 = 0; n2 < t2.length; n2++) {\n          let r2 = t2[n2];\n          r2.enumerable = r2.enumerable || false, r2.configurable = true, \"value\" in r2 && (r2.writable = true), Object.defineProperty(e2, r2.key, r2);\n        }\n      }\n      n.r(t);\n      let i = function() {\n        function e2(t3, n3) {\n          !function(e3, t4) {\n            if (!(e3 instanceof t4))\n              throw new TypeError(\"Cannot call a class as a function\");\n          }(this, e2), this._viewer = t3, this.dimensions = [\"lng\", \"lat\"], this._mapOffset = [0, 0], this._api = n3;\n        }\n        let t2, n2, i2;\n        return t2 = e2, i2 = [\n          {\n            key: \"create\",\n            value: function(t3, n3) {\n              let r2;\n              t3.eachComponent(\"GLMap\", function(t4) {\n                (r2 = new e2(echartsWrapper.cesiumViewer, n3)).setMapOffset(\n                  t4.__mapOffset || [0, 0]\n                ), t4.coordinateSystem = r2;\n              }), t3.eachSeries(function(e3) {\n                \"GLMap\" === e3.get(\"coordinateSystem\") && (e3.coordinateSystem = r2);\n              });\n            }\n          },\n          {\n            key: \"dimensions\",\n            get: function() {\n              return [\"lng\", \"lat\"];\n            }\n          }\n        ], (n2 = [\n          {\n            key: \"setMapOffset\",\n            value: function(e3) {\n              return this._mapOffset = e3, this;\n            }\n          },\n          {\n            key: \"getViewer\",\n            value: function() {\n              return this._viewer;\n            }\n          },\n          {\n            key: \"dataToPoint\",\n            value: function(e3) {\n              let t3 = this._viewer.scene, n3 = [0, 0], r2 = Cesium.Cartesian3.fromDegrees(e3[0], e3[1]);\n              if (!r2) return n3;\n              if (t3.mode === Cesium.SceneMode.SCENE3D && Cesium.Cartesian3.angleBetween(t3.camera.position, r2) > Cesium.Math.toRadians(80))\n                return false;\n              let i3 = t3.cartesianToCanvasCoordinates(r2);\n              return i3 ? [i3.x - this._mapOffset[0], i3.y - this._mapOffset[1]] : n3;\n            }\n          },\n          {\n            key: \"pointToData\",\n            value: function(e3) {\n              let t3 = this._mapOffset, n3 = viewer.scene.globe.ellipsoid, r2 = new Cesium.cartesian3(e3[1] + t3, e3[2] + t3[2], 0), i3 = n3.cartesianToCartographic(r2);\n              return [i3.lng, i3.lat];\n            }\n          },\n          {\n            key: \"getViewRect\",\n            value: function() {\n              let e3 = this._api;\n              return new echarts.graphic.BoundingRect(\n                0,\n                0,\n                e3.getWidth(),\n                e3.getHeight()\n              );\n            }\n          },\n          {\n            key: \"getRoamTransform\",\n            value: function() {\n              return echarts.matrix.create();\n            }\n          }\n        ]) && r(t2.prototype, n2), i2 && r(t2, i2), e2;\n      }();\n      echarts.extendComponentModel({\n        type: \"GLMap\",\n        getViewer: function() {\n          return echartsWrapper.cesiumViewer;\n        },\n        defaultOption: {\n          roam: false\n        }\n      }), echarts.extendComponentView({\n        type: \"GLMap\",\n        init: function(e2, t2) {\n          this.api = t2, echartsWrapper.cesiumViewer.scene.postRender.addEventListener(\n            this.moveHandler,\n            this\n          );\n        },\n        moveHandler: function(e2, t2) {\n          this.api.dispatchAction({\n            type: \"GLMapRoam\"\n          });\n        },\n        render: function(e2, t2, n2) {\n        },\n        dispose: function(e2) {\n          echartsWrapper.cesiumViewer.scene.postRender.removeEventListener(\n            this.moveHandler,\n            this\n          );\n        }\n      });\n      function a() {\n        echarts.registerCoordinateSystem(\"GLMap\", i), echarts.registerAction(\n          {\n            type: \"GLMapRoam\",\n            event: \"GLMapRoam\",\n            update: \"updateLayout\"\n          },\n          function(e2, t2) {\n          }\n        );\n      }\n      n.d(t, \"load\", function() {\n        return a;\n      });\n    }\n  ]);\n  console.log(\"echarts\", echarts);\n  const echartsWrapper = { ...echarts, cesiumViewer: viewer };\n  function hrcEcharts(t, e, canvasConfig2) {\n    this._canvasConfig = canvasConfig2;\n    this._mapContainer = t;\n    this.viewer = viewer;\n    this._overlay = this._createChartOverlay();\n    this._overlay.setOption(e);\n  }\n  hrcEcharts.prototype._createChartOverlay = function() {\n    console.log(this);\n    const t = this._mapContainer.scene;\n    t.canvas.setAttribute(\"tabIndex\", 0);\n    const e = document.createElement(\"div\");\n    e.style.position = \"absolute\";\n    if (this._canvasConfig) {\n      e.style.top = \"0px\";\n      e.style.left = \"0px\";\n      e.style.width = this._canvasConfig.width + \"rem\";\n      e.style.height = this._canvasConfig.height + \"rem\";\n      e.style.pointerEvents = \"none\";\n    } else {\n      e.style.top = \"0px\";\n      e.style.left = \"0px\";\n      e.style.width = \"120rem\";\n      e.style.height = \"55rem\";\n      e.style.pointerEvents = \"none\";\n    }\n    const l = document.getElementsByClassName(\"echartMap\").length;\n    e.setAttribute(\n      \"id\",\n      \"ysCesium-echarts-\" + parseInt(Math.random() * 99999) + \"-\" + l\n    );\n    e.setAttribute(\"class\", \"echartMap\");\n    this._mapContainer.container.appendChild(e);\n    this._echartsContainer = e;\n    return echarts.init(e);\n  };\n  hrcEcharts.prototype.dispose = function() {\n    this._echartsContainer && (this._mapContainer.container.removeChild(this._echartsContainer), this._echartsContainer = null), this._overlay && (this._overlay.dispose(), this._overlay = null);\n  };\n  hrcEcharts.prototype.updateOverlay = function(t) {\n    this._overlay && this._overlay.setOption(t);\n  };\n  hrcEcharts.prototype.getMap = function() {\n    return this._mapContainer;\n  };\n  hrcEcharts.prototype.getOverlay = function() {\n    return this._overlay;\n  };\n  hrcEcharts.prototype.show = function() {\n    document.getElementById(this._id).style.visibility = \"visible\";\n  };\n  hrcEcharts.prototype.hide = function() {\n    document.getElementById(this._id).style.visibility = \"hidden\";\n  };\n  let data = new hrcEcharts(viewer, option, canvasConfig);\n  return data;\n}\nexport {\n  CesiumUseEcharts as default\n};\n", "let base = {\n  config: {\n    // radius: 10,\n    // maxOpacity: .5,\n    // minOpacity: 0,\n    // blur: .75\n  },\n  canvas: {\n    width: 1e3,\n    delta: 50\n  },\n  _bounds: {\n    min: { lat: Number.MAX_VALUE, lng: Number.MAX_VALUE },\n    max: { lat: Number.MIN_VALUE, lng: Number.MIN_VALUE }\n  }\n};\nvar CesiumData;\nfunction CesiumHeatMap(Cesium, viewer, data, config) {\n  this.viewer = viewer;\n  CesiumData = Cesium;\n  base.config = Object.assign({}, base.config, config);\n  base.config.container = document.createElement(\"canvas\");\n  this.setData(data);\n}\nCesiumHeatMap.prototype._parseData = function(data) {\n  let parseData = {\n    max: Number.MIN_VALUE,\n    data: []\n  };\n  base.bounds = JSON.parse(JSON.stringify(base._bounds));\n  data.map((v) => {\n    base.bounds.min.lat = Math.min(base.bounds.min.lat, v.lat);\n    base.bounds.min.lng = Math.min(base.bounds.min.lng, v.lng);\n    base.bounds.max.lat = Math.max(base.bounds.max.lat, v.lat);\n    base.bounds.max.lng = Math.max(base.bounds.max.lng, v.lng);\n  });\n  base.canvas.height = Math.floor(\n    base.canvas.width * (base.bounds.max.lat - base.bounds.min.lat) / (base.bounds.max.lng - base.bounds.min.lng)\n  );\n  parseData.delta = {\n    x: base.canvas.width / (base.bounds.max.lng - base.bounds.min.lng),\n    y: base.canvas.height / (base.bounds.max.lat - base.bounds.min.lat)\n  };\n  data.map((v) => {\n    let value = !isNaN(parseInt(v.value)) ? parseInt(v.value) : 1;\n    parseData.max = Math.max(parseData.max, value);\n    parseData.data.push({\n      x: base.canvas.delta + Math.floor(parseData.delta.x * (v.lng - base.bounds.min.lng)),\n      y: Math.floor(\n        base.canvas.height + base.canvas.delta - parseData.delta.y * (v.lat - base.bounds.min.lat)\n      ),\n      value\n    });\n  });\n  base.config.container.width = base.canvas.width + base.canvas.delta * 2;\n  base.config.container.height = base.canvas.height + base.canvas.delta * 2;\n  document.body.appendChild(base.config.container);\n  this.heatmapInstance = h337.create(base.config);\n  return parseData;\n};\nCesiumHeatMap.prototype.remove = function() {\n  this.viewer.entities.removeById(base.config.id);\n};\nCesiumHeatMap.prototype.show = function() {\n  this.entity && (this.entity.rectangle.show = true);\n};\nCesiumHeatMap.prototype.hide = function() {\n  this.entity && (this.entity.rectangle.show = false);\n};\nCesiumHeatMap.prototype.fromLatLngToPoint = function(latLng) {\n  let y = (1 - Math.log(\n    Math.tan(latLng.lat * Math.PI / 180) + 1 / Math.cos(latLng.lat * Math.PI / 180)\n  ) / Math.PI) / 2 * 256;\n  return { x: 256 * (0.5 + latLng.lng / 360), y };\n};\nCesiumHeatMap.prototype.setData = function(data) {\n  base.config.container.style.display = \"block\";\n  data = this._parseData(data);\n  this.viewer.entities.removeById(base.config.id);\n  this.heatmapInstance.setData(data);\n  base.config.id = (/* @__PURE__ */ new Date()).getTime();\n  this.entity = this.viewer.entities.add({\n    id: base.config.id,\n    zIndex: -100,\n    rectangle: {\n      heightReference: CesiumData.HeightReference.CLAMP_TO_GROUND,\n      coordinates: CesiumData.Rectangle.fromDegrees(\n        Math.max(\n          base.bounds.min.lng - (base.bounds.max.lng - base.bounds.min.lng) * base.canvas.delta / base.canvas.width,\n          -180\n        ),\n        Math.max(\n          base.bounds.min.lat - (base.bounds.max.lat - base.bounds.min.lat) * base.canvas.delta / base.canvas.height,\n          -90\n        ),\n        Math.min(\n          base.bounds.max.lng + (base.bounds.max.lng - base.bounds.min.lng) * base.canvas.delta / base.canvas.width,\n          180\n        ),\n        Math.min(\n          base.bounds.max.lat + (base.bounds.max.lat - base.bounds.min.lat) * base.canvas.delta / base.canvas.height,\n          90\n        )\n      ),\n      outline: true,\n      outlineWidth: 10,\n      outlineColor: CesiumData.Color.YELLOW,\n      materials: CesiumData.Color.RED,\n      material: new CesiumData.ImageMaterialProperty({\n        image: this.heatmapInstance.getDataURL(),\n        repeat: new CesiumData.Cartesian2(1, 1),\n        transparent: true\n      })\n    }\n  });\n  base.config.container.style.display = \"none\";\n};\nexport {\n  CesiumHeatMap as default\n};\n", "import {\n  BBox,\n  Feature,\n  FeatureCollection,\n  Geometry,\n  GeometryCollection,\n  GeometryObject,\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n  Position,\n  GeoJsonProperties,\n} from \"geojson\";\n\nimport { Id } from \"./lib/geojson.js\";\nexport * from \"./lib/geojson.js\";\n\n// TurfJS Combined Types\nexport type Coord = Feature<Point> | Point | Position;\n\n// TurfJS String Types\nexport type Units =\n  | \"meters\"\n  | \"metres\"\n  | \"millimeters\"\n  | \"millimetres\"\n  | \"centimeters\"\n  | \"centimetres\"\n  | \"kilometers\"\n  | \"kilometres\"\n  | \"miles\"\n  | \"nauticalmiles\"\n  | \"inches\"\n  | \"yards\"\n  | \"feet\"\n  | \"radians\"\n  | \"degrees\";\nexport type AreaUnits =\n  | Exclude<Units, \"radians\" | \"degrees\">\n  | \"acres\"\n  | \"hectares\";\nexport type Grid = \"point\" | \"square\" | \"hex\" | \"triangle\";\nexport type Corners = \"sw\" | \"se\" | \"nw\" | \"ne\" | \"center\" | \"centroid\";\n\nexport type Lines = LineString | MultiLineString | Polygon | MultiPolygon;\nexport type AllGeoJSON =\n  | Feature\n  | FeatureCollection\n  | Geometry\n  | GeometryCollection;\n\n/**\n * @module helpers\n */\n\n/**\n * The Earth radius in kilometers. Used by Turf modules that model the Earth as a sphere. The {@link https://en.wikipedia.org/wiki/Earth_radius#Arithmetic_mean_radius mean radius} was selected because it is {@link https://rosettacode.org/wiki/Haversine_formula#:~:text=This%20value%20is%20recommended recommended } by the Haversine formula (used by turf/distance) to reduce error.\n * @memberof helpers\n * @type {number}\n */\nexport const earthRadius = 6371008.8;\n\n/**\n * Unit of measurement factors based on earthRadius.\n *\n * Keys are the name of the unit, values are the number of that unit in a single radian\n *\n * @memberof helpers\n * @type {Object}\n */\nexport const factors: Record<Units, number> = {\n  centimeters: earthRadius * 100,\n  centimetres: earthRadius * 100,\n  degrees: 360 / (2 * Math.PI),\n  feet: earthRadius * 3.28084,\n  inches: earthRadius * 39.37,\n  kilometers: earthRadius / 1000,\n  kilometres: earthRadius / 1000,\n  meters: earthRadius,\n  metres: earthRadius,\n  miles: earthRadius / 1609.344,\n  millimeters: earthRadius * 1000,\n  millimetres: earthRadius * 1000,\n  nauticalmiles: earthRadius / 1852,\n  radians: 1,\n  yards: earthRadius * 1.0936,\n};\n\n/**\n\n * Area of measurement factors based on 1 square meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport const areaFactors: Record<AreaUnits, number> = {\n  acres: 0.000247105,\n  centimeters: 10000,\n  centimetres: 10000,\n  feet: 10.763910417,\n  hectares: 0.0001,\n  inches: 1550.003100006,\n  kilometers: 0.000001,\n  kilometres: 0.000001,\n  meters: 1,\n  metres: 1,\n  miles: 3.86e-7,\n  nauticalmiles: 2.9155334959812285e-7,\n  millimeters: 1000000,\n  millimetres: 1000000,\n  yards: 1.195990046,\n};\n\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nexport function feature<\n  G extends GeometryObject = Geometry,\n  P extends GeoJsonProperties = GeoJsonProperties,\n>(\n  geom: G | null,\n  properties?: P,\n  options: { bbox?: BBox; id?: Id } = {}\n): Feature<G, P> {\n  const feat: any = { type: \"Feature\" };\n  if (options.id === 0 || options.id) {\n    feat.id = options.id;\n  }\n  if (options.bbox) {\n    feat.bbox = options.bbox;\n  }\n  feat.properties = properties || {};\n  feat.geometry = geom;\n  return feat;\n}\n\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<any>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = \"Point\";\n * var coordinates = [110, 50];\n * var geometry = turf.geometry(type, coordinates);\n * // => geometry\n */\nexport function geometry(\n  type:\n    | \"Point\"\n    | \"LineString\"\n    | \"Polygon\"\n    | \"MultiPoint\"\n    | \"MultiLineString\"\n    | \"MultiPolygon\",\n  coordinates: any[],\n  _options: Record<string, never> = {}\n) {\n  switch (type) {\n    case \"Point\":\n      return point(coordinates).geometry;\n    case \"LineString\":\n      return lineString(coordinates).geometry;\n    case \"Polygon\":\n      return polygon(coordinates).geometry;\n    case \"MultiPoint\":\n      return multiPoint(coordinates).geometry;\n    case \"MultiLineString\":\n      return multiLineString(coordinates).geometry;\n    case \"MultiPolygon\":\n      return multiPolygon(coordinates).geometry;\n    default:\n      throw new Error(type + \" is invalid\");\n  }\n}\n\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nexport function point<P extends GeoJsonProperties = GeoJsonProperties>(\n  coordinates: Position,\n  properties?: P,\n  options: { bbox?: BBox; id?: Id } = {}\n): Feature<Point, P> {\n  if (!coordinates) {\n    throw new Error(\"coordinates is required\");\n  }\n  if (!Array.isArray(coordinates)) {\n    throw new Error(\"coordinates must be an Array\");\n  }\n  if (coordinates.length < 2) {\n    throw new Error(\"coordinates must be at least 2 numbers long\");\n  }\n  if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) {\n    throw new Error(\"coordinates must contain numbers\");\n  }\n\n  const geom: Point = {\n    type: \"Point\",\n    coordinates,\n  };\n  return feature(geom, properties, options);\n}\n\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nexport function points<P extends GeoJsonProperties = GeoJsonProperties>(\n  coordinates: Position[],\n  properties?: P,\n  options: { bbox?: BBox; id?: Id } = {}\n): FeatureCollection<Point, P> {\n  return featureCollection(\n    coordinates.map((coords) => {\n      return point(coords, properties);\n    }),\n    options\n  );\n}\n\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nexport function polygon<P extends GeoJsonProperties = GeoJsonProperties>(\n  coordinates: Position[][],\n  properties?: P,\n  options: { bbox?: BBox; id?: Id } = {}\n): Feature<Polygon, P> {\n  for (const ring of coordinates) {\n    if (ring.length < 4) {\n      throw new Error(\n        \"Each LinearRing of a Polygon must have 4 or more Positions.\"\n      );\n    }\n\n    if (ring[ring.length - 1].length !== ring[0].length) {\n      throw new Error(\"First and last Position are not equivalent.\");\n    }\n\n    for (let j = 0; j < ring[ring.length - 1].length; j++) {\n      // Check if first point of Polygon contains two numbers\n      if (ring[ring.length - 1][j] !== ring[0][j]) {\n        throw new Error(\"First and last Position are not equivalent.\");\n      }\n    }\n  }\n  const geom: Polygon = {\n    type: \"Polygon\",\n    coordinates,\n  };\n  return feature(geom, properties, options);\n}\n\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nexport function polygons<P extends GeoJsonProperties = GeoJsonProperties>(\n  coordinates: Position[][][],\n  properties?: P,\n  options: { bbox?: BBox; id?: Id } = {}\n): FeatureCollection<Polygon, P> {\n  return featureCollection(\n    coordinates.map((coords) => {\n      return polygon(coords, properties);\n    }),\n    options\n  );\n}\n\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nexport function lineString<P extends GeoJsonProperties = GeoJsonProperties>(\n  coordinates: Position[],\n  properties?: P,\n  options: { bbox?: BBox; id?: Id } = {}\n): Feature<LineString, P> {\n  if (coordinates.length < 2) {\n    throw new Error(\"coordinates must be an array of two or more positions\");\n  }\n  const geom: LineString = {\n    type: \"LineString\",\n    coordinates,\n  };\n  return feature(geom, properties, options);\n}\n\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nexport function lineStrings<P extends GeoJsonProperties = GeoJsonProperties>(\n  coordinates: Position[][],\n  properties?: P,\n  options: { bbox?: BBox; id?: Id } = {}\n): FeatureCollection<LineString, P> {\n  return featureCollection(\n    coordinates.map((coords) => {\n      return lineString(coords, properties);\n    }),\n    options\n  );\n}\n\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nexport function featureCollection<\n  G extends GeometryObject = Geometry,\n  P extends GeoJsonProperties = GeoJsonProperties,\n>(\n  features: Array<Feature<G, P>>,\n  options: { bbox?: BBox; id?: Id } = {}\n): FeatureCollection<G, P> {\n  const fc: any = { type: \"FeatureCollection\" };\n  if (options.id) {\n    fc.id = options.id;\n  }\n  if (options.bbox) {\n    fc.bbox = options.bbox;\n  }\n  fc.features = features;\n  return fc;\n}\n\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nexport function multiLineString<\n  P extends GeoJsonProperties = GeoJsonProperties,\n>(\n  coordinates: Position[][],\n  properties?: P,\n  options: { bbox?: BBox; id?: Id } = {}\n): Feature<MultiLineString, P> {\n  const geom: MultiLineString = {\n    type: \"MultiLineString\",\n    coordinates,\n  };\n  return feature(geom, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nexport function multiPoint<P extends GeoJsonProperties = GeoJsonProperties>(\n  coordinates: Position[],\n  properties?: P,\n  options: { bbox?: BBox; id?: Id } = {}\n): Feature<MultiPoint, P> {\n  const geom: MultiPoint = {\n    type: \"MultiPoint\",\n    coordinates,\n  };\n  return feature(geom, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nexport function multiPolygon<P extends GeoJsonProperties = GeoJsonProperties>(\n  coordinates: Position[][][],\n  properties?: P,\n  options: { bbox?: BBox; id?: Id } = {}\n): Feature<MultiPolygon, P> {\n  const geom: MultiPolygon = {\n    type: \"MultiPolygon\",\n    coordinates,\n  };\n  return feature(geom, properties, options);\n}\n\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = turf.geometry(\"Point\", [100, 0]);\n * var line = turf.geometry(\"LineString\", [[101, 0], [102, 1]]);\n * var collection = turf.geometryCollection([pt, line]);\n *\n * // => collection\n */\nexport function geometryCollection<\n  P extends GeoJsonProperties = GeoJsonProperties,\n>(\n  geometries: Array<\n    Point | LineString | Polygon | MultiPoint | MultiLineString | MultiPolygon\n  >,\n  properties?: P,\n  options: { bbox?: BBox; id?: Id } = {}\n): Feature<GeometryCollection, P> {\n  const geom: GeometryCollection = {\n    type: \"GeometryCollection\",\n    geometries,\n  };\n  return feature(geom, properties, options);\n}\n\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nexport function round(num: number, precision = 0): number {\n  if (precision && !(precision >= 0)) {\n    throw new Error(\"precision must be a positive number\");\n  }\n  const multiplier = Math.pow(10, precision || 0);\n  return Math.round(num * multiplier) / multiplier;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} distance\n */\nexport function radiansToLength(\n  radians: number,\n  units: Units = \"kilometers\"\n): number {\n  const factor = factors[units];\n  if (!factor) {\n    throw new Error(units + \" units is invalid\");\n  }\n  return radians * factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} radians\n */\nexport function lengthToRadians(\n  distance: number,\n  units: Units = \"kilometers\"\n): number {\n  const factor = factors[units];\n  if (!factor) {\n    throw new Error(units + \" units is invalid\");\n  }\n  return distance / factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nexport function lengthToDegrees(distance: number, units?: Units): number {\n  return radiansToDegrees(lengthToRadians(distance, units));\n}\n\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nexport function bearingToAzimuth(bearing: number): number {\n  let angle = bearing % 360;\n  if (angle < 0) {\n    angle += 360;\n  }\n  return angle;\n}\n\n/**\n * Converts any azimuth angle from the north line direction (positive clockwise)\n * and returns an angle between -180 and +180 degrees (positive clockwise), 0 being the north line\n *\n * @name azimuthToBearing\n * @param {number} angle between 0 and 360 degrees\n * @returns {number} bearing between -180 and +180 degrees\n */\nexport function azimuthToBearing(angle: number): number {\n  angle = angle % 360;\n  if (angle > 0) return angle > 180 ? angle - 360 : angle;\n  return angle < -180 ? angle + 360 : angle;\n}\n\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nexport function radiansToDegrees(radians: number): number {\n  const degrees = radians % (2 * Math.PI);\n  return (degrees * 180) / Math.PI;\n}\n\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nexport function degreesToRadians(degrees: number): number {\n  const radians = degrees % 360;\n  return (radians * Math.PI) / 180;\n}\n\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {Units} [originalUnit=\"kilometers\"] of the length\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted length\n */\nexport function convertLength(\n  length: number,\n  originalUnit: Units = \"kilometers\",\n  finalUnit: Units = \"kilometers\"\n): number {\n  if (!(length >= 0)) {\n    throw new Error(\"length must be a positive number\");\n  }\n  return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\n\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches, hectares\n * @param {number} area to be converted\n * @param {Units} [originalUnit=\"meters\"] of the distance\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted area\n */\nexport function convertArea(\n  area: number,\n  originalUnit: AreaUnits = \"meters\",\n  finalUnit: AreaUnits = \"kilometers\"\n): number {\n  if (!(area >= 0)) {\n    throw new Error(\"area must be a positive number\");\n  }\n\n  const startFactor = areaFactors[originalUnit];\n  if (!startFactor) {\n    throw new Error(\"invalid original units\");\n  }\n\n  const finalFactor = areaFactors[finalUnit];\n  if (!finalFactor) {\n    throw new Error(\"invalid final units\");\n  }\n\n  return (area / startFactor) * finalFactor;\n}\n\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nexport function isNumber(num: any): boolean {\n  return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false, including false for Arrays and Functions\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nexport function isObject(input: any): boolean {\n  return input !== null && typeof input === \"object\" && !Array.isArray(input);\n}\n\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws {Error} if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nexport function validateBBox(bbox: any): void {\n  if (!bbox) {\n    throw new Error(\"bbox is required\");\n  }\n  if (!Array.isArray(bbox)) {\n    throw new Error(\"bbox must be an Array\");\n  }\n  if (bbox.length !== 4 && bbox.length !== 6) {\n    throw new Error(\"bbox must be an Array of 4 or 6 numbers\");\n  }\n  bbox.forEach((num) => {\n    if (!isNumber(num)) {\n      throw new Error(\"bbox must only contain numbers\");\n    }\n  });\n}\n\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws {Error} if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nexport function validateId(id: any): void {\n  if (!id) {\n    throw new Error(\"id is required\");\n  }\n  if ([\"string\", \"number\"].indexOf(typeof id) === -1) {\n    throw new Error(\"id must be a number or a string\");\n  }\n}\n", "import {\n  Feature,\n  FeatureCollection,\n  Geometry,\n  LineString,\n  MultiPoint,\n  MultiLineString,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from \"geojson\";\nimport { isNumber } from \"@turf/helpers\";\n\n/**\n * Unwrap a coordinate from a Point Feature, Geometry or a single coordinate.\n *\n * @name getCoord\n * @param {Array<number>|Geometry<Point>|Feature<Point>} coord GeoJSON Point or an Array of numbers\n * @returns {Array<number>} coordinates\n * @example\n * var pt = turf.point([10, 10]);\n *\n * var coord = turf.getCoord(pt);\n * //= [10, 10]\n */\nfunction getCoord(coord: Feature<Point> | Point | number[]): number[] {\n  if (!coord) {\n    throw new Error(\"coord is required\");\n  }\n\n  if (!Array.isArray(coord)) {\n    if (\n      coord.type === \"Feature\" &&\n      coord.geometry !== null &&\n      coord.geometry.type === \"Point\"\n    ) {\n      return [...coord.geometry.coordinates];\n    }\n    if (coord.type === \"Point\") {\n      return [...coord.coordinates];\n    }\n  }\n  if (\n    Array.isArray(coord) &&\n    coord.length >= 2 &&\n    !Array.isArray(coord[0]) &&\n    !Array.isArray(coord[1])\n  ) {\n    return [...coord];\n  }\n\n  throw new Error(\"coord must be GeoJSON Point or an Array of numbers\");\n}\n\n/**\n * Unwrap coordinates from a Feature, Geometry Object or an Array\n *\n * @name getCoords\n * @param {Array<any>|Geometry|Feature} coords Feature, Geometry Object or an Array\n * @returns {Array<any>} coordinates\n * @example\n * var poly = turf.polygon([[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]);\n *\n * var coords = turf.getCoords(poly);\n * //= [[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]\n */\nfunction getCoords<\n  G extends\n    | Point\n    | LineString\n    | Polygon\n    | MultiPoint\n    | MultiLineString\n    | MultiPolygon,\n>(coords: any[] | Feature<G> | G): any[] {\n  if (Array.isArray(coords)) {\n    return coords;\n  }\n\n  // Feature\n  if (coords.type === \"Feature\") {\n    if (coords.geometry !== null) {\n      return coords.geometry.coordinates;\n    }\n  } else {\n    // Geometry\n    if (coords.coordinates) {\n      return coords.coordinates;\n    }\n  }\n\n  throw new Error(\n    \"coords must be GeoJSON Feature, Geometry Object or an Array\"\n  );\n}\n\n/**\n * Checks if coordinates contains a number\n *\n * @name containsNumber\n * @param {Array<any>} coordinates GeoJSON Coordinates\n * @returns {boolean} true if Array contains a number\n */\nfunction containsNumber(coordinates: any[]): boolean {\n  if (\n    coordinates.length > 1 &&\n    isNumber(coordinates[0]) &&\n    isNumber(coordinates[1])\n  ) {\n    return true;\n  }\n\n  if (Array.isArray(coordinates[0]) && coordinates[0].length) {\n    return containsNumber(coordinates[0]);\n  }\n  throw new Error(\"coordinates must only contain numbers\");\n}\n\n/**\n * Enforce expectations about types of GeoJSON objects for Turf.\n *\n * @name geojsonType\n * @param {GeoJSON} value any GeoJSON object\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nfunction geojsonType(value: any, type: string, name: string): void {\n  if (!type || !name) {\n    throw new Error(\"type and name required\");\n  }\n\n  if (!value || value.type !== type) {\n    throw new Error(\n      \"Invalid input to \" +\n        name +\n        \": must be a \" +\n        type +\n        \", given \" +\n        value.type\n    );\n  }\n}\n\n/**\n * Enforce expectations about types of {@link Feature} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name featureOf\n * @param {Feature} feature a feature with an expected geometry type\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} error if value is not the expected type.\n */\nfunction featureOf(feature: Feature<any>, type: string, name: string): void {\n  if (!feature) {\n    throw new Error(\"No feature passed\");\n  }\n  if (!name) {\n    throw new Error(\".featureOf() requires a name\");\n  }\n  if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n    throw new Error(\n      \"Invalid input to \" + name + \", Feature with geometry required\"\n    );\n  }\n  if (!feature.geometry || feature.geometry.type !== type) {\n    throw new Error(\n      \"Invalid input to \" +\n        name +\n        \": must be a \" +\n        type +\n        \", given \" +\n        feature.geometry.type\n    );\n  }\n}\n\n/**\n * Enforce expectations about types of {@link FeatureCollection} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name collectionOf\n * @param {FeatureCollection} featureCollection a FeatureCollection for which features will be judged\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nfunction collectionOf(\n  featureCollection: FeatureCollection<any>,\n  type: string,\n  name: string\n) {\n  if (!featureCollection) {\n    throw new Error(\"No featureCollection passed\");\n  }\n  if (!name) {\n    throw new Error(\".collectionOf() requires a name\");\n  }\n  if (!featureCollection || featureCollection.type !== \"FeatureCollection\") {\n    throw new Error(\n      \"Invalid input to \" + name + \", FeatureCollection required\"\n    );\n  }\n  for (const feature of featureCollection.features) {\n    if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n      throw new Error(\n        \"Invalid input to \" + name + \", Feature with geometry required\"\n      );\n    }\n    if (!feature.geometry || feature.geometry.type !== type) {\n      throw new Error(\n        \"Invalid input to \" +\n          name +\n          \": must be a \" +\n          type +\n          \", given \" +\n          feature.geometry.type\n      );\n    }\n  }\n}\n\n/**\n * Get Geometry from Feature or Geometry Object\n *\n * @param {Feature|Geometry} geojson GeoJSON Feature or Geometry Object\n * @returns {Geometry|null} GeoJSON Geometry Object\n * @throws {Error} if geojson is not a Feature or Geometry Object\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getGeom(point)\n * //={\"type\": \"Point\", \"coordinates\": [110, 40]}\n */\nfunction getGeom<G extends Geometry>(geojson: Feature<G> | G): G {\n  if (geojson.type === \"Feature\") {\n    return geojson.geometry;\n  }\n  return geojson;\n}\n\n/**\n * Get GeoJSON object's type, Geometry type is prioritize.\n *\n * @param {GeoJSON} geojson GeoJSON object\n * @param {string} [name=\"geojson\"] name of the variable to display in error message (unused)\n * @returns {string} GeoJSON type\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getType(point)\n * //=\"Point\"\n */\nfunction getType(\n  geojson: Feature<any> | FeatureCollection<any> | Geometry,\n  _name?: string\n): string {\n  if (geojson.type === \"FeatureCollection\") {\n    return \"FeatureCollection\";\n  }\n  if (geojson.type === \"GeometryCollection\") {\n    return \"GeometryCollection\";\n  }\n  if (geojson.type === \"Feature\" && geojson.geometry !== null) {\n    return geojson.geometry.type;\n  }\n  return geojson.type;\n}\n\nexport {\n  getCoord,\n  getCoords,\n  containsNumber,\n  geojsonType,\n  featureOf,\n  collectionOf,\n  getGeom,\n  getType,\n};\n// No default export!\n", "// https://en.wikipedia.org/wiki/Rhumb_line\nimport { Coord, degreesToRadians, radiansToDegrees } from \"@turf/helpers\";\nimport { getCoord } from \"@turf/invariant\";\n\n/**\n * Takes two {@link Point|points} and finds the bearing angle between them along a Rhumb line\n * i.e. the angle measured in degrees start the north line (0 degrees)\n *\n * @name rhumbBearing\n * @param {Coord} start starting Point\n * @param {Coord} end ending Point\n * @param {Object} [options] Optional parameters\n * @param {boolean} [options.final=false] calculates the final bearing if true\n * @returns {number} bearing from north in decimal degrees, between -180 and 180 degrees (positive clockwise)\n * @example\n * var point1 = turf.point([-75.343, 39.984], {\"marker-color\": \"#F00\"});\n * var point2 = turf.point([-75.534, 39.123], {\"marker-color\": \"#00F\"});\n *\n * var bearing = turf.rhumbBearing(point1, point2);\n *\n * //addToMap\n * var addToMap = [point1, point2];\n * point1.properties.bearing = bearing;\n * point2.properties.bearing = bearing;\n */\nfunction rhumbBearing(\n  start: Coord,\n  end: Coord,\n  options: { final?: boolean } = {}\n): number {\n  let bear360;\n  if (options.final) {\n    bear360 = calculateRhumbBearing(getCoord(end), getCoord(start));\n  } else {\n    bear360 = calculateRhumbBearing(getCoord(start), getCoord(end));\n  }\n\n  const bear180 = bear360 > 180 ? -(360 - bear360) : bear360;\n\n  return bear180;\n}\n\n/**\n * Returns the bearing from ‘this’ point to destination point along a rhumb line.\n * Adapted from Geodesy: https://github.com/chrisveness/geodesy/blob/master/latlon-spherical.js\n *\n * @private\n * @param   {Array<number>} from - origin point.\n * @param   {Array<number>} to - destination point.\n * @returns {number} Bearing in degrees from north.\n * @example\n * var p1 = new LatLon(51.127, 1.338);\n * var p2 = new LatLon(50.964, 1.853);\n * var d = p1.rhumbBearingTo(p2); // 116.7 m\n */\nfunction calculateRhumbBearing(from: number[], to: number[]) {\n  // φ => phi\n  // Δλ => deltaLambda\n  // Δψ => deltaPsi\n  // θ => theta\n  const phi1 = degreesToRadians(from[1]);\n  const phi2 = degreesToRadians(to[1]);\n  let deltaLambda = degreesToRadians(to[0] - from[0]);\n  // if deltaLambdaon over 180° take shorter rhumb line across the anti-meridian:\n  if (deltaLambda > Math.PI) {\n    deltaLambda -= 2 * Math.PI;\n  }\n  if (deltaLambda < -Math.PI) {\n    deltaLambda += 2 * Math.PI;\n  }\n\n  const deltaPsi = Math.log(\n    Math.tan(phi2 / 2 + Math.PI / 4) / Math.tan(phi1 / 2 + Math.PI / 4)\n  );\n\n  const theta = Math.atan2(deltaLambda, deltaPsi);\n\n  return (radiansToDegrees(theta) + 360) % 360;\n}\n\nexport { rhumbBearing };\nexport default rhumbBearing;\n", "import { feature, point, lineString, isObject } from \"@turf/helpers\";\n\n/**\n * Callback for coordEach\n *\n * @callback coordEachCallback\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Iterate over coordinates in any GeoJSON object, similar to Array.forEach()\n *\n * @name coordEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentCoord, coordIndex, featureIndex, multiFeatureIndex)\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordEach(features, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n  // Handles null Geometry -- Skips this GeoJSON\n  if (geojson === null) return;\n  var j,\n    k,\n    l,\n    geometry,\n    stopG,\n    coords,\n    geometryMaybeCollection,\n    wrapShrink = 0,\n    coordIndex = 0,\n    isGeometryCollection,\n    type = geojson.type,\n    isFeatureCollection = type === \"FeatureCollection\",\n    isFeature = type === \"Feature\",\n    stop = isFeatureCollection ? geojson.features.length : 1;\n\n  // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n  for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n    geometryMaybeCollection = isFeatureCollection\n      ? geojson.features[featureIndex].geometry\n      : isFeature\n        ? geojson.geometry\n        : geojson;\n    isGeometryCollection = geometryMaybeCollection\n      ? geometryMaybeCollection.type === \"GeometryCollection\"\n      : false;\n    stopG = isGeometryCollection\n      ? geometryMaybeCollection.geometries.length\n      : 1;\n\n    for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n      var multiFeatureIndex = 0;\n      var geometryIndex = 0;\n      geometry = isGeometryCollection\n        ? geometryMaybeCollection.geometries[geomIndex]\n        : geometryMaybeCollection;\n\n      // Handles null Geometry -- Skips this geometry\n      if (geometry === null) continue;\n      coords = geometry.coordinates;\n      var geomType = geometry.type;\n\n      wrapShrink =\n        excludeWrapCoord &&\n        (geomType === \"Polygon\" || geomType === \"MultiPolygon\")\n          ? 1\n          : 0;\n\n      switch (geomType) {\n        case null:\n          break;\n        case \"Point\":\n          if (\n            callback(\n              coords,\n              coordIndex,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false\n          )\n            return false;\n          coordIndex++;\n          multiFeatureIndex++;\n          break;\n        case \"LineString\":\n        case \"MultiPoint\":\n          for (j = 0; j < coords.length; j++) {\n            if (\n              callback(\n                coords[j],\n                coordIndex,\n                featureIndex,\n                multiFeatureIndex,\n                geometryIndex\n              ) === false\n            )\n              return false;\n            coordIndex++;\n            if (geomType === \"MultiPoint\") multiFeatureIndex++;\n          }\n          if (geomType === \"LineString\") multiFeatureIndex++;\n          break;\n        case \"Polygon\":\n        case \"MultiLineString\":\n          for (j = 0; j < coords.length; j++) {\n            for (k = 0; k < coords[j].length - wrapShrink; k++) {\n              if (\n                callback(\n                  coords[j][k],\n                  coordIndex,\n                  featureIndex,\n                  multiFeatureIndex,\n                  geometryIndex\n                ) === false\n              )\n                return false;\n              coordIndex++;\n            }\n            if (geomType === \"MultiLineString\") multiFeatureIndex++;\n            if (geomType === \"Polygon\") geometryIndex++;\n          }\n          if (geomType === \"Polygon\") multiFeatureIndex++;\n          break;\n        case \"MultiPolygon\":\n          for (j = 0; j < coords.length; j++) {\n            geometryIndex = 0;\n            for (k = 0; k < coords[j].length; k++) {\n              for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                if (\n                  callback(\n                    coords[j][k][l],\n                    coordIndex,\n                    featureIndex,\n                    multiFeatureIndex,\n                    geometryIndex\n                  ) === false\n                )\n                  return false;\n                coordIndex++;\n              }\n              geometryIndex++;\n            }\n            multiFeatureIndex++;\n          }\n          break;\n        case \"GeometryCollection\":\n          for (j = 0; j < geometry.geometries.length; j++)\n            if (\n              coordEach(geometry.geometries[j], callback, excludeWrapCoord) ===\n              false\n            )\n              return false;\n          break;\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n  }\n}\n\n/**\n * Callback for coordReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback coordReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Reduce coordinates in any GeoJSON object, similar to Array.reduce()\n *\n * @name coordReduce\n * @param {FeatureCollection|Geometry|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentCoord, coordIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordReduce(features, function (previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentCoord;\n * });\n */\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n  var previousValue = initialValue;\n  coordEach(\n    geojson,\n    function (\n      currentCoord,\n      coordIndex,\n      featureIndex,\n      multiFeatureIndex,\n      geometryIndex\n    ) {\n      if (coordIndex === 0 && initialValue === undefined)\n        previousValue = currentCoord;\n      else\n        previousValue = callback(\n          previousValue,\n          currentCoord,\n          coordIndex,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    },\n    excludeWrapCoord\n  );\n  return previousValue;\n}\n\n/**\n * Callback for propEach\n *\n * @callback propEachCallback\n * @param {Object} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over properties in any GeoJSON object, similar to Array.forEach()\n *\n * @name propEach\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentProperties, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propEach(features, function (currentProperties, featureIndex) {\n *   //=currentProperties\n *   //=featureIndex\n * });\n */\nfunction propEach(geojson, callback) {\n  var i;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      for (i = 0; i < geojson.features.length; i++) {\n        if (callback(geojson.features[i].properties, i) === false) break;\n      }\n      break;\n    case \"Feature\":\n      callback(geojson.properties, 0);\n      break;\n  }\n}\n\n/**\n * Callback for propReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback propReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {*} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce properties in any GeoJSON object into a single value,\n * similar to how Array.reduce works. However, in this case we lazily run\n * the reduction, so an array of all properties is unnecessary.\n *\n * @name propReduce\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentProperties, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propReduce(features, function (previousValue, currentProperties, featureIndex) {\n *   //=previousValue\n *   //=currentProperties\n *   //=featureIndex\n *   return currentProperties\n * });\n */\nfunction propReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  propEach(geojson, function (currentProperties, featureIndex) {\n    if (featureIndex === 0 && initialValue === undefined)\n      previousValue = currentProperties;\n    else\n      previousValue = callback(previousValue, currentProperties, featureIndex);\n  });\n  return previousValue;\n}\n\n/**\n * Callback for featureEach\n *\n * @callback featureEachCallback\n * @param {Feature<any>} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name featureEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.featureEach(features, function (currentFeature, featureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n * });\n */\nfunction featureEach(geojson, callback) {\n  if (geojson.type === \"Feature\") {\n    callback(geojson, 0);\n  } else if (geojson.type === \"FeatureCollection\") {\n    for (var i = 0; i < geojson.features.length; i++) {\n      if (callback(geojson.features[i], i) === false) break;\n    }\n  }\n}\n\n/**\n * Callback for featureReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback featureReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name featureReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.featureReduce(features, function (previousValue, currentFeature, featureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   return currentFeature\n * });\n */\nfunction featureReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  featureEach(geojson, function (currentFeature, featureIndex) {\n    if (featureIndex === 0 && initialValue === undefined)\n      previousValue = currentFeature;\n    else previousValue = callback(previousValue, currentFeature, featureIndex);\n  });\n  return previousValue;\n}\n\n/**\n * Get all coordinates from any GeoJSON object.\n *\n * @name coordAll\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @returns {Array<Array<number>>} coordinate position array\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * var coords = turf.coordAll(features);\n * //= [[26, 37], [36, 53]]\n */\nfunction coordAll(geojson) {\n  var coords = [];\n  coordEach(geojson, function (coord) {\n    coords.push(coord);\n  });\n  return coords;\n}\n\n/**\n * Callback for geomEach\n *\n * @callback geomEachCallback\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Iterate over each geometry in any GeoJSON object, similar to Array.forEach()\n *\n * @name geomEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomEach(features, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n * });\n */\nfunction geomEach(geojson, callback) {\n  var i,\n    j,\n    g,\n    geometry,\n    stopG,\n    geometryMaybeCollection,\n    isGeometryCollection,\n    featureProperties,\n    featureBBox,\n    featureId,\n    featureIndex = 0,\n    isFeatureCollection = geojson.type === \"FeatureCollection\",\n    isFeature = geojson.type === \"Feature\",\n    stop = isFeatureCollection ? geojson.features.length : 1;\n\n  // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n  for (i = 0; i < stop; i++) {\n    geometryMaybeCollection = isFeatureCollection\n      ? geojson.features[i].geometry\n      : isFeature\n        ? geojson.geometry\n        : geojson;\n    featureProperties = isFeatureCollection\n      ? geojson.features[i].properties\n      : isFeature\n        ? geojson.properties\n        : {};\n    featureBBox = isFeatureCollection\n      ? geojson.features[i].bbox\n      : isFeature\n        ? geojson.bbox\n        : undefined;\n    featureId = isFeatureCollection\n      ? geojson.features[i].id\n      : isFeature\n        ? geojson.id\n        : undefined;\n    isGeometryCollection = geometryMaybeCollection\n      ? geometryMaybeCollection.type === \"GeometryCollection\"\n      : false;\n    stopG = isGeometryCollection\n      ? geometryMaybeCollection.geometries.length\n      : 1;\n\n    for (g = 0; g < stopG; g++) {\n      geometry = isGeometryCollection\n        ? geometryMaybeCollection.geometries[g]\n        : geometryMaybeCollection;\n\n      // Handle null Geometry\n      if (geometry === null) {\n        if (\n          callback(\n            null,\n            featureIndex,\n            featureProperties,\n            featureBBox,\n            featureId\n          ) === false\n        )\n          return false;\n        continue;\n      }\n      switch (geometry.type) {\n        case \"Point\":\n        case \"LineString\":\n        case \"MultiPoint\":\n        case \"Polygon\":\n        case \"MultiLineString\":\n        case \"MultiPolygon\": {\n          if (\n            callback(\n              geometry,\n              featureIndex,\n              featureProperties,\n              featureBBox,\n              featureId\n            ) === false\n          )\n            return false;\n          break;\n        }\n        case \"GeometryCollection\": {\n          for (j = 0; j < geometry.geometries.length; j++) {\n            if (\n              callback(\n                geometry.geometries[j],\n                featureIndex,\n                featureProperties,\n                featureBBox,\n                featureId\n              ) === false\n            )\n              return false;\n          }\n          break;\n        }\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n    // Only increase `featureIndex` per each feature\n    featureIndex++;\n  }\n}\n\n/**\n * Callback for geomReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback geomReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Reduce geometry in any GeoJSON object, similar to Array.reduce().\n *\n * @name geomReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomReduce(features, function (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=previousValue\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n *   return currentGeometry\n * });\n */\nfunction geomReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  geomEach(\n    geojson,\n    function (\n      currentGeometry,\n      featureIndex,\n      featureProperties,\n      featureBBox,\n      featureId\n    ) {\n      if (featureIndex === 0 && initialValue === undefined)\n        previousValue = currentGeometry;\n      else\n        previousValue = callback(\n          previousValue,\n          currentGeometry,\n          featureIndex,\n          featureProperties,\n          featureBBox,\n          featureId\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for flattenEach\n *\n * @callback flattenEachCallback\n * @param {Feature} currentFeature The current flattened feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Iterate over flattened features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name flattenEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex, multiFeatureIndex)\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenEach(features, function (currentFeature, featureIndex, multiFeatureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n * });\n */\nfunction flattenEach(geojson, callback) {\n  geomEach(geojson, function (geometry, featureIndex, properties, bbox, id) {\n    // Callback for single geometry\n    var type = geometry === null ? null : geometry.type;\n    switch (type) {\n      case null:\n      case \"Point\":\n      case \"LineString\":\n      case \"Polygon\":\n        if (\n          callback(\n            feature(geometry, properties, { bbox: bbox, id: id }),\n            featureIndex,\n            0\n          ) === false\n        )\n          return false;\n        return;\n    }\n\n    var geomType;\n\n    // Callback for multi-geometry\n    switch (type) {\n      case \"MultiPoint\":\n        geomType = \"Point\";\n        break;\n      case \"MultiLineString\":\n        geomType = \"LineString\";\n        break;\n      case \"MultiPolygon\":\n        geomType = \"Polygon\";\n        break;\n    }\n\n    for (\n      var multiFeatureIndex = 0;\n      multiFeatureIndex < geometry.coordinates.length;\n      multiFeatureIndex++\n    ) {\n      var coordinate = geometry.coordinates[multiFeatureIndex];\n      var geom = {\n        type: geomType,\n        coordinates: coordinate,\n      };\n      if (\n        callback(feature(geom, properties), featureIndex, multiFeatureIndex) ===\n        false\n      )\n        return false;\n    }\n  });\n}\n\n/**\n * Callback for flattenReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback flattenReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Reduce flattened features in any GeoJSON object, similar to Array.reduce().\n *\n * @name flattenReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex, multiFeatureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenReduce(features, function (previousValue, currentFeature, featureIndex, multiFeatureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   return currentFeature\n * });\n */\nfunction flattenReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  flattenEach(\n    geojson,\n    function (currentFeature, featureIndex, multiFeatureIndex) {\n      if (\n        featureIndex === 0 &&\n        multiFeatureIndex === 0 &&\n        initialValue === undefined\n      )\n        previousValue = currentFeature;\n      else\n        previousValue = callback(\n          previousValue,\n          currentFeature,\n          featureIndex,\n          multiFeatureIndex\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for segmentEach\n *\n * @callback segmentEachCallback\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n * @returns {void}\n */\n\n/**\n * Iterate over 2-vertex line segment in any GeoJSON object, similar to Array.forEach()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex)\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentEach(polygon, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //=currentSegment\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   //=segmentIndex\n * });\n *\n * // Calculate the total number of segments\n * var total = 0;\n * turf.segmentEach(polygon, function () {\n *     total++;\n * });\n */\nfunction segmentEach(geojson, callback) {\n  flattenEach(geojson, function (feature, featureIndex, multiFeatureIndex) {\n    var segmentIndex = 0;\n\n    // Exclude null Geometries\n    if (!feature.geometry) return;\n    // (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n    var type = feature.geometry.type;\n    if (type === \"Point\" || type === \"MultiPoint\") return;\n\n    // Generate 2-vertex line segments\n    var previousCoords;\n    var previousFeatureIndex = 0;\n    var previousMultiIndex = 0;\n    var prevGeomIndex = 0;\n    if (\n      coordEach(\n        feature,\n        function (\n          currentCoord,\n          coordIndex,\n          featureIndexCoord,\n          multiPartIndexCoord,\n          geometryIndex\n        ) {\n          // Simulating a meta.coordReduce() since `reduce` operations cannot be stopped by returning `false`\n          if (\n            previousCoords === undefined ||\n            featureIndex > previousFeatureIndex ||\n            multiPartIndexCoord > previousMultiIndex ||\n            geometryIndex > prevGeomIndex\n          ) {\n            previousCoords = currentCoord;\n            previousFeatureIndex = featureIndex;\n            previousMultiIndex = multiPartIndexCoord;\n            prevGeomIndex = geometryIndex;\n            segmentIndex = 0;\n            return;\n          }\n          var currentSegment = lineString(\n            [previousCoords, currentCoord],\n            feature.properties\n          );\n          if (\n            callback(\n              currentSegment,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex,\n              segmentIndex\n            ) === false\n          )\n            return false;\n          segmentIndex++;\n          previousCoords = currentCoord;\n        }\n      ) === false\n    )\n      return false;\n  });\n}\n\n/**\n * Callback for segmentReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback segmentReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n */\n\n/**\n * Reduce 2-vertex line segment in any GeoJSON object, similar to Array.reduce()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (previousValue, currentSegment, currentIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentReduce(polygon, function (previousSegment, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //= previousSegment\n *   //= currentSegment\n *   //= featureIndex\n *   //= multiFeatureIndex\n *   //= geometryIndex\n *   //= segmentIndex\n *   return currentSegment\n * });\n *\n * // Calculate the total number of segments\n * var initialValue = 0\n * var total = turf.segmentReduce(polygon, function (previousValue) {\n *     previousValue++;\n *     return previousValue;\n * }, initialValue);\n */\nfunction segmentReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  var started = false;\n  segmentEach(\n    geojson,\n    function (\n      currentSegment,\n      featureIndex,\n      multiFeatureIndex,\n      geometryIndex,\n      segmentIndex\n    ) {\n      if (started === false && initialValue === undefined)\n        previousValue = currentSegment;\n      else\n        previousValue = callback(\n          previousValue,\n          currentSegment,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex,\n          segmentIndex\n        );\n      started = true;\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for lineEach\n *\n * @callback lineEachCallback\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Iterate over line or ring coordinates in LineString, Polygon, MultiLineString, MultiPolygon Features or Geometries,\n * similar to Array.forEach.\n *\n * @name lineEach\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @example\n * var multiLine = turf.multiLineString([\n *   [[26, 37], [35, 45]],\n *   [[36, 53], [38, 50], [41, 55]]\n * ]);\n *\n * turf.lineEach(multiLine, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction lineEach(geojson, callback) {\n  // validation\n  if (!geojson) throw new Error(\"geojson is required\");\n\n  flattenEach(geojson, function (feature, featureIndex, multiFeatureIndex) {\n    if (feature.geometry === null) return;\n    var type = feature.geometry.type;\n    var coords = feature.geometry.coordinates;\n    switch (type) {\n      case \"LineString\":\n        if (callback(feature, featureIndex, multiFeatureIndex, 0, 0) === false)\n          return false;\n        break;\n      case \"Polygon\":\n        for (\n          var geometryIndex = 0;\n          geometryIndex < coords.length;\n          geometryIndex++\n        ) {\n          if (\n            callback(\n              lineString(coords[geometryIndex], feature.properties),\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false\n          )\n            return false;\n        }\n        break;\n    }\n  });\n}\n\n/**\n * Callback for lineReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback lineReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed.\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name lineReduce\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var multiPoly = turf.multiPolygon([\n *   turf.polygon([[[12,48],[2,41],[24,38],[12,48]], [[9,44],[13,41],[13,45],[9,44]]]),\n *   turf.polygon([[[5, 5], [0, 0], [2, 2], [4, 4], [5, 5]]])\n * ]);\n *\n * turf.lineReduce(multiPoly, function (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentLine\n * });\n */\nfunction lineReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  lineEach(\n    geojson,\n    function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n      if (featureIndex === 0 && initialValue === undefined)\n        previousValue = currentLine;\n      else\n        previousValue = callback(\n          previousValue,\n          currentLine,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Finds a particular 2-vertex LineString Segment from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n * Point & MultiPoint will always return null.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.segmentIndex=0] Segment Index\n * @param {Object} [options.properties={}] Translate Properties to output LineString\n * @param {BBox} [options.bbox={}] Translate BBox to output LineString\n * @param {number|string} [options.id={}] Translate Id to output LineString\n * @returns {Feature<LineString>} 2-vertex GeoJSON Feature LineString\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findSegment(multiLine);\n * // => Feature<LineString<[[10, 10], [50, 30]]>>\n *\n * // First Segment of 2nd Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: 1});\n * // => Feature<LineString<[[-10, -10], [-50, -30]]>>\n *\n * // Last Segment of Last Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: -1, segmentIndex: -1});\n * // => Feature<LineString<[[-50, -30], [-30, -40]]>>\n */\nfunction findSegment(geojson, options) {\n  // Optional Parameters\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var segmentIndex = options.segmentIndex || 0;\n\n  // Find FeatureIndex\n  var properties = options.properties;\n  var geometry;\n\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n\n  // Find SegmentIndex\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n      if (segmentIndex < 0) segmentIndex = coords.length + segmentIndex - 1;\n      return lineString(\n        [coords[segmentIndex], coords[segmentIndex + 1]],\n        properties,\n        options\n      );\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[geometryIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[geometryIndex][segmentIndex],\n          coords[geometryIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[multiFeatureIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][segmentIndex],\n          coords[multiFeatureIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex =\n          coords[multiFeatureIndex][geometryIndex].length - segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][geometryIndex][segmentIndex],\n          coords[multiFeatureIndex][geometryIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\n\n/**\n * Finds a particular Point from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.coordIndex=0] Coord Index\n * @param {Object} [options.properties={}] Translate Properties to output Point\n * @param {BBox} [options.bbox={}] Translate BBox to output Point\n * @param {number|string} [options.id={}] Translate Id to output Point\n * @returns {Feature<Point>} 2-vertex GeoJSON Feature Point\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findPoint(multiLine);\n * // => Feature<Point<[10, 10]>>\n *\n * // First Segment of the 2nd Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: 1});\n * // => Feature<Point<[-10, -10]>>\n *\n * // Last Segment of last Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: -1, coordIndex: -1});\n * // => Feature<Point<[-30, -40]>>\n */\nfunction findPoint(geojson, options) {\n  // Optional Parameters\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var coordIndex = options.coordIndex || 0;\n\n  // Find FeatureIndex\n  var properties = options.properties;\n  var geometry;\n\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n\n  // Find Coord Index\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n      return point(coords, properties, options);\n    case \"MultiPoint\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      return point(coords[multiFeatureIndex], properties, options);\n    case \"LineString\":\n      if (coordIndex < 0) coordIndex = coords.length + coordIndex;\n      return point(coords[coordIndex], properties, options);\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[geometryIndex].length + coordIndex;\n      return point(coords[geometryIndex][coordIndex], properties, options);\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[multiFeatureIndex].length + coordIndex;\n      return point(coords[multiFeatureIndex][coordIndex], properties, options);\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex =\n          coords[multiFeatureIndex][geometryIndex].length - coordIndex;\n      return point(\n        coords[multiFeatureIndex][geometryIndex][coordIndex],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\n\nexport {\n  coordReduce,\n  coordEach,\n  propEach,\n  propReduce,\n  featureReduce,\n  featureEach,\n  coordAll,\n  geomReduce,\n  geomEach,\n  flattenReduce,\n  flattenEach,\n  segmentReduce,\n  segmentEach,\n  lineReduce,\n  lineEach,\n  findSegment,\n  findPoint,\n};\n", "import { Feature, FeatureCollection, Geometry } from \"geojson\";\nimport { earthRadius } from \"@turf/helpers\";\nimport { geomReduce } from \"@turf/meta\";\n\n/**\n * Calculates the geodesic area in square meters of one or more polygons.\n *\n * @name area\n * @param {GeoJSON} geojson input polygon(s) as {@link Geometry}, {@link Feature}, or {@link FeatureCollection}\n * @returns {number} area in square meters\n * @example\n * var polygon = turf.polygon([[[125, -15], [113, -22], [154, -27], [144, -15], [125, -15]]]);\n *\n * var area = turf.area(polygon);\n *\n * //addToMap\n * var addToMap = [polygon]\n * polygon.properties.area = area\n */\nfunction area(geojson: Feature<any> | FeatureCollection<any> | Geometry) {\n  return geomReduce(\n    geojson,\n    (value, geom) => {\n      return value + calculateArea(geom);\n    },\n    0\n  );\n}\n\n/**\n * Calculate Area\n *\n * @private\n * @param {Geometry} geom GeoJSON Geometries\n * @returns {number} area\n */\nfunction calculateArea(geom: Geometry): number {\n  let total = 0;\n  let i;\n  switch (geom.type) {\n    case \"Polygon\":\n      return polygonArea(geom.coordinates);\n    case \"MultiPolygon\":\n      for (i = 0; i < geom.coordinates.length; i++) {\n        total += polygonArea(geom.coordinates[i]);\n      }\n      return total;\n    case \"Point\":\n    case \"MultiPoint\":\n    case \"LineString\":\n    case \"MultiLineString\":\n      return 0;\n  }\n  return 0;\n}\n\nfunction polygonArea(coords: any) {\n  let total = 0;\n  if (coords && coords.length > 0) {\n    total += Math.abs(ringArea(coords[0]));\n    for (let i = 1; i < coords.length; i++) {\n      total -= Math.abs(ringArea(coords[i]));\n    }\n  }\n  return total;\n}\n\n/**\n * @private\n * A constant factor used to compute the area of a polygon.\n * It's derived from the square of the Earth's radius divided by 2.\n *\n * @type {number}\n */\nconst FACTOR = (earthRadius * earthRadius) / 2;\n\n/**\n * @private\n * A constant used for converting degrees to radians.\n * Represents the ratio of PI to 180.\n *\n * @type {number}\n */\nconst PI_OVER_180 = Math.PI / 180;\n\n/**\n * @private\n * Calculate the approximate area of the polygon were it projected onto the earth.\n * Note that this area will be positive if ring is oriented clockwise, otherwise it will be negative.\n *\n * Reference:\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for Polygons on a Sphere\",\n * JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007 https://trs.jpl.nasa.gov/handle/2014/40409\n *\n * @param {Array<Array<number>>} coords Ring Coordinates\n * @returns {number} The approximate signed geodesic area of the polygon in square meters.\n */\nfunction ringArea(coords: number[][]): number {\n  const coordsLength = coords.length - 1;\n\n  if (coordsLength <= 2) return 0;\n  let total = 0;\n\n  let i = 0;\n  while (i < coordsLength) {\n    const lower = coords[i];\n    const middle = coords[i + 1 === coordsLength ? 0 : i + 1];\n    const upper =\n      coords[i + 2 >= coordsLength ? (i + 2) % coordsLength : i + 2];\n\n    const lowerX = lower[0] * PI_OVER_180;\n    const middleY = middle[1] * PI_OVER_180;\n    const upperX = upper[0] * PI_OVER_180;\n\n    total += (upperX - lowerX) * Math.sin(middleY);\n\n    i++;\n  }\n\n  return total * FACTOR;\n}\n\nexport { area };\nexport default area;\n", "import { BBox } from \"geojson\";\nimport { AllGeoJSON } from \"@turf/helpers\";\nimport { coordEach } from \"@turf/meta\";\n\n/**\n * Calculates the bounding box for any GeoJSON object, including FeatureCollection.\n * Uses geojson.bbox if available and options.recompute is not set.\n *\n * @name bbox\n * @param {GeoJSON} geojson any GeoJSON object\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.recompute] Whether to ignore an existing bbox property on geojson\n * @returns {BBox} bbox extent in [minX, minY, maxX, maxY] order\n * @example\n * var line = turf.lineString([[-74, 40], [-78, 42], [-82, 35]]);\n * var bbox = turf.bbox(line);\n * var bboxPolygon = turf.bboxPolygon(bbox);\n *\n * //addToMap\n * var addToMap = [line, bboxPolygon]\n */\nfunction bbox(\n  geojson: AllGeoJSON,\n  options: {\n    recompute?: boolean;\n  } = {}\n): BBox {\n  if (geojson.bbox != null && true !== options.recompute) {\n    return geojson.bbox;\n  }\n  const result: BBox = [Infinity, Infinity, -Infinity, -Infinity];\n  coordEach(geojson, (coord) => {\n    if (result[0] > coord[0]) {\n      result[0] = coord[0];\n    }\n    if (result[1] > coord[1]) {\n      result[1] = coord[1];\n    }\n    if (result[2] < coord[0]) {\n      result[2] = coord[0];\n    }\n    if (result[3] < coord[1]) {\n      result[3] = coord[1];\n    }\n  });\n  return result;\n}\n\nexport { bbox };\nexport default bbox;\n", "import {\n  Feature,\n  LineString,\n  Position,\n  GeoJSON,\n  Point,\n  Polygon,\n  GeometryCollection,\n  FeatureCollection,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  GeoJsonProperties,\n} from \"geojson\";\n\n/**\n\n * GeoJSON equality checking utility.\n * Adapted from https://github.com/geosquare/geojson-equality\n *\n * @memberof helpers\n * @type {Class}\n */\nclass GeojsonEquality {\n  private precision: number;\n  private direction = false;\n  private compareProperties = true;\n\n  constructor(opts?: {\n    precision?: number;\n    direction?: boolean;\n    compareProperties?: boolean;\n  }) {\n    this.precision = 10 ** -(opts?.precision ?? 17);\n    this.direction = opts?.direction ?? false;\n    this.compareProperties = opts?.compareProperties ?? true;\n  }\n\n  compare(g1: GeoJSON, g2: GeoJSON): boolean {\n    if (g1.type !== g2.type) {\n      return false;\n    }\n\n    if (!sameLength(g1, g2)) {\n      return false;\n    }\n\n    switch (g1.type) {\n      case \"Point\":\n        return this.compareCoord(g1.coordinates, (g2 as Point).coordinates);\n      case \"LineString\":\n        return this.compareLine(g1.coordinates, (g2 as LineString).coordinates);\n      case \"Polygon\":\n        return this.comparePolygon(g1, g2 as Polygon);\n      case \"GeometryCollection\":\n        return this.compareGeometryCollection(g1, g2 as GeometryCollection);\n      case \"Feature\":\n        return this.compareFeature(g1, g2 as Feature);\n      case \"FeatureCollection\":\n        return this.compareFeatureCollection(g1, g2 as FeatureCollection);\n      default:\n        if (g1.type.startsWith(\"Multi\")) {\n          const g1s = explode(g1);\n          const g2s = explode(\n            g2 as MultiLineString | MultiPoint | MultiPolygon\n          );\n          return g1s.every((g1part) =>\n            g2s.some((g2part) => this.compare(g1part as any, g2part as any))\n          );\n        }\n    }\n    return false;\n  }\n\n  private compareCoord(c1: Position, c2: Position) {\n    return (\n      c1.length === c2.length &&\n      c1.every((c, i) => Math.abs(c - c2[i]) < this.precision)\n    );\n  }\n\n  private compareLine(\n    path1: Position[],\n    path2: Position[],\n    ind = 0,\n    isPoly = false\n  ): boolean {\n    if (!sameLength(path1, path2)) {\n      return false;\n    }\n    const p1 = path1;\n    let p2 = path2;\n    if (isPoly && !this.compareCoord(p1[0], p2[0])) {\n      // fix start index of both to same point\n      const startIndex = this.fixStartIndex(p2, p1);\n      if (!startIndex) {\n        return false;\n      } else {\n        p2 = startIndex;\n      }\n    }\n    // for linestring ind =0 and for polygon ind =1\n    const sameDirection = this.compareCoord(p1[ind], p2[ind]);\n    if (this.direction || sameDirection) {\n      return this.comparePath(p1, p2);\n    } else {\n      if (this.compareCoord(p1[ind], p2[p2.length - (1 + ind)])) {\n        return this.comparePath(p1.slice().reverse(), p2);\n      }\n      return false;\n    }\n  }\n\n  private fixStartIndex(sourcePath: Position[], targetPath: Position[]) {\n    //make sourcePath first point same as of targetPath\n    let correctPath,\n      ind = -1;\n    for (let i = 0; i < sourcePath.length; i++) {\n      if (this.compareCoord(sourcePath[i], targetPath[0])) {\n        ind = i;\n        break;\n      }\n    }\n    if (ind >= 0) {\n      correctPath = ([] as Position[]).concat(\n        sourcePath.slice(ind, sourcePath.length),\n        sourcePath.slice(1, ind + 1)\n      );\n    }\n    return correctPath;\n  }\n\n  private comparePath(p1: Position[], p2: Position[]) {\n    return p1.every((c, i) => this.compareCoord(c, p2[i]));\n  }\n\n  private comparePolygon(g1: Polygon, g2: Polygon) {\n    if (this.compareLine(g1.coordinates[0], g2.coordinates[0], 1, true)) {\n      const holes1 = g1.coordinates.slice(1, g1.coordinates.length);\n      const holes2 = g2.coordinates.slice(1, g2.coordinates.length);\n      return holes1.every((h1) =>\n        holes2.some((h2) => this.compareLine(h1, h2, 1, true))\n      );\n    }\n    return false;\n  }\n\n  private compareGeometryCollection(\n    g1: GeometryCollection,\n    g2: GeometryCollection\n  ) {\n    return (\n      sameLength(g1.geometries, g2.geometries) &&\n      this.compareBBox(g1, g2) &&\n      g1.geometries.every((g, i) => this.compare(g, g2.geometries[i]))\n    );\n  }\n\n  private compareFeature(g1: Feature, g2: Feature) {\n    return (\n      g1.id === g2.id &&\n      (this.compareProperties ? equal(g1.properties, g2.properties) : true) &&\n      this.compareBBox(g1, g2) &&\n      this.compare(g1.geometry, g2.geometry)\n    );\n  }\n\n  private compareFeatureCollection(\n    g1: FeatureCollection,\n    g2: FeatureCollection\n  ) {\n    return (\n      sameLength(g1.features, g2.features) &&\n      this.compareBBox(g1, g2) &&\n      g1.features.every((f, i) => this.compare(f, g2.features[i]))\n    );\n  }\n\n  private compareBBox(g1: GeoJSON, g2: GeoJSON): boolean {\n    return (\n      Boolean(!g1.bbox && !g2.bbox) ||\n      (g1.bbox && g2.bbox ? this.compareCoord(g1.bbox, g2.bbox) : false)\n    );\n  }\n}\n\nfunction sameLength(g1: any, g2: any) {\n  return g1.coordinates\n    ? g1.coordinates.length === g2.coordinates.length\n    : g1.length === g2.length;\n}\n\nfunction explode(g: MultiLineString | MultiPoint | MultiPolygon) {\n  return g.coordinates.map((part) => ({\n    type: g.type.replace(\"Multi\", \"\"),\n    coordinates: part,\n  }));\n}\n\nfunction geojsonEquality(\n  g1: GeoJSON,\n  g2: GeoJSON,\n  opts?: {\n    precision?: number;\n    direction?: boolean;\n    compareProperties?: boolean;\n  }\n): boolean {\n  const eq = new GeojsonEquality(opts);\n\n  return eq.compare(g1, g2);\n}\n\n// Adapted from https://medium.com/syncfusion/5-different-ways-to-deep-compare-javascript-objects-6708a0da9f05\nfunction equal(object1: GeoJsonProperties, object2: GeoJsonProperties) {\n  if (object1 === null && object2 === null) {\n    return true;\n  }\n\n  if (object1 === null || object2 === null) {\n    return false;\n  }\n\n  const objKeys1 = Object.keys(object1);\n  const objKeys2 = Object.keys(object2);\n\n  if (objKeys1.length !== objKeys2.length) return false;\n\n  for (var key of objKeys1) {\n    const value1 = object1[key];\n    const value2 = object2[key];\n\n    const isObjects = isObject(value1) && isObject(value2);\n\n    if (\n      (isObjects && !equal(value1, value2)) ||\n      (!isObjects && value1 !== value2)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\nconst isObject = (object: any) => {\n  return object != null && typeof object === \"object\";\n};\n\nexport { GeojsonEquality, geojsonEquality };\nexport default GeojsonEquality;\n", "import { geojsonRbush as rbush } from \"@turf/geojson-rbush\";\nimport { lineSegment } from \"@turf/line-segment\";\nimport { nearestPointOnLine } from \"@turf/nearest-point-on-line\";\nimport { booleanPointOnLine } from \"@turf/boolean-point-on-line\";\nimport { getCoords } from \"@turf/invariant\";\nimport { featureEach, segmentEach } from \"@turf/meta\";\nimport {\n  FeatureCollection,\n  Feature,\n  LineString,\n  MultiLineString,\n  Polygon,\n  MultiPolygon,\n  GeoJsonProperties,\n} from \"geojson\";\nimport { featureCollection, isObject } from \"@turf/helpers\";\nimport equal from \"fast-deep-equal\";\n\n/**\n * Takes any LineString or Polygon and returns the overlapping lines between both features.\n *\n * @name lineOverlap\n * @param {Geometry|Feature<LineString|MultiLineString|Polygon|MultiPolygon>} line1 any LineString or Polygon\n * @param {Geometry|Feature<LineString|MultiLineString|Polygon|MultiPolygon>} line2 any LineString or Polygon\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.tolerance=0] Tolerance distance to match overlapping line segments (in kilometers)\n * @returns {FeatureCollection<LineString>} lines(s) that are overlapping between both features\n * @example\n * var line1 = turf.lineString([[115, -35], [125, -30], [135, -30], [145, -35]]);\n * var line2 = turf.lineString([[115, -25], [125, -30], [135, -30], [145, -25]]);\n *\n * var overlapping = turf.lineOverlap(line1, line2);\n *\n * //addToMap\n * var addToMap = [line1, line2, overlapping]\n */\nfunction lineOverlap<\n  G1 extends LineString | MultiLineString | Polygon | MultiPolygon,\n  G2 extends LineString | MultiLineString | Polygon | MultiPolygon,\n>(\n  line1: Feature<G1> | G1,\n  line2: Feature<G2> | G2,\n  options: { tolerance?: number } = {}\n): FeatureCollection<LineString> {\n  // Optional parameters\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var tolerance = options.tolerance || 0;\n\n  // Containers\n  var features: Feature<LineString, GeoJsonProperties>[] = [];\n\n  // Create Spatial Index\n  var tree = rbush<LineString>();\n\n  // To-Do -- HACK way to support typescript\n  const line: any = lineSegment(line1);\n  tree.load(line);\n  var overlapSegment: Feature<LineString> | undefined;\n  let additionalSegments: Feature<LineString>[] = [];\n\n  // Line Intersection\n\n  // Iterate over line segments\n  segmentEach(line2, function (segment) {\n    var doesOverlaps = false;\n\n    if (!segment) {\n      return;\n    }\n\n    // Iterate over each segments which falls within the same bounds\n    featureEach(tree.search(segment), function (match) {\n      if (doesOverlaps === false) {\n        var coordsSegment = getCoords(segment).sort();\n        var coordsMatch: any = getCoords(match).sort();\n\n        // Segment overlaps feature\n        if (equal(coordsSegment, coordsMatch)) {\n          doesOverlaps = true;\n          // Overlaps already exists - only append last coordinate of segment\n          if (overlapSegment) {\n            overlapSegment =\n              concatSegment(overlapSegment, segment) || overlapSegment;\n          } else overlapSegment = segment;\n          // Match segments which don't share nodes (Issue #901)\n        } else if (\n          tolerance === 0\n            ? booleanPointOnLine(coordsSegment[0], match) &&\n              booleanPointOnLine(coordsSegment[1], match)\n            : nearestPointOnLine(match, coordsSegment[0]).properties.dist! <=\n                tolerance &&\n              nearestPointOnLine(match, coordsSegment[1]).properties.dist! <=\n                tolerance\n        ) {\n          doesOverlaps = true;\n          if (overlapSegment) {\n            overlapSegment =\n              concatSegment(overlapSegment, segment) || overlapSegment;\n          } else overlapSegment = segment;\n        } else if (\n          tolerance === 0\n            ? booleanPointOnLine(coordsMatch[0], segment) &&\n              booleanPointOnLine(coordsMatch[1], segment)\n            : nearestPointOnLine(segment, coordsMatch[0]).properties.dist! <=\n                tolerance &&\n              nearestPointOnLine(segment, coordsMatch[1]).properties.dist! <=\n                tolerance\n        ) {\n          // Do not define (doesOverlap = true) since more matches can occur within the same segment\n          // doesOverlaps = true;\n          if (overlapSegment) {\n            const combinedSegment = concatSegment(overlapSegment, match);\n            if (combinedSegment) {\n              overlapSegment = combinedSegment;\n            } else {\n              additionalSegments.push(match);\n            }\n          } else overlapSegment = match;\n        }\n      }\n    });\n\n    // Segment doesn't overlap - add overlaps to results & reset\n    if (doesOverlaps === false && overlapSegment) {\n      features.push(overlapSegment);\n      if (additionalSegments.length) {\n        features = features.concat(additionalSegments);\n        additionalSegments = [];\n      }\n      overlapSegment = undefined;\n    }\n  });\n  // Add last segment if exists\n  if (overlapSegment) features.push(overlapSegment);\n\n  return featureCollection(features);\n}\n\n/**\n * Concat Segment\n *\n * @private\n * @param {Feature<LineString>} line LineString\n * @param {Feature<LineString>} segment 2-vertex LineString\n * @returns {Feature<LineString>} concat linestring\n */\nfunction concatSegment(\n  line: Feature<LineString>,\n  segment: Feature<LineString>\n) {\n  var coords = getCoords(segment);\n  var lineCoords = getCoords(line);\n  var start = lineCoords[0];\n  var end = lineCoords[lineCoords.length - 1];\n  var geom = line.geometry.coordinates;\n\n  if (equal(coords[0], start)) geom.unshift(coords[1]);\n  else if (equal(coords[0], end)) geom.push(coords[1]);\n  else if (equal(coords[1], start)) geom.unshift(coords[0]);\n  else if (equal(coords[1], end)) geom.push(coords[0]);\n  else return; // If the overlap leaves the segment unchanged, return undefined so that this can be identified.\n\n  // Otherwise return the mutated line.\n  return line;\n}\n\nexport { lineOverlap };\nexport default lineOverlap;\n", "import { BBox, Feature, GeoJsonProperties, Point } from \"geojson\";\nimport { bbox } from \"@turf/bbox\";\nimport { point, Id, AllGeoJSON } from \"@turf/helpers\";\n\n/**\n * Takes a {@link Feature} or {@link FeatureCollection} and returns the absolute center point of all features.\n *\n * @name center\n * @param {GeoJSON} geojson GeoJSON to be centered\n * @param {Object} [options={}] Optional parameters\n * @param {Object} [options.properties={}] Translate GeoJSON Properties to Point\n * @param {Object} [options.bbox={}] Translate GeoJSON BBox to Point\n * @param {Object} [options.id={}] Translate GeoJSON Id to Point\n * @returns {Feature<Point>} a Point feature at the absolute center point of all input features\n * @example\n * var features = turf.points([\n *   [-97.522259, 35.4691],\n *   [-97.502754, 35.463455],\n *   [-97.508269, 35.463245]\n * ]);\n *\n * var center = turf.center(features);\n *\n * //addToMap\n * var addToMap = [features, center]\n * center.properties['marker-size'] = 'large';\n * center.properties['marker-color'] = '#000';\n */\nfunction center<P extends GeoJsonProperties = GeoJsonProperties>(\n  geojson: AllGeoJSON,\n  options: { properties?: P; bbox?: BBox; id?: Id } = {}\n): Feature<Point, P> {\n  const ext = bbox(geojson);\n  const x = (ext[0] + ext[2]) / 2;\n  const y = (ext[1] + ext[3]) / 2;\n  return point([x, y], options.properties, options);\n}\n\nexport { center };\nexport default center;\n", "import { center } from \"@turf/center\";\nimport jsts from \"@turf/jsts\";\nimport { geomEach, featureEach } from \"@turf/meta\";\nimport { geoAzimuthalEquidistant } from \"d3-geo\";\nimport {\n  feature,\n  featureCollection,\n  radiansToLength,\n  lengthToRadians,\n  earthRadius,\n} from \"@turf/helpers\";\n\nconst { BufferOp, GeoJSONReader, GeoJSONWriter } = jsts;\n\n/**\n * Calculates a buffer for input features for a given radius. Units supported are miles, kilometers, and degrees.\n *\n * When using a negative radius, the resulting geometry may be invalid if\n * it's too small compared to the radius magnitude. If the input is a\n * FeatureCollection, only valid members will be returned in the output\n * FeatureCollection - i.e., the output collection may have fewer members than\n * the input, or even be empty.\n *\n * @name buffer\n * @param {FeatureCollection|Geometry|Feature<any>} geojson input to be buffered\n * @param {number} radius distance to draw the buffer (negative values are allowed)\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units=\"kilometers\"] any of the options supported by turf units\n * @param {number} [options.steps=8] number of steps\n * @returns {FeatureCollection|Feature<Polygon|MultiPolygon>|undefined} buffered features\n * @example\n * var point = turf.point([-90.548630, 14.616599]);\n * var buffered = turf.buffer(point, 500, {units: 'miles'});\n *\n * //addToMap\n * var addToMap = [point, buffered]\n */\nfunction buffer(geojson, radius, options) {\n  // Optional params\n  options = options || {};\n\n  // use user supplied options or default values\n  var units = options.units || \"kilometers\";\n  var steps = options.steps || 8;\n\n  // validation\n  if (!geojson) throw new Error(\"geojson is required\");\n  if (typeof options !== \"object\") throw new Error(\"options must be an object\");\n  if (typeof steps !== \"number\") throw new Error(\"steps must be an number\");\n\n  // Allow negative buffers (\"erosion\") or zero-sized buffers (\"repair geometry\")\n  if (radius === undefined) throw new Error(\"radius is required\");\n  if (steps <= 0) throw new Error(\"steps must be greater than 0\");\n\n  var results = [];\n  switch (geojson.type) {\n    case \"GeometryCollection\":\n      geomEach(geojson, function (geometry) {\n        var buffered = bufferFeature(geometry, radius, units, steps);\n        if (buffered) results.push(buffered);\n      });\n      return featureCollection(results);\n    case \"FeatureCollection\":\n      featureEach(geojson, function (feature) {\n        var multiBuffered = bufferFeature(feature, radius, units, steps);\n        if (multiBuffered) {\n          featureEach(multiBuffered, function (buffered) {\n            if (buffered) results.push(buffered);\n          });\n        }\n      });\n      return featureCollection(results);\n  }\n  return bufferFeature(geojson, radius, units, steps);\n}\n\n/**\n * Buffer single Feature/Geometry\n *\n * @private\n * @param {Feature<any>} geojson input to be buffered\n * @param {number} radius distance to draw the buffer\n * @param {string} [units='kilometers'] any of the options supported by turf units\n * @param {number} [steps=8] number of steps\n * @returns {Feature<Polygon|MultiPolygon>} buffered feature\n */\nfunction bufferFeature(geojson, radius, units, steps) {\n  var properties = geojson.properties || {};\n  var geometry = geojson.type === \"Feature\" ? geojson.geometry : geojson;\n\n  // Geometry Types faster than jsts\n  if (geometry.type === \"GeometryCollection\") {\n    var results = [];\n    geomEach(geojson, function (geometry) {\n      var buffered = bufferFeature(geometry, radius, units, steps);\n      if (buffered) results.push(buffered);\n    });\n    return featureCollection(results);\n  }\n\n  // Project GeoJSON to Azimuthal Equidistant projection (convert to Meters)\n  var projection = defineProjection(geometry);\n  var projected = {\n    type: geometry.type,\n    coordinates: projectCoords(geometry.coordinates, projection),\n  };\n\n  // JSTS buffer operation\n  var reader = new GeoJSONReader();\n  var geom = reader.read(projected);\n  var distance = radiansToLength(lengthToRadians(radius, units), \"meters\");\n  var buffered = BufferOp.bufferOp(geom, distance, steps);\n  var writer = new GeoJSONWriter();\n  buffered = writer.write(buffered);\n\n  // Detect if empty geometries\n  if (coordsIsNaN(buffered.coordinates)) return undefined;\n\n  // Unproject coordinates (convert to Degrees)\n  var result = {\n    type: buffered.type,\n    coordinates: unprojectCoords(buffered.coordinates, projection),\n  };\n\n  return feature(result, properties);\n}\n\n/**\n * Coordinates isNaN\n *\n * @private\n * @param {Array<any>} coords GeoJSON Coordinates\n * @returns {boolean} if NaN exists\n */\nfunction coordsIsNaN(coords) {\n  if (Array.isArray(coords[0])) return coordsIsNaN(coords[0]);\n  return isNaN(coords[0]);\n}\n\n/**\n * Project coordinates to projection\n *\n * @private\n * @param {Array<any>} coords to project\n * @param {GeoProjection} proj D3 Geo Projection\n * @returns {Array<any>} projected coordinates\n */\nfunction projectCoords(coords, proj) {\n  if (typeof coords[0] !== \"object\") return proj(coords);\n  return coords.map(function (coord) {\n    return projectCoords(coord, proj);\n  });\n}\n\n/**\n * Un-Project coordinates to projection\n *\n * @private\n * @param {Array<any>} coords to un-project\n * @param {GeoProjection} proj D3 Geo Projection\n * @returns {Array<any>} un-projected coordinates\n */\nfunction unprojectCoords(coords, proj) {\n  if (typeof coords[0] !== \"object\") return proj.invert(coords);\n  return coords.map(function (coord) {\n    return unprojectCoords(coord, proj);\n  });\n}\n\n/**\n * Define Azimuthal Equidistant projection\n *\n * @private\n * @param {Geometry|Feature<any>} geojson Base projection on center of GeoJSON\n * @returns {GeoProjection} D3 Geo Azimuthal Equidistant Projection\n */\nfunction defineProjection(geojson) {\n  var coords = center(geojson).geometry.coordinates;\n  var rotation = [-coords[0], -coords[1]];\n  return geoAzimuthalEquidistant().rotate(rotation).scale(earthRadius);\n}\n\nexport { buffer };\nexport default buffer;\n", "// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nexport default function() {\n  return new Adder;\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add(temp, y, this.t);\n    add(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n", "export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n", "export default function noop() {}\n", "function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n", "import adder from \"./adder\";\nimport {atan2, cos, quarterPi, radians, sin, tau} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nexport var areaRingSum = adder();\n\nvar areaSum = adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function(object) {\n  areaSum.reset();\n  stream(object, areaStream);\n  return areaSum * 2;\n}\n", "import {asin, atan2, cos, sin, sqrt} from \"./math\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n", "import adder from \"./adder\";\nimport {areaStream, areaRingSum} from \"./area\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace, spherical} from \"./cartesian\";\nimport {abs, degrees, epsilon, radians} from \"./math\";\nimport stream from \"./stream\";\n\nvar lambda0, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00, phi00, // first point\n    p0, // previous 3D point\n    deltaSum = adder(),\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0, phi0], [lambda1, phi1]];\n}\n", "export default function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n", "import compose from \"./compose\";\nimport {asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n", "import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian\";\nimport constant from \"./constant\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math\";\nimport {rotateRadians} from \"./rotation\";\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n", "import noop from \"../noop\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n", "export default function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n", "import {abs, epsilon} from \"./math\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n", "import pointEqual from \"../pointEqual\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n", "export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n", "import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n", "import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n", "var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n", "var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n", "export default function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}\n", "import {abs, epsilon} from \"../math\";\nimport clipBuffer from \"./buffer\";\nimport clipLine from \"./line\";\nimport clipPolygon from \"./polygon\";\nimport {merge} from \"d3-array\";\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport function clipExtent(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nexport default function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n}\n", "import adder from \"./adder\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian\";\nimport {asin, atan2, cos, epsilon, pi, quarterPi, sin, tau} from \"./math\";\n\nvar sum = adder();\n\nexport default function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ (winding & 1);\n}\n", "import adder from \"./adder\";\nimport {abs, atan2, cos, radians, sin, sqrt} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nvar lengthSum = adder(),\n    lambda0,\n    sinPhi0,\n    cosPhi0;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function(object) {\n  lengthSum.reset();\n  stream(object, lengthStream);\n  return +lengthSum;\n}\n", "export default function(x) {\n  return x;\n}\n", "import adder from \"../adder\";\nimport {abs} from \"../math\";\nimport noop from \"../noop\";\n\nvar areaSum = adder(),\n    areaRingSum = adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum.reset();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n", "import noop from \"../noop\";\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;\n", "import {tau} from \"../math\";\nimport noop from \"../noop\";\n\nexport default function PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n", "import adder from \"../adder\";\nimport {sqrt} from \"../math\";\nimport noop from \"../noop\";\n\nvar lengthSum = adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n", "export default function PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n", "import clipBuffer from \"./buffer\";\nimport clipPolygon from \"./polygon\";\nimport {epsilon, halfPi} from \"../math\";\nimport polygonContains from \"../polygonContains\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n", "import clip from \"./index\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n", "import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian\";\nimport {circleStream} from \"../circle\";\nimport {abs, cos, epsilon, pi, sqrt} from \"../math\";\nimport pointEqual from \"../pointEqual\";\nimport clip from \"./index\";\n\nexport default function(radius, delta) {\n  var cr = cos(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon;\n            point1[1] += epsilon;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n", "export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n", "import {default as geoStream} from \"../stream\";\nimport boundsStream from \"../path/bounds\";\n\nexport function fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream));\n\n  var b = boundsStream.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n", "import {cartesian} from \"../cartesian\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math\";\nimport {transformer} from \"../transform\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n", "import clipAntimeridian from \"../clip/antimeridian\";\nimport clipCircle from \"../clip/circle\";\nimport {clipExtent} from \"../clip/extent\";\nimport compose from \"../compose\";\nimport identity from \"../identity\";\nimport {degrees, radians, sqrt} from \"../math\";\nimport {rotateRadians} from \"../rotation\";\nimport {transformer} from \"../transform\";\nimport {fitExtent, fitSize} from \"./fit\";\nimport resample from \"./resample\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n", "import {asin, atan2, cos, sin, sqrt} from \"../math\";\n\nexport function azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nexport function azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n", "import {asin, sqrt} from \"../math\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nexport default function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n", "import {acos, sin} from \"../math\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport var azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nexport default function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n}\n", "import {atan, exp, halfPi, log, pi, tan, tau} from \"../math\";\nimport rotation from \"../rotation\";\nimport projection from \"./index\";\n\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n", "import projection from \"./index\";\n\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nexport default function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n", "import {atan, cos, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y), k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nexport default function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n", "import projection from \"./index\";\nimport {abs, epsilon} from \"../math\";\n\nexport function naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n}\n", "import {asin, cos, epsilon, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nexport default function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n}\n", "import {atan, cos, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function stereographicRaw(x, y) {\n  var cy = cos(y), k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nexport default function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n}\n", "import {atan, exp, halfPi, log, tan} from \"../math\";\nimport {mercatorProjection} from \"./mercator\";\n\nexport function transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nexport default function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n}\n", "import { Feature, GeoJsonProperties, Polygon } from \"geojson\";\nimport { AllGeoJSON, polygon } from \"@turf/helpers\";\nimport { coordEach } from \"@turf/meta\";\nimport concaveman from \"concaveman\";\n\n/**\n * Takes a {@link Feature} or a {@link FeatureCollection} and returns a convex hull {@link Polygon}.\n *\n * Internally this uses\n * the [convex-hull](https://github.com/mikolalysenko/convex-hull) module that implements a\n * [monotone chain hull](http://en.wikibooks.org/wiki/Algorithm_Implementation/Geometry/Convex_hull/Monotone_chain).\n *\n * @name convex\n * @param {GeoJSON} geojson input Feature or FeatureCollection\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.concavity=Infinity] 1 - thin shape. Infinity - convex hull.\n * @param {Object} [options.properties={}] Translate Properties to Feature\n * @returns {Feature<Polygon>} a convex hull\n * @example\n * var points = turf.featureCollection([\n *   turf.point([10.195312, 43.755225]),\n *   turf.point([10.404052, 43.8424511]),\n *   turf.point([10.579833, 43.659924]),\n *   turf.point([10.360107, 43.516688]),\n *   turf.point([10.14038, 43.588348]),\n *   turf.point([10.195312, 43.755225])\n * ]);\n *\n * var hull = turf.convex(points);\n *\n * //addToMap\n * var addToMap = [points, hull]\n */\nfunction convex<P extends GeoJsonProperties = GeoJsonProperties>(\n  geojson: AllGeoJSON,\n  options: {\n    concavity?: number;\n    properties?: P;\n  } = {}\n): Feature<Polygon, P> | null {\n  // Default parameters\n  options.concavity = options.concavity || Infinity;\n\n  // Container\n  const points: number[][] = [];\n\n  // Convert all points to flat 2D coordinate Array\n  coordEach(geojson, (coord) => {\n    points.push([coord[0], coord[1]]);\n  });\n  if (!points.length) {\n    return null;\n  }\n\n  const convexHull = concaveman(points, options.concavity);\n\n  // Convex hull should have at least 3 different vertices in order to create a valid polygon\n  if (convexHull.length > 3) {\n    return polygon([convexHull]);\n  }\n  return null;\n}\n\nexport { convex };\nexport default convex;\n", "import { FeatureCollection, Point, GeoJsonProperties } from \"geojson\";\nimport { clone } from \"@turf/clone\";\nimport { coordAll, featureEach } from \"@turf/meta\";\nimport skmeans from \"skmeans\";\n\ntype KmeansProps = GeoJsonProperties & {\n  cluster?: number;\n  centroid?: [number, number];\n};\n\n/**\n * Takes a set of {@link Point|points} and partition them into clusters using the k-mean .\n * It uses the [k-means algorithm](https://en.wikipedia.org/wiki/K-means_clustering)\n *\n * @name clustersKmeans\n * @param {FeatureCollection<Point>} points to be clustered\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.numberOfClusters=Math.sqrt(numberOfPoints/2)] numberOfClusters that will be generated\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated (significant performance increase if true)\n * @returns {FeatureCollection<Point>} Clustered Points with an additional two properties associated to each Feature:\n * - {number} cluster - the associated clusterId\n * - {[number, number]} centroid - Centroid of the cluster [Longitude, Latitude]\n * @example\n * // create random points with random z-values in their properties\n * var points = turf.randomPoint(100, {bbox: [0, 30, 20, 50]});\n * var options = {numberOfClusters: 7};\n * var clustered = turf.clustersKmeans(points, options);\n *\n * //addToMap\n * var addToMap = [clustered];\n */\nfunction clustersKmeans(\n  points: FeatureCollection<Point>,\n  options: {\n    numberOfClusters?: number;\n    mutate?: boolean;\n  } = {}\n): FeatureCollection<Point, KmeansProps> {\n  // Default Params\n  var count = points.features.length;\n  options.numberOfClusters =\n    options.numberOfClusters || Math.round(Math.sqrt(count / 2));\n\n  // numberOfClusters can't be greater than the number of points\n  // fallbacks to count\n  if (options.numberOfClusters > count) options.numberOfClusters = count;\n\n  // Clone points to prevent any mutations (enabled by default)\n  if (options.mutate !== true) points = clone(points);\n\n  // collect points coordinates\n  var data = coordAll(points);\n\n  // create seed to avoid skmeans to drift\n  var initialCentroids = data.slice(0, options.numberOfClusters);\n\n  // create skmeans clusters\n  var skmeansResult = skmeans(data, options.numberOfClusters, initialCentroids);\n\n  // store centroids {clusterId: [number, number]}\n  var centroids: Record<string, number[]> = {};\n  (skmeansResult.centroids as number[][]).forEach(function (\n    coord: number[],\n    idx: number\n  ) {\n    centroids[idx] = coord;\n  });\n\n  // add associated cluster number\n  featureEach(points, function (point, index) {\n    var clusterId = skmeansResult.idxs[index];\n    point.properties!.cluster = clusterId;\n    point.properties!.centroid = centroids[clusterId];\n  });\n\n  return points as FeatureCollection<Point, KmeansProps>;\n}\n\nexport { clustersKmeans, KmeansProps };\nexport default clustersKmeans;\n", "// TODO if quantized, use simpler Int32 hashing?\n\nvar buffer = new ArrayBuffer(16),\n    floats = new Float64Array(buffer),\n    uints = new Uint32Array(buffer);\n\nexport default function(point) {\n  floats[0] = point[0];\n  floats[1] = point[1];\n  var hash = uints[0] ^ uints[1];\n  hash = hash << 5 ^ hash >> 7 ^ uints[2] ^ uints[3];\n  return hash & 0x7fffffff;\n}\n", "/**\n * splaytree v3.1.2\n * Fast Splay tree for Node and browser\n *\n * @author Alexander Milevski <info@w8r.name>\n * @license MIT\n * @preserve\n */\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\n\nvar Node = /** @class */ (function () {\r\n    function Node(key, data) {\r\n        this.next = null;\r\n        this.key = key;\r\n        this.data = data;\r\n        this.left = null;\r\n        this.right = null;\r\n    }\r\n    return Node;\r\n}());\n\n/* follows \"An implementation of top-down splaying\"\r\n * by D. Sleator <sleator@cs.cmu.edu> March 1992\r\n */\r\nfunction DEFAULT_COMPARE(a, b) {\r\n    return a > b ? 1 : a < b ? -1 : 0;\r\n}\r\n/**\r\n * Simple top down splay, not requiring i to be in the tree t.\r\n */\r\nfunction splay(i, t, comparator) {\r\n    var N = new Node(null, null);\r\n    var l = N;\r\n    var r = N;\r\n    while (true) {\r\n        var cmp = comparator(i, t.key);\r\n        //if (i < t.key) {\r\n        if (cmp < 0) {\r\n            if (t.left === null)\r\n                break;\r\n            //if (i < t.left.key) {\r\n            if (comparator(i, t.left.key) < 0) {\r\n                var y = t.left; /* rotate right */\r\n                t.left = y.right;\r\n                y.right = t;\r\n                t = y;\r\n                if (t.left === null)\r\n                    break;\r\n            }\r\n            r.left = t; /* link right */\r\n            r = t;\r\n            t = t.left;\r\n            //} else if (i > t.key) {\r\n        }\r\n        else if (cmp > 0) {\r\n            if (t.right === null)\r\n                break;\r\n            //if (i > t.right.key) {\r\n            if (comparator(i, t.right.key) > 0) {\r\n                var y = t.right; /* rotate left */\r\n                t.right = y.left;\r\n                y.left = t;\r\n                t = y;\r\n                if (t.right === null)\r\n                    break;\r\n            }\r\n            l.right = t; /* link left */\r\n            l = t;\r\n            t = t.right;\r\n        }\r\n        else\r\n            break;\r\n    }\r\n    /* assemble */\r\n    l.right = t.left;\r\n    r.left = t.right;\r\n    t.left = N.right;\r\n    t.right = N.left;\r\n    return t;\r\n}\r\nfunction insert(i, data, t, comparator) {\r\n    var node = new Node(i, data);\r\n    if (t === null) {\r\n        node.left = node.right = null;\r\n        return node;\r\n    }\r\n    t = splay(i, t, comparator);\r\n    var cmp = comparator(i, t.key);\r\n    if (cmp < 0) {\r\n        node.left = t.left;\r\n        node.right = t;\r\n        t.left = null;\r\n    }\r\n    else if (cmp >= 0) {\r\n        node.right = t.right;\r\n        node.left = t;\r\n        t.right = null;\r\n    }\r\n    return node;\r\n}\r\nfunction split(key, v, comparator) {\r\n    var left = null;\r\n    var right = null;\r\n    if (v) {\r\n        v = splay(key, v, comparator);\r\n        var cmp = comparator(v.key, key);\r\n        if (cmp === 0) {\r\n            left = v.left;\r\n            right = v.right;\r\n        }\r\n        else if (cmp < 0) {\r\n            right = v.right;\r\n            v.right = null;\r\n            left = v;\r\n        }\r\n        else {\r\n            left = v.left;\r\n            v.left = null;\r\n            right = v;\r\n        }\r\n    }\r\n    return { left: left, right: right };\r\n}\r\nfunction merge(left, right, comparator) {\r\n    if (right === null)\r\n        return left;\r\n    if (left === null)\r\n        return right;\r\n    right = splay(left.key, right, comparator);\r\n    right.left = left;\r\n    return right;\r\n}\r\n/**\r\n * Prints level of the tree\r\n */\r\nfunction printRow(root, prefix, isTail, out, printNode) {\r\n    if (root) {\r\n        out(\"\" + prefix + (isTail ? '└── ' : '├── ') + printNode(root) + \"\\n\");\r\n        var indent = prefix + (isTail ? '    ' : '│   ');\r\n        if (root.left)\r\n            printRow(root.left, indent, false, out, printNode);\r\n        if (root.right)\r\n            printRow(root.right, indent, true, out, printNode);\r\n    }\r\n}\r\nvar Tree = /** @class */ (function () {\r\n    function Tree(comparator) {\r\n        if (comparator === void 0) { comparator = DEFAULT_COMPARE; }\r\n        this._root = null;\r\n        this._size = 0;\r\n        this._comparator = comparator;\r\n    }\r\n    /**\r\n     * Inserts a key, allows duplicates\r\n     */\r\n    Tree.prototype.insert = function (key, data) {\r\n        this._size++;\r\n        return this._root = insert(key, data, this._root, this._comparator);\r\n    };\r\n    /**\r\n     * Adds a key, if it is not present in the tree\r\n     */\r\n    Tree.prototype.add = function (key, data) {\r\n        var node = new Node(key, data);\r\n        if (this._root === null) {\r\n            node.left = node.right = null;\r\n            this._size++;\r\n            this._root = node;\r\n        }\r\n        var comparator = this._comparator;\r\n        var t = splay(key, this._root, comparator);\r\n        var cmp = comparator(key, t.key);\r\n        if (cmp === 0)\r\n            this._root = t;\r\n        else {\r\n            if (cmp < 0) {\r\n                node.left = t.left;\r\n                node.right = t;\r\n                t.left = null;\r\n            }\r\n            else if (cmp > 0) {\r\n                node.right = t.right;\r\n                node.left = t;\r\n                t.right = null;\r\n            }\r\n            this._size++;\r\n            this._root = node;\r\n        }\r\n        return this._root;\r\n    };\r\n    /**\r\n     * @param  {Key} key\r\n     * @return {Node|null}\r\n     */\r\n    Tree.prototype.remove = function (key) {\r\n        this._root = this._remove(key, this._root, this._comparator);\r\n    };\r\n    /**\r\n     * Deletes i from the tree if it's there\r\n     */\r\n    Tree.prototype._remove = function (i, t, comparator) {\r\n        var x;\r\n        if (t === null)\r\n            return null;\r\n        t = splay(i, t, comparator);\r\n        var cmp = comparator(i, t.key);\r\n        if (cmp === 0) { /* found it */\r\n            if (t.left === null) {\r\n                x = t.right;\r\n            }\r\n            else {\r\n                x = splay(i, t.left, comparator);\r\n                x.right = t.right;\r\n            }\r\n            this._size--;\r\n            return x;\r\n        }\r\n        return t; /* It wasn't there */\r\n    };\r\n    /**\r\n     * Removes and returns the node with smallest key\r\n     */\r\n    Tree.prototype.pop = function () {\r\n        var node = this._root;\r\n        if (node) {\r\n            while (node.left)\r\n                node = node.left;\r\n            this._root = splay(node.key, this._root, this._comparator);\r\n            this._root = this._remove(node.key, this._root, this._comparator);\r\n            return { key: node.key, data: node.data };\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Find without splaying\r\n     */\r\n    Tree.prototype.findStatic = function (key) {\r\n        var current = this._root;\r\n        var compare = this._comparator;\r\n        while (current) {\r\n            var cmp = compare(key, current.key);\r\n            if (cmp === 0)\r\n                return current;\r\n            else if (cmp < 0)\r\n                current = current.left;\r\n            else\r\n                current = current.right;\r\n        }\r\n        return null;\r\n    };\r\n    Tree.prototype.find = function (key) {\r\n        if (this._root) {\r\n            this._root = splay(key, this._root, this._comparator);\r\n            if (this._comparator(key, this._root.key) !== 0)\r\n                return null;\r\n        }\r\n        return this._root;\r\n    };\r\n    Tree.prototype.contains = function (key) {\r\n        var current = this._root;\r\n        var compare = this._comparator;\r\n        while (current) {\r\n            var cmp = compare(key, current.key);\r\n            if (cmp === 0)\r\n                return true;\r\n            else if (cmp < 0)\r\n                current = current.left;\r\n            else\r\n                current = current.right;\r\n        }\r\n        return false;\r\n    };\r\n    Tree.prototype.forEach = function (visitor, ctx) {\r\n        var current = this._root;\r\n        var Q = []; /* Initialize stack s */\r\n        var done = false;\r\n        while (!done) {\r\n            if (current !== null) {\r\n                Q.push(current);\r\n                current = current.left;\r\n            }\r\n            else {\r\n                if (Q.length !== 0) {\r\n                    current = Q.pop();\r\n                    visitor.call(ctx, current);\r\n                    current = current.right;\r\n                }\r\n                else\r\n                    done = true;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Walk key range from `low` to `high`. Stops if `fn` returns a value.\r\n     */\r\n    Tree.prototype.range = function (low, high, fn, ctx) {\r\n        var Q = [];\r\n        var compare = this._comparator;\r\n        var node = this._root;\r\n        var cmp;\r\n        while (Q.length !== 0 || node) {\r\n            if (node) {\r\n                Q.push(node);\r\n                node = node.left;\r\n            }\r\n            else {\r\n                node = Q.pop();\r\n                cmp = compare(node.key, high);\r\n                if (cmp > 0) {\r\n                    break;\r\n                }\r\n                else if (compare(node.key, low) >= 0) {\r\n                    if (fn.call(ctx, node))\r\n                        return this; // stop if smth is returned\r\n                }\r\n                node = node.right;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns array of keys\r\n     */\r\n    Tree.prototype.keys = function () {\r\n        var keys = [];\r\n        this.forEach(function (_a) {\r\n            var key = _a.key;\r\n            return keys.push(key);\r\n        });\r\n        return keys;\r\n    };\r\n    /**\r\n     * Returns array of all the data in the nodes\r\n     */\r\n    Tree.prototype.values = function () {\r\n        var values = [];\r\n        this.forEach(function (_a) {\r\n            var data = _a.data;\r\n            return values.push(data);\r\n        });\r\n        return values;\r\n    };\r\n    Tree.prototype.min = function () {\r\n        if (this._root)\r\n            return this.minNode(this._root).key;\r\n        return null;\r\n    };\r\n    Tree.prototype.max = function () {\r\n        if (this._root)\r\n            return this.maxNode(this._root).key;\r\n        return null;\r\n    };\r\n    Tree.prototype.minNode = function (t) {\r\n        if (t === void 0) { t = this._root; }\r\n        if (t)\r\n            while (t.left)\r\n                t = t.left;\r\n        return t;\r\n    };\r\n    Tree.prototype.maxNode = function (t) {\r\n        if (t === void 0) { t = this._root; }\r\n        if (t)\r\n            while (t.right)\r\n                t = t.right;\r\n        return t;\r\n    };\r\n    /**\r\n     * Returns node at given index\r\n     */\r\n    Tree.prototype.at = function (index) {\r\n        var current = this._root;\r\n        var done = false;\r\n        var i = 0;\r\n        var Q = [];\r\n        while (!done) {\r\n            if (current) {\r\n                Q.push(current);\r\n                current = current.left;\r\n            }\r\n            else {\r\n                if (Q.length > 0) {\r\n                    current = Q.pop();\r\n                    if (i === index)\r\n                        return current;\r\n                    i++;\r\n                    current = current.right;\r\n                }\r\n                else\r\n                    done = true;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    Tree.prototype.next = function (d) {\r\n        var root = this._root;\r\n        var successor = null;\r\n        if (d.right) {\r\n            successor = d.right;\r\n            while (successor.left)\r\n                successor = successor.left;\r\n            return successor;\r\n        }\r\n        var comparator = this._comparator;\r\n        while (root) {\r\n            var cmp = comparator(d.key, root.key);\r\n            if (cmp === 0)\r\n                break;\r\n            else if (cmp < 0) {\r\n                successor = root;\r\n                root = root.left;\r\n            }\r\n            else\r\n                root = root.right;\r\n        }\r\n        return successor;\r\n    };\r\n    Tree.prototype.prev = function (d) {\r\n        var root = this._root;\r\n        var predecessor = null;\r\n        if (d.left !== null) {\r\n            predecessor = d.left;\r\n            while (predecessor.right)\r\n                predecessor = predecessor.right;\r\n            return predecessor;\r\n        }\r\n        var comparator = this._comparator;\r\n        while (root) {\r\n            var cmp = comparator(d.key, root.key);\r\n            if (cmp === 0)\r\n                break;\r\n            else if (cmp < 0)\r\n                root = root.left;\r\n            else {\r\n                predecessor = root;\r\n                root = root.right;\r\n            }\r\n        }\r\n        return predecessor;\r\n    };\r\n    Tree.prototype.clear = function () {\r\n        this._root = null;\r\n        this._size = 0;\r\n        return this;\r\n    };\r\n    Tree.prototype.toList = function () {\r\n        return toList(this._root);\r\n    };\r\n    /**\r\n     * Bulk-load items. Both array have to be same size\r\n     */\r\n    Tree.prototype.load = function (keys, values, presort) {\r\n        if (values === void 0) { values = []; }\r\n        if (presort === void 0) { presort = false; }\r\n        var size = keys.length;\r\n        var comparator = this._comparator;\r\n        // sort if needed\r\n        if (presort)\r\n            sort(keys, values, 0, size - 1, comparator);\r\n        if (this._root === null) { // empty tree\r\n            this._root = loadRecursive(keys, values, 0, size);\r\n            this._size = size;\r\n        }\r\n        else { // that re-builds the whole tree from two in-order traversals\r\n            var mergedList = mergeLists(this.toList(), createList(keys, values), comparator);\r\n            size = this._size + size;\r\n            this._root = sortedListToBST({ head: mergedList }, 0, size);\r\n        }\r\n        return this;\r\n    };\r\n    Tree.prototype.isEmpty = function () { return this._root === null; };\r\n    Object.defineProperty(Tree.prototype, \"size\", {\r\n        get: function () { return this._size; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Tree.prototype, \"root\", {\r\n        get: function () { return this._root; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Tree.prototype.toString = function (printNode) {\r\n        if (printNode === void 0) { printNode = function (n) { return String(n.key); }; }\r\n        var out = [];\r\n        printRow(this._root, '', true, function (v) { return out.push(v); }, printNode);\r\n        return out.join('');\r\n    };\r\n    Tree.prototype.update = function (key, newKey, newData) {\r\n        var comparator = this._comparator;\r\n        var _a = split(key, this._root, comparator), left = _a.left, right = _a.right;\r\n        if (comparator(key, newKey) < 0) {\r\n            right = insert(newKey, newData, right, comparator);\r\n        }\r\n        else {\r\n            left = insert(newKey, newData, left, comparator);\r\n        }\r\n        this._root = merge(left, right, comparator);\r\n    };\r\n    Tree.prototype.split = function (key) {\r\n        return split(key, this._root, this._comparator);\r\n    };\r\n    Tree.prototype[Symbol.iterator] = function () {\r\n        var current, Q, done;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    current = this._root;\r\n                    Q = [];\r\n                    done = false;\r\n                    _a.label = 1;\r\n                case 1:\r\n                    if (!!done) return [3 /*break*/, 6];\r\n                    if (!(current !== null)) return [3 /*break*/, 2];\r\n                    Q.push(current);\r\n                    current = current.left;\r\n                    return [3 /*break*/, 5];\r\n                case 2:\r\n                    if (!(Q.length !== 0)) return [3 /*break*/, 4];\r\n                    current = Q.pop();\r\n                    return [4 /*yield*/, current];\r\n                case 3:\r\n                    _a.sent();\r\n                    current = current.right;\r\n                    return [3 /*break*/, 5];\r\n                case 4:\r\n                    done = true;\r\n                    _a.label = 5;\r\n                case 5: return [3 /*break*/, 1];\r\n                case 6: return [2 /*return*/];\r\n            }\r\n        });\r\n    };\r\n    return Tree;\r\n}());\r\nfunction loadRecursive(keys, values, start, end) {\r\n    var size = end - start;\r\n    if (size > 0) {\r\n        var middle = start + Math.floor(size / 2);\r\n        var key = keys[middle];\r\n        var data = values[middle];\r\n        var node = new Node(key, data);\r\n        node.left = loadRecursive(keys, values, start, middle);\r\n        node.right = loadRecursive(keys, values, middle + 1, end);\r\n        return node;\r\n    }\r\n    return null;\r\n}\r\nfunction createList(keys, values) {\r\n    var head = new Node(null, null);\r\n    var p = head;\r\n    for (var i = 0; i < keys.length; i++) {\r\n        p = p.next = new Node(keys[i], values[i]);\r\n    }\r\n    p.next = null;\r\n    return head.next;\r\n}\r\nfunction toList(root) {\r\n    var current = root;\r\n    var Q = [];\r\n    var done = false;\r\n    var head = new Node(null, null);\r\n    var p = head;\r\n    while (!done) {\r\n        if (current) {\r\n            Q.push(current);\r\n            current = current.left;\r\n        }\r\n        else {\r\n            if (Q.length > 0) {\r\n                current = p = p.next = Q.pop();\r\n                current = current.right;\r\n            }\r\n            else\r\n                done = true;\r\n        }\r\n    }\r\n    p.next = null; // that'll work even if the tree was empty\r\n    return head.next;\r\n}\r\nfunction sortedListToBST(list, start, end) {\r\n    var size = end - start;\r\n    if (size > 0) {\r\n        var middle = start + Math.floor(size / 2);\r\n        var left = sortedListToBST(list, start, middle);\r\n        var root = list.head;\r\n        root.left = left;\r\n        list.head = list.head.next;\r\n        root.right = sortedListToBST(list, middle + 1, end);\r\n        return root;\r\n    }\r\n    return null;\r\n}\r\nfunction mergeLists(l1, l2, compare) {\r\n    var head = new Node(null, null); // dummy\r\n    var p = head;\r\n    var p1 = l1;\r\n    var p2 = l2;\r\n    while (p1 !== null && p2 !== null) {\r\n        if (compare(p1.key, p2.key) < 0) {\r\n            p.next = p1;\r\n            p1 = p1.next;\r\n        }\r\n        else {\r\n            p.next = p2;\r\n            p2 = p2.next;\r\n        }\r\n        p = p.next;\r\n    }\r\n    if (p1 !== null) {\r\n        p.next = p1;\r\n    }\r\n    else if (p2 !== null) {\r\n        p.next = p2;\r\n    }\r\n    return head.next;\r\n}\r\nfunction sort(keys, values, left, right, compare) {\r\n    if (left >= right)\r\n        return;\r\n    var pivot = keys[(left + right) >> 1];\r\n    var i = left - 1;\r\n    var j = right + 1;\r\n    while (true) {\r\n        do\r\n            i++;\r\n        while (compare(keys[i], pivot) < 0);\r\n        do\r\n            j--;\r\n        while (compare(keys[j], pivot) > 0);\r\n        if (i >= j)\r\n            break;\r\n        var tmp = keys[i];\r\n        keys[i] = keys[j];\r\n        keys[j] = tmp;\r\n        tmp = values[i];\r\n        values[i] = values[j];\r\n        values[j] = tmp;\r\n    }\r\n    sort(keys, values, left, j, compare);\r\n    sort(keys, values, j + 1, right, compare);\r\n}\n\nexport default Tree;\n//# sourceMappingURL=splay.esm.js.map\n", "export const epsilon = 1.1102230246251565e-16;\nexport const splitter = 134217729;\nexport const resulterrbound = (3 + 8 * epsilon) * epsilon;\n\n// fast_expansion_sum_zeroelim routine from oritinal code\nexport function sum(elen, e, flen, f, h) {\n    let Q, Qnew, hh, bvirt;\n    let enow = e[0];\n    let fnow = f[0];\n    let eindex = 0;\n    let findex = 0;\n    if ((fnow > enow) === (fnow > -enow)) {\n        Q = enow;\n        enow = e[++eindex];\n    } else {\n        Q = fnow;\n        fnow = f[++findex];\n    }\n    let hindex = 0;\n    if (eindex < elen && findex < flen) {\n        if ((fnow > enow) === (fnow > -enow)) {\n            Qnew = enow + Q;\n            hh = Q - (Qnew - enow);\n            enow = e[++eindex];\n        } else {\n            Qnew = fnow + Q;\n            hh = Q - (Qnew - fnow);\n            fnow = f[++findex];\n        }\n        Q = Qnew;\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n        while (eindex < elen && findex < flen) {\n            if ((fnow > enow) === (fnow > -enow)) {\n                Qnew = Q + enow;\n                bvirt = Qnew - Q;\n                hh = Q - (Qnew - bvirt) + (enow - bvirt);\n                enow = e[++eindex];\n            } else {\n                Qnew = Q + fnow;\n                bvirt = Qnew - Q;\n                hh = Q - (Qnew - bvirt) + (fnow - bvirt);\n                fnow = f[++findex];\n            }\n            Q = Qnew;\n            if (hh !== 0) {\n                h[hindex++] = hh;\n            }\n        }\n    }\n    while (eindex < elen) {\n        Qnew = Q + enow;\n        bvirt = Qnew - Q;\n        hh = Q - (Qnew - bvirt) + (enow - bvirt);\n        enow = e[++eindex];\n        Q = Qnew;\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n    }\n    while (findex < flen) {\n        Qnew = Q + fnow;\n        bvirt = Qnew - Q;\n        hh = Q - (Qnew - bvirt) + (fnow - bvirt);\n        fnow = f[++findex];\n        Q = Qnew;\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n    }\n    if (Q !== 0 || hindex === 0) {\n        h[hindex++] = Q;\n    }\n    return hindex;\n}\n\nexport function sum_three(alen, a, blen, b, clen, c, tmp, out) {\n    return sum(sum(alen, a, blen, b, tmp), tmp, clen, c, out);\n}\n\n// scale_expansion_zeroelim routine from oritinal code\nexport function scale(elen, e, b, h) {\n    let Q, sum, hh, product1, product0;\n    let bvirt, c, ahi, alo, bhi, blo;\n\n    c = splitter * b;\n    bhi = c - (c - b);\n    blo = b - bhi;\n    let enow = e[0];\n    Q = enow * b;\n    c = splitter * enow;\n    ahi = c - (c - enow);\n    alo = enow - ahi;\n    hh = alo * blo - (Q - ahi * bhi - alo * bhi - ahi * blo);\n    let hindex = 0;\n    if (hh !== 0) {\n        h[hindex++] = hh;\n    }\n    for (let i = 1; i < elen; i++) {\n        enow = e[i];\n        product1 = enow * b;\n        c = splitter * enow;\n        ahi = c - (c - enow);\n        alo = enow - ahi;\n        product0 = alo * blo - (product1 - ahi * bhi - alo * bhi - ahi * blo);\n        sum = Q + product0;\n        bvirt = sum - Q;\n        hh = Q - (sum - bvirt) + (product0 - bvirt);\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n        Q = product1 + sum;\n        hh = sum - (Q - product1);\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n    }\n    if (Q !== 0 || hindex === 0) {\n        h[hindex++] = Q;\n    }\n    return hindex;\n}\n\nexport function negate(elen, e) {\n    for (let i = 0; i < elen; i++) e[i] = -e[i];\n    return elen;\n}\n\nexport function estimate(elen, e) {\n    let Q = e[0];\n    for (let i = 1; i < elen; i++) Q += e[i];\n    return Q;\n}\n\nexport function vec(n) {\n    return new Float64Array(n);\n}\n", "import {epsilon, splitter, resulterrbound, estimate, vec, sum} from './util.js';\n\nconst ccwerrboundA = (3 + 16 * epsilon) * epsilon;\nconst ccwerrboundB = (2 + 12 * epsilon) * epsilon;\nconst ccwerrboundC = (9 + 64 * epsilon) * epsilon * epsilon;\n\nconst B = vec(4);\nconst C1 = vec(8);\nconst C2 = vec(12);\nconst D = vec(16);\nconst u = vec(4);\n\nfunction orient2dadapt(ax, ay, bx, by, cx, cy, detsum) {\n    let acxtail, acytail, bcxtail, bcytail;\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n\n    const acx = ax - cx;\n    const bcx = bx - cx;\n    const acy = ay - cy;\n    const bcy = by - cy;\n\n    s1 = acx * bcy;\n    c = splitter * acx;\n    ahi = c - (c - acx);\n    alo = acx - ahi;\n    c = splitter * bcy;\n    bhi = c - (c - bcy);\n    blo = bcy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acy * bcx;\n    c = splitter * acy;\n    ahi = c - (c - acy);\n    alo = acy - ahi;\n    c = splitter * bcx;\n    bhi = c - (c - bcx);\n    blo = bcx - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    B[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    B[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    B[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    B[3] = u3;\n\n    let det = estimate(4, B);\n    let errbound = ccwerrboundB * detsum;\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    bvirt = ax - acx;\n    acxtail = ax - (acx + bvirt) + (bvirt - cx);\n    bvirt = bx - bcx;\n    bcxtail = bx - (bcx + bvirt) + (bvirt - cx);\n    bvirt = ay - acy;\n    acytail = ay - (acy + bvirt) + (bvirt - cy);\n    bvirt = by - bcy;\n    bcytail = by - (bcy + bvirt) + (bvirt - cy);\n\n    if (acxtail === 0 && acytail === 0 && bcxtail === 0 && bcytail === 0) {\n        return det;\n    }\n\n    errbound = ccwerrboundC * detsum + resulterrbound * Math.abs(det);\n    det += (acx * bcytail + bcy * acxtail) - (acy * bcxtail + bcx * acytail);\n    if (det >= errbound || -det >= errbound) return det;\n\n    s1 = acxtail * bcy;\n    c = splitter * acxtail;\n    ahi = c - (c - acxtail);\n    alo = acxtail - ahi;\n    c = splitter * bcy;\n    bhi = c - (c - bcy);\n    blo = bcy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acytail * bcx;\n    c = splitter * acytail;\n    ahi = c - (c - acytail);\n    alo = acytail - ahi;\n    c = splitter * bcx;\n    bhi = c - (c - bcx);\n    blo = bcx - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    u[3] = u3;\n    const C1len = sum(4, B, 4, u, C1);\n\n    s1 = acx * bcytail;\n    c = splitter * acx;\n    ahi = c - (c - acx);\n    alo = acx - ahi;\n    c = splitter * bcytail;\n    bhi = c - (c - bcytail);\n    blo = bcytail - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acy * bcxtail;\n    c = splitter * acy;\n    ahi = c - (c - acy);\n    alo = acy - ahi;\n    c = splitter * bcxtail;\n    bhi = c - (c - bcxtail);\n    blo = bcxtail - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    u[3] = u3;\n    const C2len = sum(C1len, C1, 4, u, C2);\n\n    s1 = acxtail * bcytail;\n    c = splitter * acxtail;\n    ahi = c - (c - acxtail);\n    alo = acxtail - ahi;\n    c = splitter * bcytail;\n    bhi = c - (c - bcytail);\n    blo = bcytail - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acytail * bcxtail;\n    c = splitter * acytail;\n    ahi = c - (c - acytail);\n    alo = acytail - ahi;\n    c = splitter * bcxtail;\n    bhi = c - (c - bcxtail);\n    blo = bcxtail - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    u[3] = u3;\n    const Dlen = sum(C2len, C2, 4, u, D);\n\n    return D[Dlen - 1];\n}\n\nexport function orient2d(ax, ay, bx, by, cx, cy) {\n    const detleft = (ay - cy) * (bx - cx);\n    const detright = (ax - cx) * (by - cy);\n    const det = detleft - detright;\n\n    const detsum = Math.abs(detleft + detright);\n    if (Math.abs(det) >= ccwerrboundA * detsum) return det;\n\n    return -orient2dadapt(ax, ay, bx, by, cx, cy, detsum);\n}\n\nexport function orient2dfast(ax, ay, bx, by, cx, cy) {\n    return (ay - cy) * (bx - cx) - (ax - cx) * (by - cy);\n}\n", "import {epsilon, splitter, resulterrbound, estimate, vec, sum, scale} from './util.js';\n\nconst o3derrboundA = (7 + 56 * epsilon) * epsilon;\nconst o3derrboundB = (3 + 28 * epsilon) * epsilon;\nconst o3derrboundC = (26 + 288 * epsilon) * epsilon * epsilon;\n\nconst bc = vec(4);\nconst ca = vec(4);\nconst ab = vec(4);\nconst at_b = vec(4);\nconst at_c = vec(4);\nconst bt_c = vec(4);\nconst bt_a = vec(4);\nconst ct_a = vec(4);\nconst ct_b = vec(4);\nconst bct = vec(8);\nconst cat = vec(8);\nconst abt = vec(8);\nconst u = vec(4);\n\nconst _8 = vec(8);\nconst _8b = vec(8);\nconst _16 = vec(8);\nconst _12 = vec(12);\n\nlet fin = vec(192);\nlet fin2 = vec(192);\n\nfunction finadd(finlen, alen, a) {\n    finlen = sum(finlen, fin, alen, a, fin2);\n    const tmp = fin; fin = fin2; fin2 = tmp;\n    return finlen;\n}\n\nfunction tailinit(xtail, ytail, ax, ay, bx, by, a, b) {\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, t1, t0, u3, negate;\n    if (xtail === 0) {\n        if (ytail === 0) {\n            a[0] = 0;\n            b[0] = 0;\n            return 1;\n        } else {\n            negate = -ytail;\n            s1 = negate * ax;\n            c = splitter * negate;\n            ahi = c - (c - negate);\n            alo = negate - ahi;\n            c = splitter * ax;\n            bhi = c - (c - ax);\n            blo = ax - bhi;\n            a[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            a[1] = s1;\n            s1 = ytail * bx;\n            c = splitter * ytail;\n            ahi = c - (c - ytail);\n            alo = ytail - ahi;\n            c = splitter * bx;\n            bhi = c - (c - bx);\n            blo = bx - bhi;\n            b[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            b[1] = s1;\n            return 2;\n        }\n    } else {\n        if (ytail === 0) {\n            s1 = xtail * ay;\n            c = splitter * xtail;\n            ahi = c - (c - xtail);\n            alo = xtail - ahi;\n            c = splitter * ay;\n            bhi = c - (c - ay);\n            blo = ay - bhi;\n            a[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            a[1] = s1;\n            negate = -xtail;\n            s1 = negate * by;\n            c = splitter * negate;\n            ahi = c - (c - negate);\n            alo = negate - ahi;\n            c = splitter * by;\n            bhi = c - (c - by);\n            blo = by - bhi;\n            b[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            b[1] = s1;\n            return 2;\n        } else {\n            s1 = xtail * ay;\n            c = splitter * xtail;\n            ahi = c - (c - xtail);\n            alo = xtail - ahi;\n            c = splitter * ay;\n            bhi = c - (c - ay);\n            blo = ay - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = ytail * ax;\n            c = splitter * ytail;\n            ahi = c - (c - ytail);\n            alo = ytail - ahi;\n            c = splitter * ax;\n            bhi = c - (c - ax);\n            blo = ax - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 - t0;\n            bvirt = s0 - _i;\n            a[0] = s0 - (_i + bvirt) + (bvirt - t0);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 - t1;\n            bvirt = _0 - _i;\n            a[1] = _0 - (_i + bvirt) + (bvirt - t1);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            a[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            a[3] = u3;\n            s1 = ytail * bx;\n            c = splitter * ytail;\n            ahi = c - (c - ytail);\n            alo = ytail - ahi;\n            c = splitter * bx;\n            bhi = c - (c - bx);\n            blo = bx - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = xtail * by;\n            c = splitter * xtail;\n            ahi = c - (c - xtail);\n            alo = xtail - ahi;\n            c = splitter * by;\n            bhi = c - (c - by);\n            blo = by - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 - t0;\n            bvirt = s0 - _i;\n            b[0] = s0 - (_i + bvirt) + (bvirt - t0);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 - t1;\n            bvirt = _0 - _i;\n            b[1] = _0 - (_i + bvirt) + (bvirt - t1);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            b[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            b[3] = u3;\n            return 4;\n        }\n    }\n}\n\nfunction tailadd(finlen, a, b, k, z) {\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, u3;\n    s1 = a * b;\n    c = splitter * a;\n    ahi = c - (c - a);\n    alo = a - ahi;\n    c = splitter * b;\n    bhi = c - (c - b);\n    blo = b - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    c = splitter * k;\n    bhi = c - (c - k);\n    blo = k - bhi;\n    _i = s0 * k;\n    c = splitter * s0;\n    ahi = c - (c - s0);\n    alo = s0 - ahi;\n    u[0] = alo * blo - (_i - ahi * bhi - alo * bhi - ahi * blo);\n    _j = s1 * k;\n    c = splitter * s1;\n    ahi = c - (c - s1);\n    alo = s1 - ahi;\n    _0 = alo * blo - (_j - ahi * bhi - alo * bhi - ahi * blo);\n    _k = _i + _0;\n    bvirt = _k - _i;\n    u[1] = _i - (_k - bvirt) + (_0 - bvirt);\n    u3 = _j + _k;\n    u[2] = _k - (u3 - _j);\n    u[3] = u3;\n    finlen = finadd(finlen, 4, u);\n    if (z !== 0) {\n        c = splitter * z;\n        bhi = c - (c - z);\n        blo = z - bhi;\n        _i = s0 * z;\n        c = splitter * s0;\n        ahi = c - (c - s0);\n        alo = s0 - ahi;\n        u[0] = alo * blo - (_i - ahi * bhi - alo * bhi - ahi * blo);\n        _j = s1 * z;\n        c = splitter * s1;\n        ahi = c - (c - s1);\n        alo = s1 - ahi;\n        _0 = alo * blo - (_j - ahi * bhi - alo * bhi - ahi * blo);\n        _k = _i + _0;\n        bvirt = _k - _i;\n        u[1] = _i - (_k - bvirt) + (_0 - bvirt);\n        u3 = _j + _k;\n        u[2] = _k - (u3 - _j);\n        u[3] = u3;\n        finlen = finadd(finlen, 4, u);\n    }\n    return finlen;\n}\n\nfunction orient3dadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, permanent) {\n    let finlen;\n    let adxtail, bdxtail, cdxtail;\n    let adytail, bdytail, cdytail;\n    let adztail, bdztail, cdztail;\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, t1, t0, u3;\n\n    const adx = ax - dx;\n    const bdx = bx - dx;\n    const cdx = cx - dx;\n    const ady = ay - dy;\n    const bdy = by - dy;\n    const cdy = cy - dy;\n    const adz = az - dz;\n    const bdz = bz - dz;\n    const cdz = cz - dz;\n\n    s1 = bdx * cdy;\n    c = splitter * bdx;\n    ahi = c - (c - bdx);\n    alo = bdx - ahi;\n    c = splitter * cdy;\n    bhi = c - (c - cdy);\n    blo = cdy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cdx * bdy;\n    c = splitter * cdx;\n    ahi = c - (c - cdx);\n    alo = cdx - ahi;\n    c = splitter * bdy;\n    bhi = c - (c - bdy);\n    blo = bdy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    bc[3] = u3;\n    s1 = cdx * ady;\n    c = splitter * cdx;\n    ahi = c - (c - cdx);\n    alo = cdx - ahi;\n    c = splitter * ady;\n    bhi = c - (c - ady);\n    blo = ady - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = adx * cdy;\n    c = splitter * adx;\n    ahi = c - (c - adx);\n    alo = adx - ahi;\n    c = splitter * cdy;\n    bhi = c - (c - cdy);\n    blo = cdy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ca[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ca[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ca[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ca[3] = u3;\n    s1 = adx * bdy;\n    c = splitter * adx;\n    ahi = c - (c - adx);\n    alo = adx - ahi;\n    c = splitter * bdy;\n    bhi = c - (c - bdy);\n    blo = bdy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bdx * ady;\n    c = splitter * bdx;\n    ahi = c - (c - bdx);\n    alo = bdx - ahi;\n    c = splitter * ady;\n    bhi = c - (c - ady);\n    blo = ady - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ab[3] = u3;\n\n    finlen = sum(\n        sum(\n            scale(4, bc, adz, _8), _8,\n            scale(4, ca, bdz, _8b), _8b, _16), _16,\n        scale(4, ab, cdz, _8), _8, fin);\n\n    let det = estimate(finlen, fin);\n    let errbound = o3derrboundB * permanent;\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    bvirt = ax - adx;\n    adxtail = ax - (adx + bvirt) + (bvirt - dx);\n    bvirt = bx - bdx;\n    bdxtail = bx - (bdx + bvirt) + (bvirt - dx);\n    bvirt = cx - cdx;\n    cdxtail = cx - (cdx + bvirt) + (bvirt - dx);\n    bvirt = ay - ady;\n    adytail = ay - (ady + bvirt) + (bvirt - dy);\n    bvirt = by - bdy;\n    bdytail = by - (bdy + bvirt) + (bvirt - dy);\n    bvirt = cy - cdy;\n    cdytail = cy - (cdy + bvirt) + (bvirt - dy);\n    bvirt = az - adz;\n    adztail = az - (adz + bvirt) + (bvirt - dz);\n    bvirt = bz - bdz;\n    bdztail = bz - (bdz + bvirt) + (bvirt - dz);\n    bvirt = cz - cdz;\n    cdztail = cz - (cdz + bvirt) + (bvirt - dz);\n\n    if (adxtail === 0 && bdxtail === 0 && cdxtail === 0 &&\n        adytail === 0 && bdytail === 0 && cdytail === 0 &&\n        adztail === 0 && bdztail === 0 && cdztail === 0) {\n        return det;\n    }\n\n    errbound = o3derrboundC * permanent + resulterrbound * Math.abs(det);\n    det +=\n        adz * (bdx * cdytail + cdy * bdxtail - (bdy * cdxtail + cdx * bdytail)) + adztail * (bdx * cdy - bdy * cdx) +\n        bdz * (cdx * adytail + ady * cdxtail - (cdy * adxtail + adx * cdytail)) + bdztail * (cdx * ady - cdy * adx) +\n        cdz * (adx * bdytail + bdy * adxtail - (ady * bdxtail + bdx * adytail)) + cdztail * (adx * bdy - ady * bdx);\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    const at_len = tailinit(adxtail, adytail, bdx, bdy, cdx, cdy, at_b, at_c);\n    const bt_len = tailinit(bdxtail, bdytail, cdx, cdy, adx, ady, bt_c, bt_a);\n    const ct_len = tailinit(cdxtail, cdytail, adx, ady, bdx, bdy, ct_a, ct_b);\n\n    const bctlen = sum(bt_len, bt_c, ct_len, ct_b, bct);\n    finlen = finadd(finlen, scale(bctlen, bct, adz, _16), _16);\n\n    const catlen = sum(ct_len, ct_a, at_len, at_c, cat);\n    finlen = finadd(finlen, scale(catlen, cat, bdz, _16), _16);\n\n    const abtlen = sum(at_len, at_b, bt_len, bt_a, abt);\n    finlen = finadd(finlen, scale(abtlen, abt, cdz, _16), _16);\n\n    if (adztail !== 0) {\n        finlen = finadd(finlen, scale(4, bc, adztail, _12), _12);\n        finlen = finadd(finlen, scale(bctlen, bct, adztail, _16), _16);\n    }\n    if (bdztail !== 0) {\n        finlen = finadd(finlen, scale(4, ca, bdztail, _12), _12);\n        finlen = finadd(finlen, scale(catlen, cat, bdztail, _16), _16);\n    }\n    if (cdztail !== 0) {\n        finlen = finadd(finlen, scale(4, ab, cdztail, _12), _12);\n        finlen = finadd(finlen, scale(abtlen, abt, cdztail, _16), _16);\n    }\n\n    if (adxtail !== 0) {\n        if (bdytail !== 0) {\n            finlen = tailadd(finlen, adxtail, bdytail, cdz, cdztail);\n        }\n        if (cdytail !== 0) {\n            finlen = tailadd(finlen, -adxtail, cdytail, bdz, bdztail);\n        }\n    }\n    if (bdxtail !== 0) {\n        if (cdytail !== 0) {\n            finlen = tailadd(finlen, bdxtail, cdytail, adz, adztail);\n        }\n        if (adytail !== 0) {\n            finlen = tailadd(finlen, -bdxtail, adytail, cdz, cdztail);\n        }\n    }\n    if (cdxtail !== 0) {\n        if (adytail !== 0) {\n            finlen = tailadd(finlen, cdxtail, adytail, bdz, bdztail);\n        }\n        if (bdytail !== 0) {\n            finlen = tailadd(finlen, -cdxtail, bdytail, adz, adztail);\n        }\n    }\n\n    return fin[finlen - 1];\n}\n\nexport function orient3d(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz) {\n    const adx = ax - dx;\n    const bdx = bx - dx;\n    const cdx = cx - dx;\n    const ady = ay - dy;\n    const bdy = by - dy;\n    const cdy = cy - dy;\n    const adz = az - dz;\n    const bdz = bz - dz;\n    const cdz = cz - dz;\n\n    const bdxcdy = bdx * cdy;\n    const cdxbdy = cdx * bdy;\n\n    const cdxady = cdx * ady;\n    const adxcdy = adx * cdy;\n\n    const adxbdy = adx * bdy;\n    const bdxady = bdx * ady;\n\n    const det =\n        adz * (bdxcdy - cdxbdy) +\n        bdz * (cdxady - adxcdy) +\n        cdz * (adxbdy - bdxady);\n\n    const permanent =\n        (Math.abs(bdxcdy) + Math.abs(cdxbdy)) * Math.abs(adz) +\n        (Math.abs(cdxady) + Math.abs(adxcdy)) * Math.abs(bdz) +\n        (Math.abs(adxbdy) + Math.abs(bdxady)) * Math.abs(cdz);\n\n    const errbound = o3derrboundA * permanent;\n    if (det > errbound || -det > errbound) {\n        return det;\n    }\n\n    return orient3dadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, permanent);\n}\n\nexport function orient3dfast(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz) {\n    const adx = ax - dx;\n    const bdx = bx - dx;\n    const cdx = cx - dx;\n    const ady = ay - dy;\n    const bdy = by - dy;\n    const cdy = cy - dy;\n    const adz = az - dz;\n    const bdz = bz - dz;\n    const cdz = cz - dz;\n\n    return adx * (bdy * cdz - bdz * cdy) +\n        bdx * (cdy * adz - cdz * ady) +\n        cdx * (ady * bdz - adz * bdy);\n}\n", "import {epsilon, splitter, resulterrbound, estimate, vec, sum, sum_three, scale} from './util.js';\n\nconst iccerrboundA = (10 + 96 * epsilon) * epsilon;\nconst iccerrboundB = (4 + 48 * epsilon) * epsilon;\nconst iccerrboundC = (44 + 576 * epsilon) * epsilon * epsilon;\n\nconst bc = vec(4);\nconst ca = vec(4);\nconst ab = vec(4);\nconst aa = vec(4);\nconst bb = vec(4);\nconst cc = vec(4);\nconst u = vec(4);\nconst v = vec(4);\nconst axtbc = vec(8);\nconst aytbc = vec(8);\nconst bxtca = vec(8);\nconst bytca = vec(8);\nconst cxtab = vec(8);\nconst cytab = vec(8);\nconst abt = vec(8);\nconst bct = vec(8);\nconst cat = vec(8);\nconst abtt = vec(4);\nconst bctt = vec(4);\nconst catt = vec(4);\n\nconst _8 = vec(8);\nconst _16 = vec(16);\nconst _16b = vec(16);\nconst _16c = vec(16);\nconst _32 = vec(32);\nconst _32b = vec(32);\nconst _48 = vec(48);\nconst _64 = vec(64);\n\nlet fin = vec(1152);\nlet fin2 = vec(1152);\n\nfunction finadd(finlen, a, alen) {\n    finlen = sum(finlen, fin, a, alen, fin2);\n    const tmp = fin; fin = fin2; fin2 = tmp;\n    return finlen;\n}\n\nfunction incircleadapt(ax, ay, bx, by, cx, cy, dx, dy, permanent) {\n    let finlen;\n    let adxtail, bdxtail, cdxtail, adytail, bdytail, cdytail;\n    let axtbclen, aytbclen, bxtcalen, bytcalen, cxtablen, cytablen;\n    let abtlen, bctlen, catlen;\n    let abttlen, bcttlen, cattlen;\n    let n1, n0;\n\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n\n    const adx = ax - dx;\n    const bdx = bx - dx;\n    const cdx = cx - dx;\n    const ady = ay - dy;\n    const bdy = by - dy;\n    const cdy = cy - dy;\n\n    s1 = bdx * cdy;\n    c = splitter * bdx;\n    ahi = c - (c - bdx);\n    alo = bdx - ahi;\n    c = splitter * cdy;\n    bhi = c - (c - cdy);\n    blo = cdy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cdx * bdy;\n    c = splitter * cdx;\n    ahi = c - (c - cdx);\n    alo = cdx - ahi;\n    c = splitter * bdy;\n    bhi = c - (c - bdy);\n    blo = bdy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    bc[3] = u3;\n    s1 = cdx * ady;\n    c = splitter * cdx;\n    ahi = c - (c - cdx);\n    alo = cdx - ahi;\n    c = splitter * ady;\n    bhi = c - (c - ady);\n    blo = ady - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = adx * cdy;\n    c = splitter * adx;\n    ahi = c - (c - adx);\n    alo = adx - ahi;\n    c = splitter * cdy;\n    bhi = c - (c - cdy);\n    blo = cdy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ca[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ca[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ca[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ca[3] = u3;\n    s1 = adx * bdy;\n    c = splitter * adx;\n    ahi = c - (c - adx);\n    alo = adx - ahi;\n    c = splitter * bdy;\n    bhi = c - (c - bdy);\n    blo = bdy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bdx * ady;\n    c = splitter * bdx;\n    ahi = c - (c - bdx);\n    alo = bdx - ahi;\n    c = splitter * ady;\n    bhi = c - (c - ady);\n    blo = ady - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ab[3] = u3;\n\n    finlen = sum(\n        sum(\n            sum(\n                scale(scale(4, bc, adx, _8), _8, adx, _16), _16,\n                scale(scale(4, bc, ady, _8), _8, ady, _16b), _16b, _32), _32,\n            sum(\n                scale(scale(4, ca, bdx, _8), _8, bdx, _16), _16,\n                scale(scale(4, ca, bdy, _8), _8, bdy, _16b), _16b, _32b), _32b, _64), _64,\n        sum(\n            scale(scale(4, ab, cdx, _8), _8, cdx, _16), _16,\n            scale(scale(4, ab, cdy, _8), _8, cdy, _16b), _16b, _32), _32, fin);\n\n    let det = estimate(finlen, fin);\n    let errbound = iccerrboundB * permanent;\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    bvirt = ax - adx;\n    adxtail = ax - (adx + bvirt) + (bvirt - dx);\n    bvirt = ay - ady;\n    adytail = ay - (ady + bvirt) + (bvirt - dy);\n    bvirt = bx - bdx;\n    bdxtail = bx - (bdx + bvirt) + (bvirt - dx);\n    bvirt = by - bdy;\n    bdytail = by - (bdy + bvirt) + (bvirt - dy);\n    bvirt = cx - cdx;\n    cdxtail = cx - (cdx + bvirt) + (bvirt - dx);\n    bvirt = cy - cdy;\n    cdytail = cy - (cdy + bvirt) + (bvirt - dy);\n    if (adxtail === 0 && bdxtail === 0 && cdxtail === 0 && adytail === 0 && bdytail === 0 && cdytail === 0) {\n        return det;\n    }\n\n    errbound = iccerrboundC * permanent + resulterrbound * Math.abs(det);\n    det += ((adx * adx + ady * ady) * ((bdx * cdytail + cdy * bdxtail) - (bdy * cdxtail + cdx * bdytail)) +\n        2 * (adx * adxtail + ady * adytail) * (bdx * cdy - bdy * cdx)) +\n        ((bdx * bdx + bdy * bdy) * ((cdx * adytail + ady * cdxtail) - (cdy * adxtail + adx * cdytail)) +\n        2 * (bdx * bdxtail + bdy * bdytail) * (cdx * ady - cdy * adx)) +\n        ((cdx * cdx + cdy * cdy) * ((adx * bdytail + bdy * adxtail) - (ady * bdxtail + bdx * adytail)) +\n        2 * (cdx * cdxtail + cdy * cdytail) * (adx * bdy - ady * bdx));\n\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    if (bdxtail !== 0 || bdytail !== 0 || cdxtail !== 0 || cdytail !== 0) {\n        s1 = adx * adx;\n        c = splitter * adx;\n        ahi = c - (c - adx);\n        alo = adx - ahi;\n        s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\n        t1 = ady * ady;\n        c = splitter * ady;\n        ahi = c - (c - ady);\n        alo = ady - ahi;\n        t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\n        _i = s0 + t0;\n        bvirt = _i - s0;\n        aa[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n        _j = s1 + _i;\n        bvirt = _j - s1;\n        _0 = s1 - (_j - bvirt) + (_i - bvirt);\n        _i = _0 + t1;\n        bvirt = _i - _0;\n        aa[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n        u3 = _j + _i;\n        bvirt = u3 - _j;\n        aa[2] = _j - (u3 - bvirt) + (_i - bvirt);\n        aa[3] = u3;\n    }\n    if (cdxtail !== 0 || cdytail !== 0 || adxtail !== 0 || adytail !== 0) {\n        s1 = bdx * bdx;\n        c = splitter * bdx;\n        ahi = c - (c - bdx);\n        alo = bdx - ahi;\n        s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\n        t1 = bdy * bdy;\n        c = splitter * bdy;\n        ahi = c - (c - bdy);\n        alo = bdy - ahi;\n        t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\n        _i = s0 + t0;\n        bvirt = _i - s0;\n        bb[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n        _j = s1 + _i;\n        bvirt = _j - s1;\n        _0 = s1 - (_j - bvirt) + (_i - bvirt);\n        _i = _0 + t1;\n        bvirt = _i - _0;\n        bb[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n        u3 = _j + _i;\n        bvirt = u3 - _j;\n        bb[2] = _j - (u3 - bvirt) + (_i - bvirt);\n        bb[3] = u3;\n    }\n    if (adxtail !== 0 || adytail !== 0 || bdxtail !== 0 || bdytail !== 0) {\n        s1 = cdx * cdx;\n        c = splitter * cdx;\n        ahi = c - (c - cdx);\n        alo = cdx - ahi;\n        s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\n        t1 = cdy * cdy;\n        c = splitter * cdy;\n        ahi = c - (c - cdy);\n        alo = cdy - ahi;\n        t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\n        _i = s0 + t0;\n        bvirt = _i - s0;\n        cc[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n        _j = s1 + _i;\n        bvirt = _j - s1;\n        _0 = s1 - (_j - bvirt) + (_i - bvirt);\n        _i = _0 + t1;\n        bvirt = _i - _0;\n        cc[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n        u3 = _j + _i;\n        bvirt = u3 - _j;\n        cc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n        cc[3] = u3;\n    }\n\n    if (adxtail !== 0) {\n        axtbclen = scale(4, bc, adxtail, axtbc);\n        finlen = finadd(finlen, sum_three(\n            scale(axtbclen, axtbc, 2 * adx, _16), _16,\n            scale(scale(4, cc, adxtail, _8), _8, bdy, _16b), _16b,\n            scale(scale(4, bb, adxtail, _8), _8, -cdy, _16c), _16c, _32, _48), _48);\n    }\n    if (adytail !== 0) {\n        aytbclen = scale(4, bc, adytail, aytbc);\n        finlen = finadd(finlen, sum_three(\n            scale(aytbclen, aytbc, 2 * ady, _16), _16,\n            scale(scale(4, bb, adytail, _8), _8, cdx, _16b), _16b,\n            scale(scale(4, cc, adytail, _8), _8, -bdx, _16c), _16c, _32, _48), _48);\n    }\n    if (bdxtail !== 0) {\n        bxtcalen = scale(4, ca, bdxtail, bxtca);\n        finlen = finadd(finlen, sum_three(\n            scale(bxtcalen, bxtca, 2 * bdx, _16), _16,\n            scale(scale(4, aa, bdxtail, _8), _8, cdy, _16b), _16b,\n            scale(scale(4, cc, bdxtail, _8), _8, -ady, _16c), _16c, _32, _48), _48);\n    }\n    if (bdytail !== 0) {\n        bytcalen = scale(4, ca, bdytail, bytca);\n        finlen = finadd(finlen, sum_three(\n            scale(bytcalen, bytca, 2 * bdy, _16), _16,\n            scale(scale(4, cc, bdytail, _8), _8, adx, _16b), _16b,\n            scale(scale(4, aa, bdytail, _8), _8, -cdx, _16c), _16c, _32, _48), _48);\n    }\n    if (cdxtail !== 0) {\n        cxtablen = scale(4, ab, cdxtail, cxtab);\n        finlen = finadd(finlen, sum_three(\n            scale(cxtablen, cxtab, 2 * cdx, _16), _16,\n            scale(scale(4, bb, cdxtail, _8), _8, ady, _16b), _16b,\n            scale(scale(4, aa, cdxtail, _8), _8, -bdy, _16c), _16c, _32, _48), _48);\n    }\n    if (cdytail !== 0) {\n        cytablen = scale(4, ab, cdytail, cytab);\n        finlen = finadd(finlen, sum_three(\n            scale(cytablen, cytab, 2 * cdy, _16), _16,\n            scale(scale(4, aa, cdytail, _8), _8, bdx, _16b), _16b,\n            scale(scale(4, bb, cdytail, _8), _8, -adx, _16c), _16c, _32, _48), _48);\n    }\n\n    if (adxtail !== 0 || adytail !== 0) {\n        if (bdxtail !== 0 || bdytail !== 0 || cdxtail !== 0 || cdytail !== 0) {\n            s1 = bdxtail * cdy;\n            c = splitter * bdxtail;\n            ahi = c - (c - bdxtail);\n            alo = bdxtail - ahi;\n            c = splitter * cdy;\n            bhi = c - (c - cdy);\n            blo = cdy - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = bdx * cdytail;\n            c = splitter * bdx;\n            ahi = c - (c - bdx);\n            alo = bdx - ahi;\n            c = splitter * cdytail;\n            bhi = c - (c - cdytail);\n            blo = cdytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            u[3] = u3;\n            s1 = cdxtail * -bdy;\n            c = splitter * cdxtail;\n            ahi = c - (c - cdxtail);\n            alo = cdxtail - ahi;\n            c = splitter * -bdy;\n            bhi = c - (c - -bdy);\n            blo = -bdy - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = cdx * -bdytail;\n            c = splitter * cdx;\n            ahi = c - (c - cdx);\n            alo = cdx - ahi;\n            c = splitter * -bdytail;\n            bhi = c - (c - -bdytail);\n            blo = -bdytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            v[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            v[3] = u3;\n            bctlen = sum(4, u, 4, v, bct);\n            s1 = bdxtail * cdytail;\n            c = splitter * bdxtail;\n            ahi = c - (c - bdxtail);\n            alo = bdxtail - ahi;\n            c = splitter * cdytail;\n            bhi = c - (c - cdytail);\n            blo = cdytail - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = cdxtail * bdytail;\n            c = splitter * cdxtail;\n            ahi = c - (c - cdxtail);\n            alo = cdxtail - ahi;\n            c = splitter * bdytail;\n            bhi = c - (c - bdytail);\n            blo = bdytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 - t0;\n            bvirt = s0 - _i;\n            bctt[0] = s0 - (_i + bvirt) + (bvirt - t0);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 - t1;\n            bvirt = _0 - _i;\n            bctt[1] = _0 - (_i + bvirt) + (bvirt - t1);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            bctt[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            bctt[3] = u3;\n            bcttlen = 4;\n        } else {\n            bct[0] = 0;\n            bctlen = 1;\n            bctt[0] = 0;\n            bcttlen = 1;\n        }\n        if (adxtail !== 0) {\n            const len = scale(bctlen, bct, adxtail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(axtbclen, axtbc, adxtail, _16), _16,\n                scale(len, _16c, 2 * adx, _32), _32, _48), _48);\n\n            const len2 = scale(bcttlen, bctt, adxtail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * adx, _16), _16,\n                scale(len2, _8, adxtail, _16b), _16b,\n                scale(len, _16c, adxtail, _32), _32, _32b, _64), _64);\n\n            if (bdytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, cc, adxtail, _8), _8, bdytail, _16), _16);\n            }\n            if (cdytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, bb, -adxtail, _8), _8, cdytail, _16), _16);\n            }\n        }\n        if (adytail !== 0) {\n            const len = scale(bctlen, bct, adytail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(aytbclen, aytbc, adytail, _16), _16,\n                scale(len, _16c, 2 * ady, _32), _32, _48), _48);\n\n            const len2 = scale(bcttlen, bctt, adytail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * ady, _16), _16,\n                scale(len2, _8, adytail, _16b), _16b,\n                scale(len, _16c, adytail, _32), _32, _32b, _64), _64);\n        }\n    }\n    if (bdxtail !== 0 || bdytail !== 0) {\n        if (cdxtail !== 0 || cdytail !== 0 || adxtail !== 0 || adytail !== 0) {\n            s1 = cdxtail * ady;\n            c = splitter * cdxtail;\n            ahi = c - (c - cdxtail);\n            alo = cdxtail - ahi;\n            c = splitter * ady;\n            bhi = c - (c - ady);\n            blo = ady - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = cdx * adytail;\n            c = splitter * cdx;\n            ahi = c - (c - cdx);\n            alo = cdx - ahi;\n            c = splitter * adytail;\n            bhi = c - (c - adytail);\n            blo = adytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            u[3] = u3;\n            n1 = -cdy;\n            n0 = -cdytail;\n            s1 = adxtail * n1;\n            c = splitter * adxtail;\n            ahi = c - (c - adxtail);\n            alo = adxtail - ahi;\n            c = splitter * n1;\n            bhi = c - (c - n1);\n            blo = n1 - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = adx * n0;\n            c = splitter * adx;\n            ahi = c - (c - adx);\n            alo = adx - ahi;\n            c = splitter * n0;\n            bhi = c - (c - n0);\n            blo = n0 - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            v[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            v[3] = u3;\n            catlen = sum(4, u, 4, v, cat);\n            s1 = cdxtail * adytail;\n            c = splitter * cdxtail;\n            ahi = c - (c - cdxtail);\n            alo = cdxtail - ahi;\n            c = splitter * adytail;\n            bhi = c - (c - adytail);\n            blo = adytail - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = adxtail * cdytail;\n            c = splitter * adxtail;\n            ahi = c - (c - adxtail);\n            alo = adxtail - ahi;\n            c = splitter * cdytail;\n            bhi = c - (c - cdytail);\n            blo = cdytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 - t0;\n            bvirt = s0 - _i;\n            catt[0] = s0 - (_i + bvirt) + (bvirt - t0);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 - t1;\n            bvirt = _0 - _i;\n            catt[1] = _0 - (_i + bvirt) + (bvirt - t1);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            catt[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            catt[3] = u3;\n            cattlen = 4;\n        } else {\n            cat[0] = 0;\n            catlen = 1;\n            catt[0] = 0;\n            cattlen = 1;\n        }\n        if (bdxtail !== 0) {\n            const len = scale(catlen, cat, bdxtail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(bxtcalen, bxtca, bdxtail, _16), _16,\n                scale(len, _16c, 2 * bdx, _32), _32, _48), _48);\n\n            const len2 = scale(cattlen, catt, bdxtail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * bdx, _16), _16,\n                scale(len2, _8, bdxtail, _16b), _16b,\n                scale(len, _16c, bdxtail, _32), _32, _32b, _64), _64);\n\n            if (cdytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, aa, bdxtail, _8), _8, cdytail, _16), _16);\n            }\n            if (adytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, cc, -bdxtail, _8), _8, adytail, _16), _16);\n            }\n        }\n        if (bdytail !== 0) {\n            const len = scale(catlen, cat, bdytail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(bytcalen, bytca, bdytail, _16), _16,\n                scale(len, _16c, 2 * bdy, _32), _32, _48), _48);\n\n            const len2 = scale(cattlen, catt, bdytail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * bdy, _16), _16,\n                scale(len2, _8, bdytail, _16b), _16b,\n                scale(len, _16c, bdytail, _32), _32,  _32b, _64), _64);\n        }\n    }\n    if (cdxtail !== 0 || cdytail !== 0) {\n        if (adxtail !== 0 || adytail !== 0 || bdxtail !== 0 || bdytail !== 0) {\n            s1 = adxtail * bdy;\n            c = splitter * adxtail;\n            ahi = c - (c - adxtail);\n            alo = adxtail - ahi;\n            c = splitter * bdy;\n            bhi = c - (c - bdy);\n            blo = bdy - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = adx * bdytail;\n            c = splitter * adx;\n            ahi = c - (c - adx);\n            alo = adx - ahi;\n            c = splitter * bdytail;\n            bhi = c - (c - bdytail);\n            blo = bdytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            u[3] = u3;\n            n1 = -ady;\n            n0 = -adytail;\n            s1 = bdxtail * n1;\n            c = splitter * bdxtail;\n            ahi = c - (c - bdxtail);\n            alo = bdxtail - ahi;\n            c = splitter * n1;\n            bhi = c - (c - n1);\n            blo = n1 - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = bdx * n0;\n            c = splitter * bdx;\n            ahi = c - (c - bdx);\n            alo = bdx - ahi;\n            c = splitter * n0;\n            bhi = c - (c - n0);\n            blo = n0 - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            v[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            v[3] = u3;\n            abtlen = sum(4, u, 4, v, abt);\n            s1 = adxtail * bdytail;\n            c = splitter * adxtail;\n            ahi = c - (c - adxtail);\n            alo = adxtail - ahi;\n            c = splitter * bdytail;\n            bhi = c - (c - bdytail);\n            blo = bdytail - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = bdxtail * adytail;\n            c = splitter * bdxtail;\n            ahi = c - (c - bdxtail);\n            alo = bdxtail - ahi;\n            c = splitter * adytail;\n            bhi = c - (c - adytail);\n            blo = adytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 - t0;\n            bvirt = s0 - _i;\n            abtt[0] = s0 - (_i + bvirt) + (bvirt - t0);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 - t1;\n            bvirt = _0 - _i;\n            abtt[1] = _0 - (_i + bvirt) + (bvirt - t1);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            abtt[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            abtt[3] = u3;\n            abttlen = 4;\n        } else {\n            abt[0] = 0;\n            abtlen = 1;\n            abtt[0] = 0;\n            abttlen = 1;\n        }\n        if (cdxtail !== 0) {\n            const len = scale(abtlen, abt, cdxtail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(cxtablen, cxtab, cdxtail, _16), _16,\n                scale(len, _16c, 2 * cdx, _32), _32, _48), _48);\n\n            const len2 = scale(abttlen, abtt, cdxtail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * cdx, _16), _16,\n                scale(len2, _8, cdxtail, _16b), _16b,\n                scale(len, _16c, cdxtail, _32), _32, _32b, _64), _64);\n\n            if (adytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, bb, cdxtail, _8), _8, adytail, _16), _16);\n            }\n            if (bdytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, aa, -cdxtail, _8), _8, bdytail, _16), _16);\n            }\n        }\n        if (cdytail !== 0) {\n            const len = scale(abtlen, abt, cdytail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(cytablen, cytab, cdytail, _16), _16,\n                scale(len, _16c, 2 * cdy, _32), _32, _48), _48);\n\n            const len2 = scale(abttlen, abtt, cdytail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * cdy, _16), _16,\n                scale(len2, _8, cdytail, _16b), _16b,\n                scale(len, _16c, cdytail, _32), _32, _32b, _64), _64);\n        }\n    }\n\n    return fin[finlen - 1];\n}\n\nexport function incircle(ax, ay, bx, by, cx, cy, dx, dy) {\n    const adx = ax - dx;\n    const bdx = bx - dx;\n    const cdx = cx - dx;\n    const ady = ay - dy;\n    const bdy = by - dy;\n    const cdy = cy - dy;\n\n    const bdxcdy = bdx * cdy;\n    const cdxbdy = cdx * bdy;\n    const alift = adx * adx + ady * ady;\n\n    const cdxady = cdx * ady;\n    const adxcdy = adx * cdy;\n    const blift = bdx * bdx + bdy * bdy;\n\n    const adxbdy = adx * bdy;\n    const bdxady = bdx * ady;\n    const clift = cdx * cdx + cdy * cdy;\n\n    const det =\n        alift * (bdxcdy - cdxbdy) +\n        blift * (cdxady - adxcdy) +\n        clift * (adxbdy - bdxady);\n\n    const permanent =\n        (Math.abs(bdxcdy) + Math.abs(cdxbdy)) * alift +\n        (Math.abs(cdxady) + Math.abs(adxcdy)) * blift +\n        (Math.abs(adxbdy) + Math.abs(bdxady)) * clift;\n\n    const errbound = iccerrboundA * permanent;\n\n    if (det > errbound || -det > errbound) {\n        return det;\n    }\n    return incircleadapt(ax, ay, bx, by, cx, cy, dx, dy, permanent);\n}\n\nexport function incirclefast(ax, ay, bx, by, cx, cy, dx, dy) {\n    const adx = ax - dx;\n    const ady = ay - dy;\n    const bdx = bx - dx;\n    const bdy = by - dy;\n    const cdx = cx - dx;\n    const cdy = cy - dy;\n\n    const abdet = adx * bdy - bdx * ady;\n    const bcdet = bdx * cdy - cdx * bdy;\n    const cadet = cdx * ady - adx * cdy;\n    const alift = adx * adx + ady * ady;\n    const blift = bdx * bdx + bdy * bdy;\n    const clift = cdx * cdx + cdy * cdy;\n\n    return alift * bcdet + blift * cadet + clift * abdet;\n}\n", "import {epsilon, splitter, resulterrbound, estimate, vec, sum, sum_three, scale, negate} from './util.js';\n\nconst isperrboundA = (16 + 224 * epsilon) * epsilon;\nconst isperrboundB = (5 + 72 * epsilon) * epsilon;\nconst isperrboundC = (71 + 1408 * epsilon) * epsilon * epsilon;\n\nconst ab = vec(4);\nconst bc = vec(4);\nconst cd = vec(4);\nconst de = vec(4);\nconst ea = vec(4);\nconst ac = vec(4);\nconst bd = vec(4);\nconst ce = vec(4);\nconst da = vec(4);\nconst eb = vec(4);\n\nconst abc = vec(24);\nconst bcd = vec(24);\nconst cde = vec(24);\nconst dea = vec(24);\nconst eab = vec(24);\nconst abd = vec(24);\nconst bce = vec(24);\nconst cda = vec(24);\nconst deb = vec(24);\nconst eac = vec(24);\n\nconst adet = vec(1152);\nconst bdet = vec(1152);\nconst cdet = vec(1152);\nconst ddet = vec(1152);\nconst edet = vec(1152);\nconst abdet = vec(2304);\nconst cddet = vec(2304);\nconst cdedet = vec(3456);\nconst deter = vec(5760);\n\nconst _8 = vec(8);\nconst _8b = vec(8);\nconst _8c = vec(8);\nconst _16 = vec(16);\nconst _24 = vec(24);\nconst _48 = vec(48);\nconst _48b = vec(48);\nconst _96 = vec(96);\nconst _192 = vec(192);\nconst _384x = vec(384);\nconst _384y = vec(384);\nconst _384z = vec(384);\nconst _768 = vec(768);\n\nfunction sum_three_scale(a, b, c, az, bz, cz, out) {\n    return sum_three(\n        scale(4, a, az, _8), _8,\n        scale(4, b, bz, _8b), _8b,\n        scale(4, c, cz, _8c), _8c, _16, out);\n}\n\nfunction liftexact(alen, a, blen, b, clen, c, dlen, d, x, y, z, out) {\n    const len = sum(\n        sum(alen, a, blen, b, _48), _48,\n        negate(sum(clen, c, dlen, d, _48b), _48b), _48b, _96);\n\n    return sum_three(\n        scale(scale(len, _96, x, _192), _192, x, _384x), _384x,\n        scale(scale(len, _96, y, _192), _192, y, _384y), _384y,\n        scale(scale(len, _96, z, _192), _192, z, _384z), _384z, _768, out);\n}\n\nfunction insphereexact(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez) {\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n\n    s1 = ax * by;\n    c = splitter * ax;\n    ahi = c - (c - ax);\n    alo = ax - ahi;\n    c = splitter * by;\n    bhi = c - (c - by);\n    blo = by - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bx * ay;\n    c = splitter * bx;\n    ahi = c - (c - bx);\n    alo = bx - ahi;\n    c = splitter * ay;\n    bhi = c - (c - ay);\n    blo = ay - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ab[3] = u3;\n    s1 = bx * cy;\n    c = splitter * bx;\n    ahi = c - (c - bx);\n    alo = bx - ahi;\n    c = splitter * cy;\n    bhi = c - (c - cy);\n    blo = cy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cx * by;\n    c = splitter * cx;\n    ahi = c - (c - cx);\n    alo = cx - ahi;\n    c = splitter * by;\n    bhi = c - (c - by);\n    blo = by - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    bc[3] = u3;\n    s1 = cx * dy;\n    c = splitter * cx;\n    ahi = c - (c - cx);\n    alo = cx - ahi;\n    c = splitter * dy;\n    bhi = c - (c - dy);\n    blo = dy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = dx * cy;\n    c = splitter * dx;\n    ahi = c - (c - dx);\n    alo = dx - ahi;\n    c = splitter * cy;\n    bhi = c - (c - cy);\n    blo = cy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    cd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    cd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    cd[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    cd[3] = u3;\n    s1 = dx * ey;\n    c = splitter * dx;\n    ahi = c - (c - dx);\n    alo = dx - ahi;\n    c = splitter * ey;\n    bhi = c - (c - ey);\n    blo = ey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = ex * dy;\n    c = splitter * ex;\n    ahi = c - (c - ex);\n    alo = ex - ahi;\n    c = splitter * dy;\n    bhi = c - (c - dy);\n    blo = dy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    de[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    de[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    de[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    de[3] = u3;\n    s1 = ex * ay;\n    c = splitter * ex;\n    ahi = c - (c - ex);\n    alo = ex - ahi;\n    c = splitter * ay;\n    bhi = c - (c - ay);\n    blo = ay - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = ax * ey;\n    c = splitter * ax;\n    ahi = c - (c - ax);\n    alo = ax - ahi;\n    c = splitter * ey;\n    bhi = c - (c - ey);\n    blo = ey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ea[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ea[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ea[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ea[3] = u3;\n    s1 = ax * cy;\n    c = splitter * ax;\n    ahi = c - (c - ax);\n    alo = ax - ahi;\n    c = splitter * cy;\n    bhi = c - (c - cy);\n    blo = cy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cx * ay;\n    c = splitter * cx;\n    ahi = c - (c - cx);\n    alo = cx - ahi;\n    c = splitter * ay;\n    bhi = c - (c - ay);\n    blo = ay - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ac[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ac[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ac[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ac[3] = u3;\n    s1 = bx * dy;\n    c = splitter * bx;\n    ahi = c - (c - bx);\n    alo = bx - ahi;\n    c = splitter * dy;\n    bhi = c - (c - dy);\n    blo = dy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = dx * by;\n    c = splitter * dx;\n    ahi = c - (c - dx);\n    alo = dx - ahi;\n    c = splitter * by;\n    bhi = c - (c - by);\n    blo = by - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    bd[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    bd[3] = u3;\n    s1 = cx * ey;\n    c = splitter * cx;\n    ahi = c - (c - cx);\n    alo = cx - ahi;\n    c = splitter * ey;\n    bhi = c - (c - ey);\n    blo = ey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = ex * cy;\n    c = splitter * ex;\n    ahi = c - (c - ex);\n    alo = ex - ahi;\n    c = splitter * cy;\n    bhi = c - (c - cy);\n    blo = cy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ce[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ce[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ce[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ce[3] = u3;\n    s1 = dx * ay;\n    c = splitter * dx;\n    ahi = c - (c - dx);\n    alo = dx - ahi;\n    c = splitter * ay;\n    bhi = c - (c - ay);\n    blo = ay - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = ax * dy;\n    c = splitter * ax;\n    ahi = c - (c - ax);\n    alo = ax - ahi;\n    c = splitter * dy;\n    bhi = c - (c - dy);\n    blo = dy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    da[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    da[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    da[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    da[3] = u3;\n    s1 = ex * by;\n    c = splitter * ex;\n    ahi = c - (c - ex);\n    alo = ex - ahi;\n    c = splitter * by;\n    bhi = c - (c - by);\n    blo = by - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bx * ey;\n    c = splitter * bx;\n    ahi = c - (c - bx);\n    alo = bx - ahi;\n    c = splitter * ey;\n    bhi = c - (c - ey);\n    blo = ey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    eb[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    eb[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    eb[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    eb[3] = u3;\n\n    const abclen = sum_three_scale(ab, bc, ac, cz, az, -bz, abc);\n    const bcdlen = sum_three_scale(bc, cd, bd, dz, bz, -cz, bcd);\n    const cdelen = sum_three_scale(cd, de, ce, ez, cz, -dz, cde);\n    const dealen = sum_three_scale(de, ea, da, az, dz, -ez, dea);\n    const eablen = sum_three_scale(ea, ab, eb, bz, ez, -az, eab);\n    const abdlen = sum_three_scale(ab, bd, da, dz, az, bz, abd);\n    const bcelen = sum_three_scale(bc, ce, eb, ez, bz, cz, bce);\n    const cdalen = sum_three_scale(cd, da, ac, az, cz, dz, cda);\n    const deblen = sum_three_scale(de, eb, bd, bz, dz, ez, deb);\n    const eaclen = sum_three_scale(ea, ac, ce, cz, ez, az, eac);\n\n    const deterlen = sum_three(\n        liftexact(cdelen, cde, bcelen, bce, deblen, deb, bcdlen, bcd, ax, ay, az, adet), adet,\n        liftexact(dealen, dea, cdalen, cda, eaclen, eac, cdelen, cde, bx, by, bz, bdet), bdet,\n        sum_three(\n            liftexact(eablen, eab, deblen, deb, abdlen, abd, dealen, dea, cx, cy, cz, cdet), cdet,\n            liftexact(abclen, abc, eaclen, eac, bcelen, bce, eablen, eab, dx, dy, dz, ddet), ddet,\n            liftexact(bcdlen, bcd, abdlen, abd, cdalen, cda, abclen, abc, ex, ey, ez, edet), edet, cddet, cdedet), cdedet, abdet, deter);\n\n    return deter[deterlen - 1];\n}\n\nconst xdet = vec(96);\nconst ydet = vec(96);\nconst zdet = vec(96);\nconst fin = vec(1152);\n\nfunction liftadapt(a, b, c, az, bz, cz, x, y, z, out) {\n    const len = sum_three_scale(a, b, c, az, bz, cz, _24);\n    return sum_three(\n        scale(scale(len, _24, x, _48), _48, x, xdet), xdet,\n        scale(scale(len, _24, y, _48), _48, y, ydet), ydet,\n        scale(scale(len, _24, z, _48), _48, z, zdet), zdet, _192, out);\n}\n\nfunction insphereadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez, permanent) {\n    let ab3, bc3, cd3, da3, ac3, bd3;\n\n    let aextail, bextail, cextail, dextail;\n    let aeytail, beytail, ceytail, deytail;\n    let aeztail, beztail, ceztail, deztail;\n\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0;\n\n    const aex = ax - ex;\n    const bex = bx - ex;\n    const cex = cx - ex;\n    const dex = dx - ex;\n    const aey = ay - ey;\n    const bey = by - ey;\n    const cey = cy - ey;\n    const dey = dy - ey;\n    const aez = az - ez;\n    const bez = bz - ez;\n    const cez = cz - ez;\n    const dez = dz - ez;\n\n    s1 = aex * bey;\n    c = splitter * aex;\n    ahi = c - (c - aex);\n    alo = aex - ahi;\n    c = splitter * bey;\n    bhi = c - (c - bey);\n    blo = bey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bex * aey;\n    c = splitter * bex;\n    ahi = c - (c - bex);\n    alo = bex - ahi;\n    c = splitter * aey;\n    bhi = c - (c - aey);\n    blo = aey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    ab3 = _j + _i;\n    bvirt = ab3 - _j;\n    ab[2] = _j - (ab3 - bvirt) + (_i - bvirt);\n    ab[3] = ab3;\n    s1 = bex * cey;\n    c = splitter * bex;\n    ahi = c - (c - bex);\n    alo = bex - ahi;\n    c = splitter * cey;\n    bhi = c - (c - cey);\n    blo = cey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cex * bey;\n    c = splitter * cex;\n    ahi = c - (c - cex);\n    alo = cex - ahi;\n    c = splitter * bey;\n    bhi = c - (c - bey);\n    blo = bey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    bc3 = _j + _i;\n    bvirt = bc3 - _j;\n    bc[2] = _j - (bc3 - bvirt) + (_i - bvirt);\n    bc[3] = bc3;\n    s1 = cex * dey;\n    c = splitter * cex;\n    ahi = c - (c - cex);\n    alo = cex - ahi;\n    c = splitter * dey;\n    bhi = c - (c - dey);\n    blo = dey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = dex * cey;\n    c = splitter * dex;\n    ahi = c - (c - dex);\n    alo = dex - ahi;\n    c = splitter * cey;\n    bhi = c - (c - cey);\n    blo = cey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    cd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    cd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    cd3 = _j + _i;\n    bvirt = cd3 - _j;\n    cd[2] = _j - (cd3 - bvirt) + (_i - bvirt);\n    cd[3] = cd3;\n    s1 = dex * aey;\n    c = splitter * dex;\n    ahi = c - (c - dex);\n    alo = dex - ahi;\n    c = splitter * aey;\n    bhi = c - (c - aey);\n    blo = aey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = aex * dey;\n    c = splitter * aex;\n    ahi = c - (c - aex);\n    alo = aex - ahi;\n    c = splitter * dey;\n    bhi = c - (c - dey);\n    blo = dey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    da[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    da[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    da3 = _j + _i;\n    bvirt = da3 - _j;\n    da[2] = _j - (da3 - bvirt) + (_i - bvirt);\n    da[3] = da3;\n    s1 = aex * cey;\n    c = splitter * aex;\n    ahi = c - (c - aex);\n    alo = aex - ahi;\n    c = splitter * cey;\n    bhi = c - (c - cey);\n    blo = cey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cex * aey;\n    c = splitter * cex;\n    ahi = c - (c - cex);\n    alo = cex - ahi;\n    c = splitter * aey;\n    bhi = c - (c - aey);\n    blo = aey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ac[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ac[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    ac3 = _j + _i;\n    bvirt = ac3 - _j;\n    ac[2] = _j - (ac3 - bvirt) + (_i - bvirt);\n    ac[3] = ac3;\n    s1 = bex * dey;\n    c = splitter * bex;\n    ahi = c - (c - bex);\n    alo = bex - ahi;\n    c = splitter * dey;\n    bhi = c - (c - dey);\n    blo = dey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = dex * bey;\n    c = splitter * dex;\n    ahi = c - (c - dex);\n    alo = dex - ahi;\n    c = splitter * bey;\n    bhi = c - (c - bey);\n    blo = bey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    bd3 = _j + _i;\n    bvirt = bd3 - _j;\n    bd[2] = _j - (bd3 - bvirt) + (_i - bvirt);\n    bd[3] = bd3;\n\n    const finlen = sum(\n        sum(\n            negate(liftadapt(bc, cd, bd, dez, bez, -cez, aex, aey, aez, adet), adet), adet,\n            liftadapt(cd, da, ac, aez, cez, dez, bex, bey, bez, bdet), bdet, abdet), abdet,\n        sum(\n            negate(liftadapt(da, ab, bd, bez, dez, aez, cex, cey, cez, cdet), cdet), cdet,\n            liftadapt(ab, bc, ac, cez, aez, -bez, dex, dey, dez, ddet), ddet, cddet), cddet, fin);\n\n    let det = estimate(finlen, fin);\n    let errbound = isperrboundB * permanent;\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    bvirt = ax - aex;\n    aextail = ax - (aex + bvirt) + (bvirt - ex);\n    bvirt = ay - aey;\n    aeytail = ay - (aey + bvirt) + (bvirt - ey);\n    bvirt = az - aez;\n    aeztail = az - (aez + bvirt) + (bvirt - ez);\n    bvirt = bx - bex;\n    bextail = bx - (bex + bvirt) + (bvirt - ex);\n    bvirt = by - bey;\n    beytail = by - (bey + bvirt) + (bvirt - ey);\n    bvirt = bz - bez;\n    beztail = bz - (bez + bvirt) + (bvirt - ez);\n    bvirt = cx - cex;\n    cextail = cx - (cex + bvirt) + (bvirt - ex);\n    bvirt = cy - cey;\n    ceytail = cy - (cey + bvirt) + (bvirt - ey);\n    bvirt = cz - cez;\n    ceztail = cz - (cez + bvirt) + (bvirt - ez);\n    bvirt = dx - dex;\n    dextail = dx - (dex + bvirt) + (bvirt - ex);\n    bvirt = dy - dey;\n    deytail = dy - (dey + bvirt) + (bvirt - ey);\n    bvirt = dz - dez;\n    deztail = dz - (dez + bvirt) + (bvirt - ez);\n    if (aextail === 0 && aeytail === 0 && aeztail === 0 &&\n        bextail === 0 && beytail === 0 && beztail === 0 &&\n        cextail === 0 && ceytail === 0 && ceztail === 0 &&\n        dextail === 0 && deytail === 0 && deztail === 0) {\n        return det;\n    }\n\n    errbound = isperrboundC * permanent + resulterrbound * Math.abs(det);\n\n    const abeps = (aex * beytail + bey * aextail) - (aey * bextail + bex * aeytail);\n    const bceps = (bex * ceytail + cey * bextail) - (bey * cextail + cex * beytail);\n    const cdeps = (cex * deytail + dey * cextail) - (cey * dextail + dex * ceytail);\n    const daeps = (dex * aeytail + aey * dextail) - (dey * aextail + aex * deytail);\n    const aceps = (aex * ceytail + cey * aextail) - (aey * cextail + cex * aeytail);\n    const bdeps = (bex * deytail + dey * bextail) - (bey * dextail + dex * beytail);\n    det +=\n        (((bex * bex + bey * bey + bez * bez) * ((cez * daeps + dez * aceps + aez * cdeps) +\n        (ceztail * da3 + deztail * ac3 + aeztail * cd3)) + (dex * dex + dey * dey + dez * dez) *\n        ((aez * bceps - bez * aceps + cez * abeps) + (aeztail * bc3 - beztail * ac3 + ceztail * ab3))) -\n        ((aex * aex + aey * aey + aez * aez) * ((bez * cdeps - cez * bdeps + dez * bceps) +\n        (beztail * cd3 - ceztail * bd3 + deztail * bc3)) + (cex * cex + cey * cey + cez * cez) *\n        ((dez * abeps + aez * bdeps + bez * daeps) + (deztail * ab3 + aeztail * bd3 + beztail * da3)))) +\n        2 * (((bex * bextail + bey * beytail + bez * beztail) * (cez * da3 + dez * ac3 + aez * cd3) +\n        (dex * dextail + dey * deytail + dez * deztail) * (aez * bc3 - bez * ac3 + cez * ab3)) -\n        ((aex * aextail + aey * aeytail + aez * aeztail) * (bez * cd3 - cez * bd3 + dez * bc3) +\n        (cex * cextail + cey * ceytail + cez * ceztail) * (dez * ab3 + aez * bd3 + bez * da3)));\n\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    return insphereexact(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez);\n}\n\nexport function insphere(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez) {\n    const aex = ax - ex;\n    const bex = bx - ex;\n    const cex = cx - ex;\n    const dex = dx - ex;\n    const aey = ay - ey;\n    const bey = by - ey;\n    const cey = cy - ey;\n    const dey = dy - ey;\n    const aez = az - ez;\n    const bez = bz - ez;\n    const cez = cz - ez;\n    const dez = dz - ez;\n\n    const aexbey = aex * bey;\n    const bexaey = bex * aey;\n    const ab = aexbey - bexaey;\n    const bexcey = bex * cey;\n    const cexbey = cex * bey;\n    const bc = bexcey - cexbey;\n    const cexdey = cex * dey;\n    const dexcey = dex * cey;\n    const cd = cexdey - dexcey;\n    const dexaey = dex * aey;\n    const aexdey = aex * dey;\n    const da = dexaey - aexdey;\n    const aexcey = aex * cey;\n    const cexaey = cex * aey;\n    const ac = aexcey - cexaey;\n    const bexdey = bex * dey;\n    const dexbey = dex * bey;\n    const bd = bexdey - dexbey;\n\n    const alift = aex * aex + aey * aey + aez * aez;\n    const blift = bex * bex + bey * bey + bez * bez;\n    const clift = cex * cex + cey * cey + cez * cez;\n    const dlift = dex * dex + dey * dey + dez * dez;\n\n    const det =\n        (clift * (dez * ab + aez * bd + bez * da) - dlift * (aez * bc - bez * ac + cez * ab)) +\n        (alift * (bez * cd - cez * bd + dez * bc) - blift * (cez * da + dez * ac + aez * cd));\n\n    const aezplus = Math.abs(aez);\n    const bezplus = Math.abs(bez);\n    const cezplus = Math.abs(cez);\n    const dezplus = Math.abs(dez);\n    const aexbeyplus = Math.abs(aexbey) + Math.abs(bexaey);\n    const bexceyplus = Math.abs(bexcey) + Math.abs(cexbey);\n    const cexdeyplus = Math.abs(cexdey) + Math.abs(dexcey);\n    const dexaeyplus = Math.abs(dexaey) + Math.abs(aexdey);\n    const aexceyplus = Math.abs(aexcey) + Math.abs(cexaey);\n    const bexdeyplus = Math.abs(bexdey) + Math.abs(dexbey);\n    const permanent =\n        (cexdeyplus * bezplus + bexdeyplus * cezplus + bexceyplus * dezplus) * alift +\n        (dexaeyplus * cezplus + aexceyplus * dezplus + cexdeyplus * aezplus) * blift +\n        (aexbeyplus * dezplus + bexdeyplus * aezplus + dexaeyplus * bezplus) * clift +\n        (bexceyplus * aezplus + aexceyplus * bezplus + aexbeyplus * cezplus) * dlift;\n\n    const errbound = isperrboundA * permanent;\n    if (det > errbound || -det > errbound) {\n        return det;\n    }\n    return -insphereadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez, permanent);\n}\n\nexport function inspherefast(pax, pay, paz, pbx, pby, pbz, pcx, pcy, pcz, pdx, pdy, pdz, pex, pey, pez) {\n    const aex = pax - pex;\n    const bex = pbx - pex;\n    const cex = pcx - pex;\n    const dex = pdx - pex;\n    const aey = pay - pey;\n    const bey = pby - pey;\n    const cey = pcy - pey;\n    const dey = pdy - pey;\n    const aez = paz - pez;\n    const bez = pbz - pez;\n    const cez = pcz - pez;\n    const dez = pdz - pez;\n\n    const ab = aex * bey - bex * aey;\n    const bc = bex * cey - cex * bey;\n    const cd = cex * dey - dex * cey;\n    const da = dex * aey - aex * dey;\n    const ac = aex * cey - cex * aey;\n    const bd = bex * dey - dex * bey;\n\n    const abc = aez * bc - bez * ac + cez * ab;\n    const bcd = bez * cd - cez * bd + dez * bc;\n    const cda = cez * da + dez * ac + aez * cd;\n    const dab = dez * ab + aez * bd + bez * da;\n\n    const alift = aex * aex + aey * aey + aez * aez;\n    const blift = bex * bex + bey * bey + bez * bez;\n    const clift = cex * cex + cey * cey + cez * cez;\n    const dlift = dex * dex + dey * dey + dez * dez;\n\n    return (clift * dab - dlift * abc) + (alift * bcd - blift * cda);\n}\n", "import SplayTree from 'splaytree';\nimport { orient2d } from 'robust-predicates';\n\n/**\n * A bounding box has the format:\n *\n *  { ll: { x: xmin, y: ymin }, ur: { x: xmax, y: ymax } }\n *\n */\n\nconst isInBbox = (bbox, point) => {\n  return bbox.ll.x <= point.x && point.x <= bbox.ur.x && bbox.ll.y <= point.y && point.y <= bbox.ur.y;\n};\n\n/* Returns either null, or a bbox (aka an ordered pair of points)\n * If there is only one point of overlap, a bbox with identical points\n * will be returned */\nconst getBboxOverlap = (b1, b2) => {\n  // check if the bboxes overlap at all\n  if (b2.ur.x < b1.ll.x || b1.ur.x < b2.ll.x || b2.ur.y < b1.ll.y || b1.ur.y < b2.ll.y) return null;\n\n  // find the middle two X values\n  const lowerX = b1.ll.x < b2.ll.x ? b2.ll.x : b1.ll.x;\n  const upperX = b1.ur.x < b2.ur.x ? b1.ur.x : b2.ur.x;\n\n  // find the middle two Y values\n  const lowerY = b1.ll.y < b2.ll.y ? b2.ll.y : b1.ll.y;\n  const upperY = b1.ur.y < b2.ur.y ? b1.ur.y : b2.ur.y;\n\n  // put those middle values together to get the overlap\n  return {\n    ll: {\n      x: lowerX,\n      y: lowerY\n    },\n    ur: {\n      x: upperX,\n      y: upperY\n    }\n  };\n};\n\n/* Javascript doesn't do integer math. Everything is\n * floating point with percision Number.EPSILON.\n *\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/EPSILON\n */\n\nlet epsilon = Number.EPSILON;\n\n// IE Polyfill\nif (epsilon === undefined) epsilon = Math.pow(2, -52);\nconst EPSILON_SQ = epsilon * epsilon;\n\n/* FLP comparator */\nconst cmp = (a, b) => {\n  // check if they're both 0\n  if (-epsilon < a && a < epsilon) {\n    if (-epsilon < b && b < epsilon) {\n      return 0;\n    }\n  }\n\n  // check if they're flp equal\n  const ab = a - b;\n  if (ab * ab < EPSILON_SQ * a * b) {\n    return 0;\n  }\n\n  // normal comparison\n  return a < b ? -1 : 1;\n};\n\n/**\n * This class rounds incoming values sufficiently so that\n * floating points problems are, for the most part, avoided.\n *\n * Incoming points are have their x & y values tested against\n * all previously seen x & y values. If either is 'too close'\n * to a previously seen value, it's value is 'snapped' to the\n * previously seen value.\n *\n * All points should be rounded by this class before being\n * stored in any data structures in the rest of this algorithm.\n */\n\nclass PtRounder {\n  constructor() {\n    this.reset();\n  }\n  reset() {\n    this.xRounder = new CoordRounder();\n    this.yRounder = new CoordRounder();\n  }\n  round(x, y) {\n    return {\n      x: this.xRounder.round(x),\n      y: this.yRounder.round(y)\n    };\n  }\n}\nclass CoordRounder {\n  constructor() {\n    this.tree = new SplayTree();\n    // preseed with 0 so we don't end up with values < Number.EPSILON\n    this.round(0);\n  }\n\n  // Note: this can rounds input values backwards or forwards.\n  //       You might ask, why not restrict this to just rounding\n  //       forwards? Wouldn't that allow left endpoints to always\n  //       remain left endpoints during splitting (never change to\n  //       right). No - it wouldn't, because we snap intersections\n  //       to endpoints (to establish independence from the segment\n  //       angle for t-intersections).\n  round(coord) {\n    const node = this.tree.add(coord);\n    const prevNode = this.tree.prev(node);\n    if (prevNode !== null && cmp(node.key, prevNode.key) === 0) {\n      this.tree.remove(coord);\n      return prevNode.key;\n    }\n    const nextNode = this.tree.next(node);\n    if (nextNode !== null && cmp(node.key, nextNode.key) === 0) {\n      this.tree.remove(coord);\n      return nextNode.key;\n    }\n    return coord;\n  }\n}\n\n// singleton available by import\nconst rounder = new PtRounder();\n\n/* Cross Product of two vectors with first point at origin */\nconst crossProduct = (a, b) => a.x * b.y - a.y * b.x;\n\n/* Dot Product of two vectors with first point at origin */\nconst dotProduct = (a, b) => a.x * b.x + a.y * b.y;\n\n/* Comparator for two vectors with same starting point */\nconst compareVectorAngles = (basePt, endPt1, endPt2) => {\n  const res = orient2d(basePt.x, basePt.y, endPt1.x, endPt1.y, endPt2.x, endPt2.y);\n  if (res > 0) return -1;\n  if (res < 0) return 1;\n  return 0;\n};\nconst length = v => Math.sqrt(dotProduct(v, v));\n\n/* Get the sine of the angle from pShared -> pAngle to pShaed -> pBase */\nconst sineOfAngle = (pShared, pBase, pAngle) => {\n  const vBase = {\n    x: pBase.x - pShared.x,\n    y: pBase.y - pShared.y\n  };\n  const vAngle = {\n    x: pAngle.x - pShared.x,\n    y: pAngle.y - pShared.y\n  };\n  return crossProduct(vAngle, vBase) / length(vAngle) / length(vBase);\n};\n\n/* Get the cosine of the angle from pShared -> pAngle to pShaed -> pBase */\nconst cosineOfAngle = (pShared, pBase, pAngle) => {\n  const vBase = {\n    x: pBase.x - pShared.x,\n    y: pBase.y - pShared.y\n  };\n  const vAngle = {\n    x: pAngle.x - pShared.x,\n    y: pAngle.y - pShared.y\n  };\n  return dotProduct(vAngle, vBase) / length(vAngle) / length(vBase);\n};\n\n/* Get the x coordinate where the given line (defined by a point and vector)\n * crosses the horizontal line with the given y coordiante.\n * In the case of parrallel lines (including overlapping ones) returns null. */\nconst horizontalIntersection = (pt, v, y) => {\n  if (v.y === 0) return null;\n  return {\n    x: pt.x + v.x / v.y * (y - pt.y),\n    y: y\n  };\n};\n\n/* Get the y coordinate where the given line (defined by a point and vector)\n * crosses the vertical line with the given x coordiante.\n * In the case of parrallel lines (including overlapping ones) returns null. */\nconst verticalIntersection = (pt, v, x) => {\n  if (v.x === 0) return null;\n  return {\n    x: x,\n    y: pt.y + v.y / v.x * (x - pt.x)\n  };\n};\n\n/* Get the intersection of two lines, each defined by a base point and a vector.\n * In the case of parrallel lines (including overlapping ones) returns null. */\nconst intersection$1 = (pt1, v1, pt2, v2) => {\n  // take some shortcuts for vertical and horizontal lines\n  // this also ensures we don't calculate an intersection and then discover\n  // it's actually outside the bounding box of the line\n  if (v1.x === 0) return verticalIntersection(pt2, v2, pt1.x);\n  if (v2.x === 0) return verticalIntersection(pt1, v1, pt2.x);\n  if (v1.y === 0) return horizontalIntersection(pt2, v2, pt1.y);\n  if (v2.y === 0) return horizontalIntersection(pt1, v1, pt2.y);\n\n  // General case for non-overlapping segments.\n  // This algorithm is based on Schneider and Eberly.\n  // http://www.cimec.org.ar/~ncalvo/Schneider_Eberly.pdf - pg 244\n\n  const kross = crossProduct(v1, v2);\n  if (kross == 0) return null;\n  const ve = {\n    x: pt2.x - pt1.x,\n    y: pt2.y - pt1.y\n  };\n  const d1 = crossProduct(ve, v1) / kross;\n  const d2 = crossProduct(ve, v2) / kross;\n\n  // take the average of the two calculations to minimize rounding error\n  const x1 = pt1.x + d2 * v1.x,\n    x2 = pt2.x + d1 * v2.x;\n  const y1 = pt1.y + d2 * v1.y,\n    y2 = pt2.y + d1 * v2.y;\n  const x = (x1 + x2) / 2;\n  const y = (y1 + y2) / 2;\n  return {\n    x: x,\n    y: y\n  };\n};\n\nclass SweepEvent {\n  // for ordering sweep events in the sweep event queue\n  static compare(a, b) {\n    // favor event with a point that the sweep line hits first\n    const ptCmp = SweepEvent.comparePoints(a.point, b.point);\n    if (ptCmp !== 0) return ptCmp;\n\n    // the points are the same, so link them if needed\n    if (a.point !== b.point) a.link(b);\n\n    // favor right events over left\n    if (a.isLeft !== b.isLeft) return a.isLeft ? 1 : -1;\n\n    // we have two matching left or right endpoints\n    // ordering of this case is the same as for their segments\n    return Segment.compare(a.segment, b.segment);\n  }\n\n  // for ordering points in sweep line order\n  static comparePoints(aPt, bPt) {\n    if (aPt.x < bPt.x) return -1;\n    if (aPt.x > bPt.x) return 1;\n    if (aPt.y < bPt.y) return -1;\n    if (aPt.y > bPt.y) return 1;\n    return 0;\n  }\n\n  // Warning: 'point' input will be modified and re-used (for performance)\n  constructor(point, isLeft) {\n    if (point.events === undefined) point.events = [this];else point.events.push(this);\n    this.point = point;\n    this.isLeft = isLeft;\n    // this.segment, this.otherSE set by factory\n  }\n  link(other) {\n    if (other.point === this.point) {\n      throw new Error(\"Tried to link already linked events\");\n    }\n    const otherEvents = other.point.events;\n    for (let i = 0, iMax = otherEvents.length; i < iMax; i++) {\n      const evt = otherEvents[i];\n      this.point.events.push(evt);\n      evt.point = this.point;\n    }\n    this.checkForConsuming();\n  }\n\n  /* Do a pass over our linked events and check to see if any pair\n   * of segments match, and should be consumed. */\n  checkForConsuming() {\n    // FIXME: The loops in this method run O(n^2) => no good.\n    //        Maintain little ordered sweep event trees?\n    //        Can we maintaining an ordering that avoids the need\n    //        for the re-sorting with getLeftmostComparator in geom-out?\n\n    // Compare each pair of events to see if other events also match\n    const numEvents = this.point.events.length;\n    for (let i = 0; i < numEvents; i++) {\n      const evt1 = this.point.events[i];\n      if (evt1.segment.consumedBy !== undefined) continue;\n      for (let j = i + 1; j < numEvents; j++) {\n        const evt2 = this.point.events[j];\n        if (evt2.consumedBy !== undefined) continue;\n        if (evt1.otherSE.point.events !== evt2.otherSE.point.events) continue;\n        evt1.segment.consume(evt2.segment);\n      }\n    }\n  }\n  getAvailableLinkedEvents() {\n    // point.events is always of length 2 or greater\n    const events = [];\n    for (let i = 0, iMax = this.point.events.length; i < iMax; i++) {\n      const evt = this.point.events[i];\n      if (evt !== this && !evt.segment.ringOut && evt.segment.isInResult()) {\n        events.push(evt);\n      }\n    }\n    return events;\n  }\n\n  /**\n   * Returns a comparator function for sorting linked events that will\n   * favor the event that will give us the smallest left-side angle.\n   * All ring construction starts as low as possible heading to the right,\n   * so by always turning left as sharp as possible we'll get polygons\n   * without uncessary loops & holes.\n   *\n   * The comparator function has a compute cache such that it avoids\n   * re-computing already-computed values.\n   */\n  getLeftmostComparator(baseEvent) {\n    const cache = new Map();\n    const fillCache = linkedEvent => {\n      const nextEvent = linkedEvent.otherSE;\n      cache.set(linkedEvent, {\n        sine: sineOfAngle(this.point, baseEvent.point, nextEvent.point),\n        cosine: cosineOfAngle(this.point, baseEvent.point, nextEvent.point)\n      });\n    };\n    return (a, b) => {\n      if (!cache.has(a)) fillCache(a);\n      if (!cache.has(b)) fillCache(b);\n      const {\n        sine: asine,\n        cosine: acosine\n      } = cache.get(a);\n      const {\n        sine: bsine,\n        cosine: bcosine\n      } = cache.get(b);\n\n      // both on or above x-axis\n      if (asine >= 0 && bsine >= 0) {\n        if (acosine < bcosine) return 1;\n        if (acosine > bcosine) return -1;\n        return 0;\n      }\n\n      // both below x-axis\n      if (asine < 0 && bsine < 0) {\n        if (acosine < bcosine) return -1;\n        if (acosine > bcosine) return 1;\n        return 0;\n      }\n\n      // one above x-axis, one below\n      if (bsine < asine) return -1;\n      if (bsine > asine) return 1;\n      return 0;\n    };\n  }\n}\n\n// Give segments unique ID's to get consistent sorting of\n// segments and sweep events when all else is identical\nlet segmentId = 0;\nclass Segment {\n  /* This compare() function is for ordering segments in the sweep\n   * line tree, and does so according to the following criteria:\n   *\n   * Consider the vertical line that lies an infinestimal step to the\n   * right of the right-more of the two left endpoints of the input\n   * segments. Imagine slowly moving a point up from negative infinity\n   * in the increasing y direction. Which of the two segments will that\n   * point intersect first? That segment comes 'before' the other one.\n   *\n   * If neither segment would be intersected by such a line, (if one\n   * or more of the segments are vertical) then the line to be considered\n   * is directly on the right-more of the two left inputs.\n   */\n  static compare(a, b) {\n    const alx = a.leftSE.point.x;\n    const blx = b.leftSE.point.x;\n    const arx = a.rightSE.point.x;\n    const brx = b.rightSE.point.x;\n\n    // check if they're even in the same vertical plane\n    if (brx < alx) return 1;\n    if (arx < blx) return -1;\n    const aly = a.leftSE.point.y;\n    const bly = b.leftSE.point.y;\n    const ary = a.rightSE.point.y;\n    const bry = b.rightSE.point.y;\n\n    // is left endpoint of segment B the right-more?\n    if (alx < blx) {\n      // are the two segments in the same horizontal plane?\n      if (bly < aly && bly < ary) return 1;\n      if (bly > aly && bly > ary) return -1;\n\n      // is the B left endpoint colinear to segment A?\n      const aCmpBLeft = a.comparePoint(b.leftSE.point);\n      if (aCmpBLeft < 0) return 1;\n      if (aCmpBLeft > 0) return -1;\n\n      // is the A right endpoint colinear to segment B ?\n      const bCmpARight = b.comparePoint(a.rightSE.point);\n      if (bCmpARight !== 0) return bCmpARight;\n\n      // colinear segments, consider the one with left-more\n      // left endpoint to be first (arbitrary?)\n      return -1;\n    }\n\n    // is left endpoint of segment A the right-more?\n    if (alx > blx) {\n      if (aly < bly && aly < bry) return -1;\n      if (aly > bly && aly > bry) return 1;\n\n      // is the A left endpoint colinear to segment B?\n      const bCmpALeft = b.comparePoint(a.leftSE.point);\n      if (bCmpALeft !== 0) return bCmpALeft;\n\n      // is the B right endpoint colinear to segment A?\n      const aCmpBRight = a.comparePoint(b.rightSE.point);\n      if (aCmpBRight < 0) return 1;\n      if (aCmpBRight > 0) return -1;\n\n      // colinear segments, consider the one with left-more\n      // left endpoint to be first (arbitrary?)\n      return 1;\n    }\n\n    // if we get here, the two left endpoints are in the same\n    // vertical plane, ie alx === blx\n\n    // consider the lower left-endpoint to come first\n    if (aly < bly) return -1;\n    if (aly > bly) return 1;\n\n    // left endpoints are identical\n    // check for colinearity by using the left-more right endpoint\n\n    // is the A right endpoint more left-more?\n    if (arx < brx) {\n      const bCmpARight = b.comparePoint(a.rightSE.point);\n      if (bCmpARight !== 0) return bCmpARight;\n    }\n\n    // is the B right endpoint more left-more?\n    if (arx > brx) {\n      const aCmpBRight = a.comparePoint(b.rightSE.point);\n      if (aCmpBRight < 0) return 1;\n      if (aCmpBRight > 0) return -1;\n    }\n    if (arx !== brx) {\n      // are these two [almost] vertical segments with opposite orientation?\n      // if so, the one with the lower right endpoint comes first\n      const ay = ary - aly;\n      const ax = arx - alx;\n      const by = bry - bly;\n      const bx = brx - blx;\n      if (ay > ax && by < bx) return 1;\n      if (ay < ax && by > bx) return -1;\n    }\n\n    // we have colinear segments with matching orientation\n    // consider the one with more left-more right endpoint to be first\n    if (arx > brx) return 1;\n    if (arx < brx) return -1;\n\n    // if we get here, two two right endpoints are in the same\n    // vertical plane, ie arx === brx\n\n    // consider the lower right-endpoint to come first\n    if (ary < bry) return -1;\n    if (ary > bry) return 1;\n\n    // right endpoints identical as well, so the segments are idential\n    // fall back on creation order as consistent tie-breaker\n    if (a.id < b.id) return -1;\n    if (a.id > b.id) return 1;\n\n    // identical segment, ie a === b\n    return 0;\n  }\n\n  /* Warning: a reference to ringWindings input will be stored,\n   *  and possibly will be later modified */\n  constructor(leftSE, rightSE, rings, windings) {\n    this.id = ++segmentId;\n    this.leftSE = leftSE;\n    leftSE.segment = this;\n    leftSE.otherSE = rightSE;\n    this.rightSE = rightSE;\n    rightSE.segment = this;\n    rightSE.otherSE = leftSE;\n    this.rings = rings;\n    this.windings = windings;\n    // left unset for performance, set later in algorithm\n    // this.ringOut, this.consumedBy, this.prev\n  }\n  static fromRing(pt1, pt2, ring) {\n    let leftPt, rightPt, winding;\n\n    // ordering the two points according to sweep line ordering\n    const cmpPts = SweepEvent.comparePoints(pt1, pt2);\n    if (cmpPts < 0) {\n      leftPt = pt1;\n      rightPt = pt2;\n      winding = 1;\n    } else if (cmpPts > 0) {\n      leftPt = pt2;\n      rightPt = pt1;\n      winding = -1;\n    } else throw new Error(`Tried to create degenerate segment at [${pt1.x}, ${pt1.y}]`);\n    const leftSE = new SweepEvent(leftPt, true);\n    const rightSE = new SweepEvent(rightPt, false);\n    return new Segment(leftSE, rightSE, [ring], [winding]);\n  }\n\n  /* When a segment is split, the rightSE is replaced with a new sweep event */\n  replaceRightSE(newRightSE) {\n    this.rightSE = newRightSE;\n    this.rightSE.segment = this;\n    this.rightSE.otherSE = this.leftSE;\n    this.leftSE.otherSE = this.rightSE;\n  }\n  bbox() {\n    const y1 = this.leftSE.point.y;\n    const y2 = this.rightSE.point.y;\n    return {\n      ll: {\n        x: this.leftSE.point.x,\n        y: y1 < y2 ? y1 : y2\n      },\n      ur: {\n        x: this.rightSE.point.x,\n        y: y1 > y2 ? y1 : y2\n      }\n    };\n  }\n\n  /* A vector from the left point to the right */\n  vector() {\n    return {\n      x: this.rightSE.point.x - this.leftSE.point.x,\n      y: this.rightSE.point.y - this.leftSE.point.y\n    };\n  }\n  isAnEndpoint(pt) {\n    return pt.x === this.leftSE.point.x && pt.y === this.leftSE.point.y || pt.x === this.rightSE.point.x && pt.y === this.rightSE.point.y;\n  }\n\n  /* Compare this segment with a point.\n   *\n   * A point P is considered to be colinear to a segment if there\n   * exists a distance D such that if we travel along the segment\n   * from one * endpoint towards the other a distance D, we find\n   * ourselves at point P.\n   *\n   * Return value indicates:\n   *\n   *   1: point lies above the segment (to the left of vertical)\n   *   0: point is colinear to segment\n   *  -1: point lies below the segment (to the right of vertical)\n   */\n  comparePoint(point) {\n    if (this.isAnEndpoint(point)) return 0;\n    const lPt = this.leftSE.point;\n    const rPt = this.rightSE.point;\n    const v = this.vector();\n\n    // Exactly vertical segments.\n    if (lPt.x === rPt.x) {\n      if (point.x === lPt.x) return 0;\n      return point.x < lPt.x ? 1 : -1;\n    }\n\n    // Nearly vertical segments with an intersection.\n    // Check to see where a point on the line with matching Y coordinate is.\n    const yDist = (point.y - lPt.y) / v.y;\n    const xFromYDist = lPt.x + yDist * v.x;\n    if (point.x === xFromYDist) return 0;\n\n    // General case.\n    // Check to see where a point on the line with matching X coordinate is.\n    const xDist = (point.x - lPt.x) / v.x;\n    const yFromXDist = lPt.y + xDist * v.y;\n    if (point.y === yFromXDist) return 0;\n    return point.y < yFromXDist ? -1 : 1;\n  }\n\n  /**\n   * Given another segment, returns the first non-trivial intersection\n   * between the two segments (in terms of sweep line ordering), if it exists.\n   *\n   * A 'non-trivial' intersection is one that will cause one or both of the\n   * segments to be split(). As such, 'trivial' vs. 'non-trivial' intersection:\n   *\n   *   * endpoint of segA with endpoint of segB --> trivial\n   *   * endpoint of segA with point along segB --> non-trivial\n   *   * endpoint of segB with point along segA --> non-trivial\n   *   * point along segA with point along segB --> non-trivial\n   *\n   * If no non-trivial intersection exists, return null\n   * Else, return null.\n   */\n  getIntersection(other) {\n    // If bboxes don't overlap, there can't be any intersections\n    const tBbox = this.bbox();\n    const oBbox = other.bbox();\n    const bboxOverlap = getBboxOverlap(tBbox, oBbox);\n    if (bboxOverlap === null) return null;\n\n    // We first check to see if the endpoints can be considered intersections.\n    // This will 'snap' intersections to endpoints if possible, and will\n    // handle cases of colinearity.\n\n    const tlp = this.leftSE.point;\n    const trp = this.rightSE.point;\n    const olp = other.leftSE.point;\n    const orp = other.rightSE.point;\n\n    // does each endpoint touch the other segment?\n    // note that we restrict the 'touching' definition to only allow segments\n    // to touch endpoints that lie forward from where we are in the sweep line pass\n    const touchesOtherLSE = isInBbox(tBbox, olp) && this.comparePoint(olp) === 0;\n    const touchesThisLSE = isInBbox(oBbox, tlp) && other.comparePoint(tlp) === 0;\n    const touchesOtherRSE = isInBbox(tBbox, orp) && this.comparePoint(orp) === 0;\n    const touchesThisRSE = isInBbox(oBbox, trp) && other.comparePoint(trp) === 0;\n\n    // do left endpoints match?\n    if (touchesThisLSE && touchesOtherLSE) {\n      // these two cases are for colinear segments with matching left\n      // endpoints, and one segment being longer than the other\n      if (touchesThisRSE && !touchesOtherRSE) return trp;\n      if (!touchesThisRSE && touchesOtherRSE) return orp;\n      // either the two segments match exactly (two trival intersections)\n      // or just on their left endpoint (one trivial intersection\n      return null;\n    }\n\n    // does this left endpoint matches (other doesn't)\n    if (touchesThisLSE) {\n      // check for segments that just intersect on opposing endpoints\n      if (touchesOtherRSE) {\n        if (tlp.x === orp.x && tlp.y === orp.y) return null;\n      }\n      // t-intersection on left endpoint\n      return tlp;\n    }\n\n    // does other left endpoint matches (this doesn't)\n    if (touchesOtherLSE) {\n      // check for segments that just intersect on opposing endpoints\n      if (touchesThisRSE) {\n        if (trp.x === olp.x && trp.y === olp.y) return null;\n      }\n      // t-intersection on left endpoint\n      return olp;\n    }\n\n    // trivial intersection on right endpoints\n    if (touchesThisRSE && touchesOtherRSE) return null;\n\n    // t-intersections on just one right endpoint\n    if (touchesThisRSE) return trp;\n    if (touchesOtherRSE) return orp;\n\n    // None of our endpoints intersect. Look for a general intersection between\n    // infinite lines laid over the segments\n    const pt = intersection$1(tlp, this.vector(), olp, other.vector());\n\n    // are the segments parrallel? Note that if they were colinear with overlap,\n    // they would have an endpoint intersection and that case was already handled above\n    if (pt === null) return null;\n\n    // is the intersection found between the lines not on the segments?\n    if (!isInBbox(bboxOverlap, pt)) return null;\n\n    // round the the computed point if needed\n    return rounder.round(pt.x, pt.y);\n  }\n\n  /**\n   * Split the given segment into multiple segments on the given points.\n   *  * Each existing segment will retain its leftSE and a new rightSE will be\n   *    generated for it.\n   *  * A new segment will be generated which will adopt the original segment's\n   *    rightSE, and a new leftSE will be generated for it.\n   *  * If there are more than two points given to split on, new segments\n   *    in the middle will be generated with new leftSE and rightSE's.\n   *  * An array of the newly generated SweepEvents will be returned.\n   *\n   * Warning: input array of points is modified\n   */\n  split(point) {\n    const newEvents = [];\n    const alreadyLinked = point.events !== undefined;\n    const newLeftSE = new SweepEvent(point, true);\n    const newRightSE = new SweepEvent(point, false);\n    const oldRightSE = this.rightSE;\n    this.replaceRightSE(newRightSE);\n    newEvents.push(newRightSE);\n    newEvents.push(newLeftSE);\n    const newSeg = new Segment(newLeftSE, oldRightSE, this.rings.slice(), this.windings.slice());\n\n    // when splitting a nearly vertical downward-facing segment,\n    // sometimes one of the resulting new segments is vertical, in which\n    // case its left and right events may need to be swapped\n    if (SweepEvent.comparePoints(newSeg.leftSE.point, newSeg.rightSE.point) > 0) {\n      newSeg.swapEvents();\n    }\n    if (SweepEvent.comparePoints(this.leftSE.point, this.rightSE.point) > 0) {\n      this.swapEvents();\n    }\n\n    // in the point we just used to create new sweep events with was already\n    // linked to other events, we need to check if either of the affected\n    // segments should be consumed\n    if (alreadyLinked) {\n      newLeftSE.checkForConsuming();\n      newRightSE.checkForConsuming();\n    }\n    return newEvents;\n  }\n\n  /* Swap which event is left and right */\n  swapEvents() {\n    const tmpEvt = this.rightSE;\n    this.rightSE = this.leftSE;\n    this.leftSE = tmpEvt;\n    this.leftSE.isLeft = true;\n    this.rightSE.isLeft = false;\n    for (let i = 0, iMax = this.windings.length; i < iMax; i++) {\n      this.windings[i] *= -1;\n    }\n  }\n\n  /* Consume another segment. We take their rings under our wing\n   * and mark them as consumed. Use for perfectly overlapping segments */\n  consume(other) {\n    let consumer = this;\n    let consumee = other;\n    while (consumer.consumedBy) consumer = consumer.consumedBy;\n    while (consumee.consumedBy) consumee = consumee.consumedBy;\n    const cmp = Segment.compare(consumer, consumee);\n    if (cmp === 0) return; // already consumed\n    // the winner of the consumption is the earlier segment\n    // according to sweep line ordering\n    if (cmp > 0) {\n      const tmp = consumer;\n      consumer = consumee;\n      consumee = tmp;\n    }\n\n    // make sure a segment doesn't consume it's prev\n    if (consumer.prev === consumee) {\n      const tmp = consumer;\n      consumer = consumee;\n      consumee = tmp;\n    }\n    for (let i = 0, iMax = consumee.rings.length; i < iMax; i++) {\n      const ring = consumee.rings[i];\n      const winding = consumee.windings[i];\n      const index = consumer.rings.indexOf(ring);\n      if (index === -1) {\n        consumer.rings.push(ring);\n        consumer.windings.push(winding);\n      } else consumer.windings[index] += winding;\n    }\n    consumee.rings = null;\n    consumee.windings = null;\n    consumee.consumedBy = consumer;\n\n    // mark sweep events consumed as to maintain ordering in sweep event queue\n    consumee.leftSE.consumedBy = consumer.leftSE;\n    consumee.rightSE.consumedBy = consumer.rightSE;\n  }\n\n  /* The first segment previous segment chain that is in the result */\n  prevInResult() {\n    if (this._prevInResult !== undefined) return this._prevInResult;\n    if (!this.prev) this._prevInResult = null;else if (this.prev.isInResult()) this._prevInResult = this.prev;else this._prevInResult = this.prev.prevInResult();\n    return this._prevInResult;\n  }\n  beforeState() {\n    if (this._beforeState !== undefined) return this._beforeState;\n    if (!this.prev) this._beforeState = {\n      rings: [],\n      windings: [],\n      multiPolys: []\n    };else {\n      const seg = this.prev.consumedBy || this.prev;\n      this._beforeState = seg.afterState();\n    }\n    return this._beforeState;\n  }\n  afterState() {\n    if (this._afterState !== undefined) return this._afterState;\n    const beforeState = this.beforeState();\n    this._afterState = {\n      rings: beforeState.rings.slice(0),\n      windings: beforeState.windings.slice(0),\n      multiPolys: []\n    };\n    const ringsAfter = this._afterState.rings;\n    const windingsAfter = this._afterState.windings;\n    const mpsAfter = this._afterState.multiPolys;\n\n    // calculate ringsAfter, windingsAfter\n    for (let i = 0, iMax = this.rings.length; i < iMax; i++) {\n      const ring = this.rings[i];\n      const winding = this.windings[i];\n      const index = ringsAfter.indexOf(ring);\n      if (index === -1) {\n        ringsAfter.push(ring);\n        windingsAfter.push(winding);\n      } else windingsAfter[index] += winding;\n    }\n\n    // calcualte polysAfter\n    const polysAfter = [];\n    const polysExclude = [];\n    for (let i = 0, iMax = ringsAfter.length; i < iMax; i++) {\n      if (windingsAfter[i] === 0) continue; // non-zero rule\n      const ring = ringsAfter[i];\n      const poly = ring.poly;\n      if (polysExclude.indexOf(poly) !== -1) continue;\n      if (ring.isExterior) polysAfter.push(poly);else {\n        if (polysExclude.indexOf(poly) === -1) polysExclude.push(poly);\n        const index = polysAfter.indexOf(ring.poly);\n        if (index !== -1) polysAfter.splice(index, 1);\n      }\n    }\n\n    // calculate multiPolysAfter\n    for (let i = 0, iMax = polysAfter.length; i < iMax; i++) {\n      const mp = polysAfter[i].multiPoly;\n      if (mpsAfter.indexOf(mp) === -1) mpsAfter.push(mp);\n    }\n    return this._afterState;\n  }\n\n  /* Is this segment part of the final result? */\n  isInResult() {\n    // if we've been consumed, we're not in the result\n    if (this.consumedBy) return false;\n    if (this._isInResult !== undefined) return this._isInResult;\n    const mpsBefore = this.beforeState().multiPolys;\n    const mpsAfter = this.afterState().multiPolys;\n    switch (operation.type) {\n      case \"union\":\n        {\n          // UNION - included iff:\n          //  * On one side of us there is 0 poly interiors AND\n          //  * On the other side there is 1 or more.\n          const noBefores = mpsBefore.length === 0;\n          const noAfters = mpsAfter.length === 0;\n          this._isInResult = noBefores !== noAfters;\n          break;\n        }\n      case \"intersection\":\n        {\n          // INTERSECTION - included iff:\n          //  * on one side of us all multipolys are rep. with poly interiors AND\n          //  * on the other side of us, not all multipolys are repsented\n          //    with poly interiors\n          let least;\n          let most;\n          if (mpsBefore.length < mpsAfter.length) {\n            least = mpsBefore.length;\n            most = mpsAfter.length;\n          } else {\n            least = mpsAfter.length;\n            most = mpsBefore.length;\n          }\n          this._isInResult = most === operation.numMultiPolys && least < most;\n          break;\n        }\n      case \"xor\":\n        {\n          // XOR - included iff:\n          //  * the difference between the number of multipolys represented\n          //    with poly interiors on our two sides is an odd number\n          const diff = Math.abs(mpsBefore.length - mpsAfter.length);\n          this._isInResult = diff % 2 === 1;\n          break;\n        }\n      case \"difference\":\n        {\n          // DIFFERENCE included iff:\n          //  * on exactly one side, we have just the subject\n          const isJustSubject = mps => mps.length === 1 && mps[0].isSubject;\n          this._isInResult = isJustSubject(mpsBefore) !== isJustSubject(mpsAfter);\n          break;\n        }\n      default:\n        throw new Error(`Unrecognized operation type found ${operation.type}`);\n    }\n    return this._isInResult;\n  }\n}\n\nclass RingIn {\n  constructor(geomRing, poly, isExterior) {\n    if (!Array.isArray(geomRing) || geomRing.length === 0) {\n      throw new Error(\"Input geometry is not a valid Polygon or MultiPolygon\");\n    }\n    this.poly = poly;\n    this.isExterior = isExterior;\n    this.segments = [];\n    if (typeof geomRing[0][0] !== \"number\" || typeof geomRing[0][1] !== \"number\") {\n      throw new Error(\"Input geometry is not a valid Polygon or MultiPolygon\");\n    }\n    const firstPoint = rounder.round(geomRing[0][0], geomRing[0][1]);\n    this.bbox = {\n      ll: {\n        x: firstPoint.x,\n        y: firstPoint.y\n      },\n      ur: {\n        x: firstPoint.x,\n        y: firstPoint.y\n      }\n    };\n    let prevPoint = firstPoint;\n    for (let i = 1, iMax = geomRing.length; i < iMax; i++) {\n      if (typeof geomRing[i][0] !== \"number\" || typeof geomRing[i][1] !== \"number\") {\n        throw new Error(\"Input geometry is not a valid Polygon or MultiPolygon\");\n      }\n      let point = rounder.round(geomRing[i][0], geomRing[i][1]);\n      // skip repeated points\n      if (point.x === prevPoint.x && point.y === prevPoint.y) continue;\n      this.segments.push(Segment.fromRing(prevPoint, point, this));\n      if (point.x < this.bbox.ll.x) this.bbox.ll.x = point.x;\n      if (point.y < this.bbox.ll.y) this.bbox.ll.y = point.y;\n      if (point.x > this.bbox.ur.x) this.bbox.ur.x = point.x;\n      if (point.y > this.bbox.ur.y) this.bbox.ur.y = point.y;\n      prevPoint = point;\n    }\n    // add segment from last to first if last is not the same as first\n    if (firstPoint.x !== prevPoint.x || firstPoint.y !== prevPoint.y) {\n      this.segments.push(Segment.fromRing(prevPoint, firstPoint, this));\n    }\n  }\n  getSweepEvents() {\n    const sweepEvents = [];\n    for (let i = 0, iMax = this.segments.length; i < iMax; i++) {\n      const segment = this.segments[i];\n      sweepEvents.push(segment.leftSE);\n      sweepEvents.push(segment.rightSE);\n    }\n    return sweepEvents;\n  }\n}\nclass PolyIn {\n  constructor(geomPoly, multiPoly) {\n    if (!Array.isArray(geomPoly)) {\n      throw new Error(\"Input geometry is not a valid Polygon or MultiPolygon\");\n    }\n    this.exteriorRing = new RingIn(geomPoly[0], this, true);\n    // copy by value\n    this.bbox = {\n      ll: {\n        x: this.exteriorRing.bbox.ll.x,\n        y: this.exteriorRing.bbox.ll.y\n      },\n      ur: {\n        x: this.exteriorRing.bbox.ur.x,\n        y: this.exteriorRing.bbox.ur.y\n      }\n    };\n    this.interiorRings = [];\n    for (let i = 1, iMax = geomPoly.length; i < iMax; i++) {\n      const ring = new RingIn(geomPoly[i], this, false);\n      if (ring.bbox.ll.x < this.bbox.ll.x) this.bbox.ll.x = ring.bbox.ll.x;\n      if (ring.bbox.ll.y < this.bbox.ll.y) this.bbox.ll.y = ring.bbox.ll.y;\n      if (ring.bbox.ur.x > this.bbox.ur.x) this.bbox.ur.x = ring.bbox.ur.x;\n      if (ring.bbox.ur.y > this.bbox.ur.y) this.bbox.ur.y = ring.bbox.ur.y;\n      this.interiorRings.push(ring);\n    }\n    this.multiPoly = multiPoly;\n  }\n  getSweepEvents() {\n    const sweepEvents = this.exteriorRing.getSweepEvents();\n    for (let i = 0, iMax = this.interiorRings.length; i < iMax; i++) {\n      const ringSweepEvents = this.interiorRings[i].getSweepEvents();\n      for (let j = 0, jMax = ringSweepEvents.length; j < jMax; j++) {\n        sweepEvents.push(ringSweepEvents[j]);\n      }\n    }\n    return sweepEvents;\n  }\n}\nclass MultiPolyIn {\n  constructor(geom, isSubject) {\n    if (!Array.isArray(geom)) {\n      throw new Error(\"Input geometry is not a valid Polygon or MultiPolygon\");\n    }\n    try {\n      // if the input looks like a polygon, convert it to a multipolygon\n      if (typeof geom[0][0][0] === \"number\") geom = [geom];\n    } catch (ex) {\n      // The input is either malformed or has empty arrays.\n      // In either case, it will be handled later on.\n    }\n    this.polys = [];\n    this.bbox = {\n      ll: {\n        x: Number.POSITIVE_INFINITY,\n        y: Number.POSITIVE_INFINITY\n      },\n      ur: {\n        x: Number.NEGATIVE_INFINITY,\n        y: Number.NEGATIVE_INFINITY\n      }\n    };\n    for (let i = 0, iMax = geom.length; i < iMax; i++) {\n      const poly = new PolyIn(geom[i], this);\n      if (poly.bbox.ll.x < this.bbox.ll.x) this.bbox.ll.x = poly.bbox.ll.x;\n      if (poly.bbox.ll.y < this.bbox.ll.y) this.bbox.ll.y = poly.bbox.ll.y;\n      if (poly.bbox.ur.x > this.bbox.ur.x) this.bbox.ur.x = poly.bbox.ur.x;\n      if (poly.bbox.ur.y > this.bbox.ur.y) this.bbox.ur.y = poly.bbox.ur.y;\n      this.polys.push(poly);\n    }\n    this.isSubject = isSubject;\n  }\n  getSweepEvents() {\n    const sweepEvents = [];\n    for (let i = 0, iMax = this.polys.length; i < iMax; i++) {\n      const polySweepEvents = this.polys[i].getSweepEvents();\n      for (let j = 0, jMax = polySweepEvents.length; j < jMax; j++) {\n        sweepEvents.push(polySweepEvents[j]);\n      }\n    }\n    return sweepEvents;\n  }\n}\n\nclass RingOut {\n  /* Given the segments from the sweep line pass, compute & return a series\n   * of closed rings from all the segments marked to be part of the result */\n  static factory(allSegments) {\n    const ringsOut = [];\n    for (let i = 0, iMax = allSegments.length; i < iMax; i++) {\n      const segment = allSegments[i];\n      if (!segment.isInResult() || segment.ringOut) continue;\n      let prevEvent = null;\n      let event = segment.leftSE;\n      let nextEvent = segment.rightSE;\n      const events = [event];\n      const startingPoint = event.point;\n      const intersectionLEs = [];\n\n      /* Walk the chain of linked events to form a closed ring */\n      while (true) {\n        prevEvent = event;\n        event = nextEvent;\n        events.push(event);\n\n        /* Is the ring complete? */\n        if (event.point === startingPoint) break;\n        while (true) {\n          const availableLEs = event.getAvailableLinkedEvents();\n\n          /* Did we hit a dead end? This shouldn't happen.\n           * Indicates some earlier part of the algorithm malfunctioned. */\n          if (availableLEs.length === 0) {\n            const firstPt = events[0].point;\n            const lastPt = events[events.length - 1].point;\n            throw new Error(`Unable to complete output ring starting at [${firstPt.x},` + ` ${firstPt.y}]. Last matching segment found ends at` + ` [${lastPt.x}, ${lastPt.y}].`);\n          }\n\n          /* Only one way to go, so cotinue on the path */\n          if (availableLEs.length === 1) {\n            nextEvent = availableLEs[0].otherSE;\n            break;\n          }\n\n          /* We must have an intersection. Check for a completed loop */\n          let indexLE = null;\n          for (let j = 0, jMax = intersectionLEs.length; j < jMax; j++) {\n            if (intersectionLEs[j].point === event.point) {\n              indexLE = j;\n              break;\n            }\n          }\n          /* Found a completed loop. Cut that off and make a ring */\n          if (indexLE !== null) {\n            const intersectionLE = intersectionLEs.splice(indexLE)[0];\n            const ringEvents = events.splice(intersectionLE.index);\n            ringEvents.unshift(ringEvents[0].otherSE);\n            ringsOut.push(new RingOut(ringEvents.reverse()));\n            continue;\n          }\n          /* register the intersection */\n          intersectionLEs.push({\n            index: events.length,\n            point: event.point\n          });\n          /* Choose the left-most option to continue the walk */\n          const comparator = event.getLeftmostComparator(prevEvent);\n          nextEvent = availableLEs.sort(comparator)[0].otherSE;\n          break;\n        }\n      }\n      ringsOut.push(new RingOut(events));\n    }\n    return ringsOut;\n  }\n  constructor(events) {\n    this.events = events;\n    for (let i = 0, iMax = events.length; i < iMax; i++) {\n      events[i].segment.ringOut = this;\n    }\n    this.poly = null;\n  }\n  getGeom() {\n    // Remove superfluous points (ie extra points along a straight line),\n    let prevPt = this.events[0].point;\n    const points = [prevPt];\n    for (let i = 1, iMax = this.events.length - 1; i < iMax; i++) {\n      const pt = this.events[i].point;\n      const nextPt = this.events[i + 1].point;\n      if (compareVectorAngles(pt, prevPt, nextPt) === 0) continue;\n      points.push(pt);\n      prevPt = pt;\n    }\n\n    // ring was all (within rounding error of angle calc) colinear points\n    if (points.length === 1) return null;\n\n    // check if the starting point is necessary\n    const pt = points[0];\n    const nextPt = points[1];\n    if (compareVectorAngles(pt, prevPt, nextPt) === 0) points.shift();\n    points.push(points[0]);\n    const step = this.isExteriorRing() ? 1 : -1;\n    const iStart = this.isExteriorRing() ? 0 : points.length - 1;\n    const iEnd = this.isExteriorRing() ? points.length : -1;\n    const orderedPoints = [];\n    for (let i = iStart; i != iEnd; i += step) orderedPoints.push([points[i].x, points[i].y]);\n    return orderedPoints;\n  }\n  isExteriorRing() {\n    if (this._isExteriorRing === undefined) {\n      const enclosing = this.enclosingRing();\n      this._isExteriorRing = enclosing ? !enclosing.isExteriorRing() : true;\n    }\n    return this._isExteriorRing;\n  }\n  enclosingRing() {\n    if (this._enclosingRing === undefined) {\n      this._enclosingRing = this._calcEnclosingRing();\n    }\n    return this._enclosingRing;\n  }\n\n  /* Returns the ring that encloses this one, if any */\n  _calcEnclosingRing() {\n    // start with the ealier sweep line event so that the prevSeg\n    // chain doesn't lead us inside of a loop of ours\n    let leftMostEvt = this.events[0];\n    for (let i = 1, iMax = this.events.length; i < iMax; i++) {\n      const evt = this.events[i];\n      if (SweepEvent.compare(leftMostEvt, evt) > 0) leftMostEvt = evt;\n    }\n    let prevSeg = leftMostEvt.segment.prevInResult();\n    let prevPrevSeg = prevSeg ? prevSeg.prevInResult() : null;\n    while (true) {\n      // no segment found, thus no ring can enclose us\n      if (!prevSeg) return null;\n\n      // no segments below prev segment found, thus the ring of the prev\n      // segment must loop back around and enclose us\n      if (!prevPrevSeg) return prevSeg.ringOut;\n\n      // if the two segments are of different rings, the ring of the prev\n      // segment must either loop around us or the ring of the prev prev\n      // seg, which would make us and the ring of the prev peers\n      if (prevPrevSeg.ringOut !== prevSeg.ringOut) {\n        if (prevPrevSeg.ringOut.enclosingRing() !== prevSeg.ringOut) {\n          return prevSeg.ringOut;\n        } else return prevSeg.ringOut.enclosingRing();\n      }\n\n      // two segments are from the same ring, so this was a penisula\n      // of that ring. iterate downward, keep searching\n      prevSeg = prevPrevSeg.prevInResult();\n      prevPrevSeg = prevSeg ? prevSeg.prevInResult() : null;\n    }\n  }\n}\nclass PolyOut {\n  constructor(exteriorRing) {\n    this.exteriorRing = exteriorRing;\n    exteriorRing.poly = this;\n    this.interiorRings = [];\n  }\n  addInterior(ring) {\n    this.interiorRings.push(ring);\n    ring.poly = this;\n  }\n  getGeom() {\n    const geom = [this.exteriorRing.getGeom()];\n    // exterior ring was all (within rounding error of angle calc) colinear points\n    if (geom[0] === null) return null;\n    for (let i = 0, iMax = this.interiorRings.length; i < iMax; i++) {\n      const ringGeom = this.interiorRings[i].getGeom();\n      // interior ring was all (within rounding error of angle calc) colinear points\n      if (ringGeom === null) continue;\n      geom.push(ringGeom);\n    }\n    return geom;\n  }\n}\nclass MultiPolyOut {\n  constructor(rings) {\n    this.rings = rings;\n    this.polys = this._composePolys(rings);\n  }\n  getGeom() {\n    const geom = [];\n    for (let i = 0, iMax = this.polys.length; i < iMax; i++) {\n      const polyGeom = this.polys[i].getGeom();\n      // exterior ring was all (within rounding error of angle calc) colinear points\n      if (polyGeom === null) continue;\n      geom.push(polyGeom);\n    }\n    return geom;\n  }\n  _composePolys(rings) {\n    const polys = [];\n    for (let i = 0, iMax = rings.length; i < iMax; i++) {\n      const ring = rings[i];\n      if (ring.poly) continue;\n      if (ring.isExteriorRing()) polys.push(new PolyOut(ring));else {\n        const enclosingRing = ring.enclosingRing();\n        if (!enclosingRing.poly) polys.push(new PolyOut(enclosingRing));\n        enclosingRing.poly.addInterior(ring);\n      }\n    }\n    return polys;\n  }\n}\n\n/**\n * NOTE:  We must be careful not to change any segments while\n *        they are in the SplayTree. AFAIK, there's no way to tell\n *        the tree to rebalance itself - thus before splitting\n *        a segment that's in the tree, we remove it from the tree,\n *        do the split, then re-insert it. (Even though splitting a\n *        segment *shouldn't* change its correct position in the\n *        sweep line tree, the reality is because of rounding errors,\n *        it sometimes does.)\n */\n\nclass SweepLine {\n  constructor(queue) {\n    let comparator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Segment.compare;\n    this.queue = queue;\n    this.tree = new SplayTree(comparator);\n    this.segments = [];\n  }\n  process(event) {\n    const segment = event.segment;\n    const newEvents = [];\n\n    // if we've already been consumed by another segment,\n    // clean up our body parts and get out\n    if (event.consumedBy) {\n      if (event.isLeft) this.queue.remove(event.otherSE);else this.tree.remove(segment);\n      return newEvents;\n    }\n    const node = event.isLeft ? this.tree.add(segment) : this.tree.find(segment);\n    if (!node) throw new Error(`Unable to find segment #${segment.id} ` + `[${segment.leftSE.point.x}, ${segment.leftSE.point.y}] -> ` + `[${segment.rightSE.point.x}, ${segment.rightSE.point.y}] ` + \"in SweepLine tree.\");\n    let prevNode = node;\n    let nextNode = node;\n    let prevSeg = undefined;\n    let nextSeg = undefined;\n\n    // skip consumed segments still in tree\n    while (prevSeg === undefined) {\n      prevNode = this.tree.prev(prevNode);\n      if (prevNode === null) prevSeg = null;else if (prevNode.key.consumedBy === undefined) prevSeg = prevNode.key;\n    }\n\n    // skip consumed segments still in tree\n    while (nextSeg === undefined) {\n      nextNode = this.tree.next(nextNode);\n      if (nextNode === null) nextSeg = null;else if (nextNode.key.consumedBy === undefined) nextSeg = nextNode.key;\n    }\n    if (event.isLeft) {\n      // Check for intersections against the previous segment in the sweep line\n      let prevMySplitter = null;\n      if (prevSeg) {\n        const prevInter = prevSeg.getIntersection(segment);\n        if (prevInter !== null) {\n          if (!segment.isAnEndpoint(prevInter)) prevMySplitter = prevInter;\n          if (!prevSeg.isAnEndpoint(prevInter)) {\n            const newEventsFromSplit = this._splitSafely(prevSeg, prevInter);\n            for (let i = 0, iMax = newEventsFromSplit.length; i < iMax; i++) {\n              newEvents.push(newEventsFromSplit[i]);\n            }\n          }\n        }\n      }\n\n      // Check for intersections against the next segment in the sweep line\n      let nextMySplitter = null;\n      if (nextSeg) {\n        const nextInter = nextSeg.getIntersection(segment);\n        if (nextInter !== null) {\n          if (!segment.isAnEndpoint(nextInter)) nextMySplitter = nextInter;\n          if (!nextSeg.isAnEndpoint(nextInter)) {\n            const newEventsFromSplit = this._splitSafely(nextSeg, nextInter);\n            for (let i = 0, iMax = newEventsFromSplit.length; i < iMax; i++) {\n              newEvents.push(newEventsFromSplit[i]);\n            }\n          }\n        }\n      }\n\n      // For simplicity, even if we find more than one intersection we only\n      // spilt on the 'earliest' (sweep-line style) of the intersections.\n      // The other intersection will be handled in a future process().\n      if (prevMySplitter !== null || nextMySplitter !== null) {\n        let mySplitter = null;\n        if (prevMySplitter === null) mySplitter = nextMySplitter;else if (nextMySplitter === null) mySplitter = prevMySplitter;else {\n          const cmpSplitters = SweepEvent.comparePoints(prevMySplitter, nextMySplitter);\n          mySplitter = cmpSplitters <= 0 ? prevMySplitter : nextMySplitter;\n        }\n\n        // Rounding errors can cause changes in ordering,\n        // so remove afected segments and right sweep events before splitting\n        this.queue.remove(segment.rightSE);\n        newEvents.push(segment.rightSE);\n        const newEventsFromSplit = segment.split(mySplitter);\n        for (let i = 0, iMax = newEventsFromSplit.length; i < iMax; i++) {\n          newEvents.push(newEventsFromSplit[i]);\n        }\n      }\n      if (newEvents.length > 0) {\n        // We found some intersections, so re-do the current event to\n        // make sure sweep line ordering is totally consistent for later\n        // use with the segment 'prev' pointers\n        this.tree.remove(segment);\n        newEvents.push(event);\n      } else {\n        // done with left event\n        this.segments.push(segment);\n        segment.prev = prevSeg;\n      }\n    } else {\n      // event.isRight\n\n      // since we're about to be removed from the sweep line, check for\n      // intersections between our previous and next segments\n      if (prevSeg && nextSeg) {\n        const inter = prevSeg.getIntersection(nextSeg);\n        if (inter !== null) {\n          if (!prevSeg.isAnEndpoint(inter)) {\n            const newEventsFromSplit = this._splitSafely(prevSeg, inter);\n            for (let i = 0, iMax = newEventsFromSplit.length; i < iMax; i++) {\n              newEvents.push(newEventsFromSplit[i]);\n            }\n          }\n          if (!nextSeg.isAnEndpoint(inter)) {\n            const newEventsFromSplit = this._splitSafely(nextSeg, inter);\n            for (let i = 0, iMax = newEventsFromSplit.length; i < iMax; i++) {\n              newEvents.push(newEventsFromSplit[i]);\n            }\n          }\n        }\n      }\n      this.tree.remove(segment);\n    }\n    return newEvents;\n  }\n\n  /* Safely split a segment that is currently in the datastructures\n   * IE - a segment other than the one that is currently being processed. */\n  _splitSafely(seg, pt) {\n    // Rounding errors can cause changes in ordering,\n    // so remove afected segments and right sweep events before splitting\n    // removeNode() doesn't work, so have re-find the seg\n    // https://github.com/w8r/splay-tree/pull/5\n    this.tree.remove(seg);\n    const rightSE = seg.rightSE;\n    this.queue.remove(rightSE);\n    const newEvents = seg.split(pt);\n    newEvents.push(rightSE);\n    // splitting can trigger consumption\n    if (seg.consumedBy === undefined) this.tree.add(seg);\n    return newEvents;\n  }\n}\n\n// Limits on iterative processes to prevent infinite loops - usually caused by floating-point math round-off errors.\nconst POLYGON_CLIPPING_MAX_QUEUE_SIZE = typeof process !== \"undefined\" && process.env.POLYGON_CLIPPING_MAX_QUEUE_SIZE || 1000000;\nconst POLYGON_CLIPPING_MAX_SWEEPLINE_SEGMENTS = typeof process !== \"undefined\" && process.env.POLYGON_CLIPPING_MAX_SWEEPLINE_SEGMENTS || 1000000;\nclass Operation {\n  run(type, geom, moreGeoms) {\n    operation.type = type;\n    rounder.reset();\n\n    /* Convert inputs to MultiPoly objects */\n    const multipolys = [new MultiPolyIn(geom, true)];\n    for (let i = 0, iMax = moreGeoms.length; i < iMax; i++) {\n      multipolys.push(new MultiPolyIn(moreGeoms[i], false));\n    }\n    operation.numMultiPolys = multipolys.length;\n\n    /* BBox optimization for difference operation\n     * If the bbox of a multipolygon that's part of the clipping doesn't\n     * intersect the bbox of the subject at all, we can just drop that\n     * multiploygon. */\n    if (operation.type === \"difference\") {\n      // in place removal\n      const subject = multipolys[0];\n      let i = 1;\n      while (i < multipolys.length) {\n        if (getBboxOverlap(multipolys[i].bbox, subject.bbox) !== null) i++;else multipolys.splice(i, 1);\n      }\n    }\n\n    /* BBox optimization for intersection operation\n     * If we can find any pair of multipolygons whose bbox does not overlap,\n     * then the result will be empty. */\n    if (operation.type === \"intersection\") {\n      // TODO: this is O(n^2) in number of polygons. By sorting the bboxes,\n      //       it could be optimized to O(n * ln(n))\n      for (let i = 0, iMax = multipolys.length; i < iMax; i++) {\n        const mpA = multipolys[i];\n        for (let j = i + 1, jMax = multipolys.length; j < jMax; j++) {\n          if (getBboxOverlap(mpA.bbox, multipolys[j].bbox) === null) return [];\n        }\n      }\n    }\n\n    /* Put segment endpoints in a priority queue */\n    const queue = new SplayTree(SweepEvent.compare);\n    for (let i = 0, iMax = multipolys.length; i < iMax; i++) {\n      const sweepEvents = multipolys[i].getSweepEvents();\n      for (let j = 0, jMax = sweepEvents.length; j < jMax; j++) {\n        queue.insert(sweepEvents[j]);\n        if (queue.size > POLYGON_CLIPPING_MAX_QUEUE_SIZE) {\n          // prevents an infinite loop, an otherwise common manifestation of bugs\n          throw new Error(\"Infinite loop when putting segment endpoints in a priority queue \" + \"(queue size too big).\");\n        }\n      }\n    }\n\n    /* Pass the sweep line over those endpoints */\n    const sweepLine = new SweepLine(queue);\n    let prevQueueSize = queue.size;\n    let node = queue.pop();\n    while (node) {\n      const evt = node.key;\n      if (queue.size === prevQueueSize) {\n        // prevents an infinite loop, an otherwise common manifestation of bugs\n        const seg = evt.segment;\n        throw new Error(`Unable to pop() ${evt.isLeft ? \"left\" : \"right\"} SweepEvent ` + `[${evt.point.x}, ${evt.point.y}] from segment #${seg.id} ` + `[${seg.leftSE.point.x}, ${seg.leftSE.point.y}] -> ` + `[${seg.rightSE.point.x}, ${seg.rightSE.point.y}] from queue.`);\n      }\n      if (queue.size > POLYGON_CLIPPING_MAX_QUEUE_SIZE) {\n        // prevents an infinite loop, an otherwise common manifestation of bugs\n        throw new Error(\"Infinite loop when passing sweep line over endpoints \" + \"(queue size too big).\");\n      }\n      if (sweepLine.segments.length > POLYGON_CLIPPING_MAX_SWEEPLINE_SEGMENTS) {\n        // prevents an infinite loop, an otherwise common manifestation of bugs\n        throw new Error(\"Infinite loop when passing sweep line over endpoints \" + \"(too many sweep line segments).\");\n      }\n      const newEvents = sweepLine.process(evt);\n      for (let i = 0, iMax = newEvents.length; i < iMax; i++) {\n        const evt = newEvents[i];\n        if (evt.consumedBy === undefined) queue.insert(evt);\n      }\n      prevQueueSize = queue.size;\n      node = queue.pop();\n    }\n\n    // free some memory we don't need anymore\n    rounder.reset();\n\n    /* Collect and compile segments we're keeping into a multipolygon */\n    const ringsOut = RingOut.factory(sweepLine.segments);\n    const result = new MultiPolyOut(ringsOut);\n    return result.getGeom();\n  }\n}\n\n// singleton available by import\nconst operation = new Operation();\n\nconst union = function (geom) {\n  for (var _len = arguments.length, moreGeoms = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    moreGeoms[_key - 1] = arguments[_key];\n  }\n  return operation.run(\"union\", geom, moreGeoms);\n};\nconst intersection = function (geom) {\n  for (var _len2 = arguments.length, moreGeoms = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    moreGeoms[_key2 - 1] = arguments[_key2];\n  }\n  return operation.run(\"intersection\", geom, moreGeoms);\n};\nconst xor = function (geom) {\n  for (var _len3 = arguments.length, moreGeoms = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    moreGeoms[_key3 - 1] = arguments[_key3];\n  }\n  return operation.run(\"xor\", geom, moreGeoms);\n};\nconst difference = function (subjectGeom) {\n  for (var _len4 = arguments.length, clippingGeoms = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n    clippingGeoms[_key4 - 1] = arguments[_key4];\n  }\n  return operation.run(\"difference\", subjectGeom, clippingGeoms);\n};\nvar index = {\n  union: union,\n  intersection: intersection,\n  xor: xor,\n  difference: difference\n};\n\nexport { index as default };\n", "import { getCoord } from \"@turf/invariant\";\nimport { GreatCircle } from \"./lib/arc.js\";\n\n/**\n * Calculate great circles routes as {@link LineString} or {@link MultiLineString}.\n * If the `start` and `end` points span the antimeridian, the resulting feature will\n * be split into a `MultiLineString`.\n *\n * @name greatCircle\n * @param {Coord} start source point feature\n * @param {Coord} end destination point feature\n * @param {Object} [options={}] Optional parameters\n * @param {Object} [options.properties={}] line feature properties\n * @param {number} [options.npoints=100] number of points\n * @param {number} [options.offset=10] offset controls the likelyhood that lines will\n * be split which cross the dateline. The higher the number the more likely.\n * @returns {Feature<LineString | MultiLineString>} great circle line feature\n * @example\n * var start = turf.point([-122, 48]);\n * var end = turf.point([-77, 39]);\n *\n * var greatCircle = turf.greatCircle(start, end, {properties: {name: 'Seattle to DC'}});\n *\n * //addToMap\n * var addToMap = [start, end, greatCircle]\n */\nfunction greatCircle(start, end, options) {\n  // Optional parameters\n  options = options || {};\n  if (typeof options !== \"object\") throw new Error(\"options is invalid\");\n  var properties = options.properties;\n  var npoints = options.npoints;\n  var offset = options.offset;\n\n  start = getCoord(start);\n  end = getCoord(end);\n  properties = properties || {};\n  npoints = npoints || 100;\n  offset = offset || 10;\n\n  var generator = new GreatCircle(\n    { x: start[0], y: start[1] },\n    { x: end[0], y: end[1] },\n    properties\n  );\n\n  var line = generator.Arc(npoints, { offset: offset });\n\n  return line.json();\n}\n\nexport { greatCircle };\nexport default greatCircle;\n", "/*!\n * Copyright (c) 2019, Dane Springmeyer\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n *       notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above copyright\n *       notice, this list of conditions and the following disclaimer in\n *       the documentation and/or other materials provided with the\n *       distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n * IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nvar D2R = Math.PI / 180;\nvar R2D = 180 / Math.PI;\n\nvar Coord = function (lon, lat) {\n  this.lon = lon;\n  this.lat = lat;\n  this.x = D2R * lon;\n  this.y = D2R * lat;\n};\n\nCoord.prototype.view = function () {\n  return String(this.lon).slice(0, 4) + \",\" + String(this.lat).slice(0, 4);\n};\n\nCoord.prototype.antipode = function () {\n  var anti_lat = -1 * this.lat;\n  var anti_lon = this.lon < 0 ? 180 + this.lon : (180 - this.lon) * -1;\n  return new Coord(anti_lon, anti_lat);\n};\n\nvar LineString = function () {\n  this.coords = [];\n  this.length = 0;\n};\n\nLineString.prototype.move_to = function (coord) {\n  this.length++;\n  this.coords.push(coord);\n};\n\nvar Arc = function (properties) {\n  this.properties = properties || {};\n  this.geometries = [];\n};\n\nArc.prototype.json = function () {\n  if (this.geometries.length <= 0) {\n    return {\n      geometry: { type: \"LineString\", coordinates: null },\n      type: \"Feature\",\n      properties: this.properties,\n    };\n  } else if (this.geometries.length === 1) {\n    return {\n      geometry: { type: \"LineString\", coordinates: this.geometries[0].coords },\n      type: \"Feature\",\n      properties: this.properties,\n    };\n  } else {\n    var multiline = [];\n    for (var i = 0; i < this.geometries.length; i++) {\n      multiline.push(this.geometries[i].coords);\n    }\n    return {\n      geometry: { type: \"MultiLineString\", coordinates: multiline },\n      type: \"Feature\",\n      properties: this.properties,\n    };\n  }\n};\n\n// TODO - output proper multilinestring\nArc.prototype.wkt = function () {\n  var wkt_string = \"\";\n  var wkt = \"LINESTRING(\";\n  var collect = function (c) {\n    wkt += c[0] + \" \" + c[1] + \",\";\n  };\n  for (var i = 0; i < this.geometries.length; i++) {\n    if (this.geometries[i].coords.length === 0) {\n      return \"LINESTRING(empty)\";\n    } else {\n      var coords = this.geometries[i].coords;\n      coords.forEach(collect);\n      wkt_string += wkt.substring(0, wkt.length - 1) + \")\";\n    }\n  }\n  return wkt_string;\n};\n\n/*\n * http://en.wikipedia.org/wiki/Great-circle_distance\n *\n */\nvar GreatCircle = function (start, end, properties) {\n  if (!start || start.x === undefined || start.y === undefined) {\n    throw new Error(\n      \"GreatCircle constructor expects two args: start and end objects with x and y properties\"\n    );\n  }\n  if (!end || end.x === undefined || end.y === undefined) {\n    throw new Error(\n      \"GreatCircle constructor expects two args: start and end objects with x and y properties\"\n    );\n  }\n  this.start = new Coord(start.x, start.y);\n  this.end = new Coord(end.x, end.y);\n  this.properties = properties || {};\n\n  var w = this.start.x - this.end.x;\n  var h = this.start.y - this.end.y;\n  var z =\n    Math.pow(Math.sin(h / 2.0), 2) +\n    Math.cos(this.start.y) *\n      Math.cos(this.end.y) *\n      Math.pow(Math.sin(w / 2.0), 2);\n  this.g = 2.0 * Math.asin(Math.sqrt(z));\n\n  if (this.g === Math.PI) {\n    throw new Error(\n      \"it appears \" +\n        start.view() +\n        \" and \" +\n        end.view() +\n        \" are 'antipodal', e.g diametrically opposite, thus there is no single route but rather infinite\"\n    );\n  } else if (isNaN(this.g)) {\n    throw new Error(\n      \"could not calculate great circle between \" + start + \" and \" + end\n    );\n  }\n};\n\n/*\n * http://williams.best.vwh.net/avform.htm#Intermediate\n */\nGreatCircle.prototype.interpolate = function (f) {\n  var A = Math.sin((1 - f) * this.g) / Math.sin(this.g);\n  var B = Math.sin(f * this.g) / Math.sin(this.g);\n  var x =\n    A * Math.cos(this.start.y) * Math.cos(this.start.x) +\n    B * Math.cos(this.end.y) * Math.cos(this.end.x);\n  var y =\n    A * Math.cos(this.start.y) * Math.sin(this.start.x) +\n    B * Math.cos(this.end.y) * Math.sin(this.end.x);\n  var z = A * Math.sin(this.start.y) + B * Math.sin(this.end.y);\n  var lat = R2D * Math.atan2(z, Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2)));\n  var lon = R2D * Math.atan2(y, x);\n  return [lon, lat];\n};\n\n/*\n * Generate points along the great circle\n */\nGreatCircle.prototype.Arc = function (npoints, options) {\n  var first_pass = [];\n  if (!npoints || npoints <= 2) {\n    first_pass.push([this.start.lon, this.start.lat]);\n    first_pass.push([this.end.lon, this.end.lat]);\n  } else {\n    var delta = 1.0 / (npoints - 1);\n    for (var i = 0; i < npoints; ++i) {\n      var step = delta * i;\n      var pair = this.interpolate(step);\n      first_pass.push(pair);\n    }\n  }\n  /* partial port of dateline handling from:\n      gdal/ogr/ogrgeometryfactory.cpp\n\n      TODO - does not handle all wrapping scenarios yet\n    */\n  var bHasBigDiff = false;\n  var dfMaxSmallDiffLong = 0;\n  // from http://www.gdal.org/ogr2ogr.html\n  // -datelineoffset:\n  // (starting with GDAL 1.10) offset from dateline in degrees (default long. = +/- 10deg, geometries within 170deg to -170deg will be splited)\n  var dfDateLineOffset = options && options.offset ? options.offset : 10;\n  var dfLeftBorderX = 180 - dfDateLineOffset;\n  var dfRightBorderX = -180 + dfDateLineOffset;\n  var dfDiffSpace = 360 - dfDateLineOffset;\n\n  // https://github.com/OSGeo/gdal/blob/7bfb9c452a59aac958bff0c8386b891edf8154ca/gdal/ogr/ogrgeometryfactory.cpp#L2342\n  for (var j = 1; j < first_pass.length; ++j) {\n    var dfPrevX = first_pass[j - 1][0];\n    var dfX = first_pass[j][0];\n    var dfDiffLong = Math.abs(dfX - dfPrevX);\n    if (\n      dfDiffLong > dfDiffSpace &&\n      ((dfX > dfLeftBorderX && dfPrevX < dfRightBorderX) ||\n        (dfPrevX > dfLeftBorderX && dfX < dfRightBorderX))\n    ) {\n      bHasBigDiff = true;\n    } else if (dfDiffLong > dfMaxSmallDiffLong) {\n      dfMaxSmallDiffLong = dfDiffLong;\n    }\n  }\n\n  var poMulti = [];\n  if (bHasBigDiff && dfMaxSmallDiffLong < dfDateLineOffset) {\n    var poNewLS = [];\n    poMulti.push(poNewLS);\n    for (var k = 0; k < first_pass.length; ++k) {\n      var dfX0 = parseFloat(first_pass[k][0]);\n      if (k > 0 && Math.abs(dfX0 - first_pass[k - 1][0]) > dfDiffSpace) {\n        var dfX1 = parseFloat(first_pass[k - 1][0]);\n        var dfY1 = parseFloat(first_pass[k - 1][1]);\n        var dfX2 = parseFloat(first_pass[k][0]);\n        var dfY2 = parseFloat(first_pass[k][1]);\n        if (\n          dfX1 > -180 &&\n          dfX1 < dfRightBorderX &&\n          dfX2 === 180 &&\n          k + 1 < first_pass.length &&\n          first_pass[k - 1][0] > -180 &&\n          first_pass[k - 1][0] < dfRightBorderX\n        ) {\n          poNewLS.push([-180, first_pass[k][1]]);\n          k++;\n          poNewLS.push([first_pass[k][0], first_pass[k][1]]);\n          continue;\n        } else if (\n          dfX1 > dfLeftBorderX &&\n          dfX1 < 180 &&\n          dfX2 === -180 &&\n          k + 1 < first_pass.length &&\n          first_pass[k - 1][0] > dfLeftBorderX &&\n          first_pass[k - 1][0] < 180\n        ) {\n          poNewLS.push([180, first_pass[k][1]]);\n          k++;\n          poNewLS.push([first_pass[k][0], first_pass[k][1]]);\n          continue;\n        }\n\n        if (dfX1 < dfRightBorderX && dfX2 > dfLeftBorderX) {\n          // swap dfX1, dfX2\n          var tmpX = dfX1;\n          dfX1 = dfX2;\n          dfX2 = tmpX;\n          // swap dfY1, dfY2\n          var tmpY = dfY1;\n          dfY1 = dfY2;\n          dfY2 = tmpY;\n        }\n        if (dfX1 > dfLeftBorderX && dfX2 < dfRightBorderX) {\n          dfX2 += 360;\n        }\n\n        if (dfX1 <= 180 && dfX2 >= 180 && dfX1 < dfX2) {\n          var dfRatio = (180 - dfX1) / (dfX2 - dfX1);\n          var dfY = dfRatio * dfY2 + (1 - dfRatio) * dfY1;\n          poNewLS.push([\n            first_pass[k - 1][0] > dfLeftBorderX ? 180 : -180,\n            dfY,\n          ]);\n          poNewLS = [];\n          poNewLS.push([\n            first_pass[k - 1][0] > dfLeftBorderX ? -180 : 180,\n            dfY,\n          ]);\n          poMulti.push(poNewLS);\n        } else {\n          poNewLS = [];\n          poMulti.push(poNewLS);\n        }\n        poNewLS.push([dfX0, first_pass[k][1]]);\n      } else {\n        poNewLS.push([first_pass[k][0], first_pass[k][1]]);\n      }\n    }\n  } else {\n    // add normally\n    var poNewLS0 = [];\n    poMulti.push(poNewLS0);\n    for (var l = 0; l < first_pass.length; ++l) {\n      poNewLS0.push([first_pass[l][0], first_pass[l][1]]);\n    }\n  }\n\n  var arc = new Arc(this.properties);\n  for (var m = 0; m < poMulti.length; ++m) {\n    var line = new LineString();\n    arc.geometries.push(line);\n    var points = poMulti[m];\n    for (var j0 = 0; j0 < points.length; ++j0) {\n      line.move_to(points[j0]);\n    }\n  }\n  return arc;\n};\n\nexport { Coord, Arc, GreatCircle };\n\nexport default {\n  Coord,\n  Arc,\n  GreatCircle,\n};\n", "/*!\n* MarchingSquaresJS\n* version 1.3.3\n* https://github.com/RaumZeit/MarchingSquares.js\n*\n* @license GNU Affero General Public License.\n* Copyright (c) 2015-2019 Ronny Lorenz <ronny@tbi.univie.ac.at>\n*/\n\n\n/*\n *  Compute the distance of a value 'v' from 'a' through linear interpolation\n *  between the values of 'a' and 'b'\n *\n *  Note, that we assume that 'a' and 'b' have unit distance (i.e. 1)\n */\nfunction linear(a, b, v) {\n  if (a < b)\n    return (v - a) / (b - a);\n\n  return (a - v) / (a - b);\n}\n\n\n/*\n *  Compute the distance of a pair of values ('v0', 'v1') from 'a' through linear interpolation\n *  between the values of 'a' and 'b'\n *\n *  This function assumes that exactly one value, 'v0' or 'v1', is actually located\n *  between 'a' and 'b', and choses the right one automagically\n *\n *  Note, that we assume that 'a' and 'b' have unit distance (i.e. 1)\n */\nfunction linear_ab(a, b, v0, v1) {\n  var tmp;\n\n  if (v0 > v1) {\n    tmp = v0;\n    v0  = v1;\n    v1  = tmp;\n  }\n\n  if (a < b) {\n    if (a < v0)\n      return (v0 - a) / (b - a);\n    else\n      return (v1 - a) / (b - a);\n  } else if (a > v1) {\n    return (a - v1) / (a - b);\n  }\n\n  return (a - v0) / (a - b);\n}\n\n\n/*\n *  Compute the distance of a pair of values ('v0', 'v1') from 'a' through linear interpolation\n *  between the values of 'a' and 'b'\n *\n *  This function automagically choses the value 'vN' that is closer to 'a'\n *\n *  Note, that we assume that 'a' and 'b' have unit distance (i.e. 1)\n */\nfunction linear_a(a, b, minV, maxV) {\n  if (a < b)\n    return (minV - a) / (b - a);\n\n  return (a - maxV) / (a - b);\n}\n\n\n/*\n *  Compute the distance of a pair of values ('v0', 'v1') from 'a' through linear interpolation\n *  between the values of 'a' and 'b'\n *\n *  This function automagically choses the value 'vN' that is closer to 'b'\n *\n *  Note, that we assume that 'a' and 'b' have unit distance (i.e. 1)\n */\nfunction linear_b(a, b, minV, maxV) {\n  if (a < b)\n    return (maxV - a) / (b - a);\n\n  return (a - minV) / (a - b);\n}\n\nfunction Options() {\n  /* Settings common to all implemented algorithms */\n  this.successCallback  = null;\n  this.verbose          = false;\n  this.polygons         = false;\n  this.polygons_full    = false;\n  this.linearRing       = true;\n  this.noQuadTree       = false;\n  this.noFrame          = false;\n}\n\n\n/* Compose settings specific to IsoBands algorithm */\nfunction isoBandOptions(userSettings) {\n  var i,\n    key,\n    val,\n    bandOptions,\n    optionKeys;\n\n  bandOptions   = new Options();\n  userSettings  = userSettings ? userSettings : {};\n  optionKeys    = Object.keys(bandOptions);\n\n  for(i = 0; i < optionKeys.length; i++) {\n    key = optionKeys[i];\n    val = userSettings[key];\n    if ((typeof val !== 'undefined') && (val !== null))\n      bandOptions[key] = val;\n  }\n\n  /* restore compatibility */\n  bandOptions.polygons_full  = !bandOptions.polygons;\n\n  /* add interpolation functions (not yet user customizable) */\n  bandOptions.interpolate   = linear_ab;\n  bandOptions.interpolate_a = linear_a;\n  bandOptions.interpolate_b = linear_b;\n\n  return bandOptions;\n}\n\n\n/* Compose settings specific to IsoLines algorithm */\nfunction isoLineOptions(userSettings) {\n  var i,\n    key,\n    val,\n    lineOptions,\n    optionKeys;\n\n  lineOptions   = new Options();\n  userSettings  = userSettings ? userSettings : {};\n  optionKeys    = Object.keys(lineOptions);\n\n  for(i = 0; i < optionKeys.length; i++) {\n    key = optionKeys[i];\n    val = userSettings[key];\n    if ((typeof val !== 'undefined') && (val !== null))\n      lineOptions[key] = val;\n  }\n\n  /* restore compatibility */\n  lineOptions.polygons_full  = !lineOptions.polygons;\n\n  /* add interpolation functions (not yet user customizable) */\n  lineOptions.interpolate   = linear;\n\n  return lineOptions;\n}\n\nfunction cell2Polygons(cell, x, y, settings) {\n  var polygons = [];\n\n  cell.polygons.forEach(function(p) {\n    p.forEach(function(pp) {\n      pp[0] += x;\n      pp[1] += y;\n    });\n\n    if (settings.linearRing)\n      p.push(p[0]);\n\n    polygons.push(p);\n  });\n\n  return polygons;\n}\n\nfunction entry_coordinate(x, y, mode, path) {\n  if (mode === 0) { /* down */\n    x += 1;\n    y += path[0][1];\n  } else if (mode === 1) { /* left */\n    x += path[0][0];\n  } else if (mode === 2) { /* up */\n    y += path[0][1];\n  } else if (mode === 3) { /* right */\n    x += path[0][0];\n    y += 1;\n  }\n\n  return [ x, y ];\n}\n\n\nfunction skip_coordinate(x, y, mode) {\n  if (mode === 0) { /* down */\n    x++;\n  } else if (mode === 1) ; else if (mode === 2) { /* up */\n    y++;\n  } else if (mode === 3) { /* right */\n    x++;\n    y++;\n  }\n\n  return [ x, y ];\n}\n\n\nfunction requireFrame(data, lowerBound, upperBound) {\n  var frameRequired,\n    cols,\n    rows,\n    i,\n    j;\n\n  frameRequired = true;\n  cols          = data[0].length;\n  rows          = data.length;\n\n  for (j = 0; j < rows; j++) {\n    if ((data[j][0] < lowerBound) ||\n        (data[j][0] > upperBound) ||\n        (data[j][cols - 1] < lowerBound) ||\n        (data[j][cols - 1] > upperBound)) {\n      frameRequired = false;\n      break;\n    }\n  }\n\n  if ((frameRequired) &&\n      ((data[rows - 1][0] < lowerBound) ||\n      (data[rows - 1][0] > upperBound) ||\n      (data[rows - 1][cols - 1] < lowerBound) ||\n      (data[rows - 1][cols - 1] > upperBound))) {\n    frameRequired = false;\n  }\n\n  if (frameRequired)\n    for (i = 0; i < cols - 1; i++) {\n      if ((data[0][i] < lowerBound) ||\n          (data[0][i] > upperBound) ||\n          (data[rows - 1][i] < lowerBound) ||\n          (data[rows - 1][i] > upperBound)) {\n        frameRequired = false;\n        break;\n      }\n    }\n\n\n  return frameRequired;\n}\n\n\nfunction requireLineFrame(data, threshold) {\n  var frameRequired,\n    cols,\n    rows,\n    i,\n    j;\n\n  frameRequired = true;\n  cols          = data[0].length;\n  rows          = data.length;\n\n  for (j = 0; j < rows; j++) {\n    if ((data[j][0] >= threshold) ||\n        (data[j][cols - 1] >= threshold)) {\n      frameRequired = false;\n      break;\n    }\n  }\n\n  if ((frameRequired) &&\n      ((data[rows - 1][0] >= threshold) ||\n      (data[rows - 1][cols - 1] >= threshold))) {\n    frameRequired = false;\n  }\n\n  if (frameRequired)\n    for (i = 0; i < cols - 1; i++) {\n      if ((data[0][i] >= threshold) ||\n          (data[rows - 1][i] > threshold)) {\n        frameRequired = false;\n        break;\n      }\n    }\n\n  return frameRequired;\n}\n\n\nfunction traceBandPaths(data, cellGrid, settings) {\n  var nextedge,\n    path,\n    e,\n    ee,\n    s,\n    ve,\n    enter,\n    x,\n    y,\n    finalized,\n    origin,\n    cc,\n    dir,\n    count,\n    point,\n    found_entry;\n\n  var polygons = [];\n  var rows = data.length - 1;\n  var cols = data[0].length - 1;\n\n  /*\n   * directions for out-of-grid moves are:\n   * 0 ... \"down\",\n   * 1 ... \"left\",\n   * 2 ... \"up\",\n   * 3 ... \"right\"\n   */\n  var valid_entries = [ ['rt', 'rb'], /* down */\n    ['br', 'bl'], /* left */\n    ['lb', 'lt'], /* up */\n    ['tl', 'tr']  /* right */\n  ];\n  var add_x         = [ 0, -1, 0, 1 ];\n  var add_y         = [ -1, 0, 1, 0 ];\n  var available_starts = [ 'bl', 'lb', 'lt', 'tl', 'tr', 'rt', 'rb', 'br' ];\n  var entry_dir     =  {\n    bl: 1, br: 1,\n    lb: 2, lt: 2,\n    tl: 3, tr: 3,\n    rt: 0, rb: 0\n  };\n\n  if (requireFrame(data, settings.minV, settings.maxV)) {\n    if (settings.linearRing)\n      polygons.push([ [0, 0], [0, rows], [cols, rows], [cols, 0], [0, 0] ]);\n    else\n      polygons.push([ [0, 0], [0, rows], [cols, rows], [cols, 0] ]);\n  }\n\n  /* finally, start tracing back first polygon(s) */\n  cellGrid.forEach(function(a, i) {\n    a.forEach(function(cell, j) {\n      nextedge = null;\n\n      /* trace paths for all available edges that go through this cell */\n      for (e = 0; e < 8; e++) {\n        nextedge = available_starts[e];\n\n        if (typeof cell.edges[nextedge] !== 'object')\n          continue;\n\n        /* start a new, full path */\n        path              = [];\n        ee                = cell.edges[nextedge];\n        enter             = nextedge;\n        x                 = i;\n        y                 = j;\n        finalized         = false;\n        origin            = [ i + ee.path[0][0], j + ee.path[0][1] ];\n\n        /* add start coordinate */\n        path.push(origin);\n\n        /* start traceback */\n        while (!finalized) {\n          cc = cellGrid[x][y];\n\n          if (typeof cc.edges[enter] !== 'object')\n            break;\n\n          ee = cc.edges[enter];\n\n          /* remove edge from cell */\n          delete cc.edges[enter];\n\n          /* add last point of edge to path arra, since we extend a polygon */\n          point = ee.path[1];\n          point[0] += x;\n          point[1] += y;\n          path.push(point);\n\n          enter = ee.move.enter;\n          x     = x + ee.move.x;\n          y     = y + ee.move.y;\n\n          /* handle out-of-grid moves */\n          if ((typeof cellGrid[x] === 'undefined') ||\n              (typeof cellGrid[x][y] === 'undefined')) {\n            dir   = 0;\n            count = 0;\n\n            if (x === cols) {\n              x--;\n              dir = 0;  /* move downwards */\n            } else if (x < 0) {\n              x++;\n              dir = 2;  /* move upwards */\n            } else if (y === rows) {\n              y--;\n              dir = 3;  /* move right */\n            } else if (y < 0) {\n              y++;\n              dir = 1;  /* move left */\n            } else {\n              throw new Error('Left the grid somewhere in the interior!');\n            }\n\n            if ((x === i) && (y === j) && (dir === entry_dir[nextedge])) {\n              finalized = true;\n              enter     = nextedge;\n              break;\n            }\n\n            while (1) {\n              found_entry = false;\n\n              if (count > 4)\n                throw new Error('Direction change counter overflow! This should never happen!');\n\n              if (!((typeof cellGrid[x] === 'undefined') ||\n                    (typeof cellGrid[x][y] === 'undefined'))) {\n                cc = cellGrid[x][y];\n\n                /* check for re-entry */\n                for (s = 0; s < valid_entries[dir].length; s++) {\n                  ve = valid_entries[dir][s];\n                  if (typeof cc.edges[ve] === 'object') {\n                    /* found re-entry */\n                    ee = cc.edges[ve];\n                    path.push(entry_coordinate(x, y, dir, ee.path));\n                    enter = ve;\n                    found_entry = true;\n                    break;\n                  }\n                }\n              }\n\n              if (found_entry) {\n                break;\n              } else {\n                path.push(skip_coordinate(x, y, dir));\n\n                x += add_x[dir];\n                y += add_y[dir];\n\n                /* change direction if we'e moved out of grid again */\n                if ((typeof cellGrid[x] === 'undefined') ||\n                    (typeof cellGrid[x][y] === 'undefined')) {\n                  if (((dir === 0) && (y < 0)) ||\n                      ((dir === 1) && (x < 0)) ||\n                      ((dir === 2) && (y === rows)) ||\n                      ((dir === 3) && (x === cols))) {\n                    x -= add_x[dir];\n                    y -= add_y[dir];\n\n                    dir = (dir + 1) % 4;\n                    count++;\n                  }\n                }\n\n                if ((x === i) && (y === j) && (dir === entry_dir[nextedge])) {\n                /* we are back where we started off, so finalize the polygon */\n                  finalized = true;\n                  enter     = nextedge;\n                  break;\n                }\n              }\n            }\n          }\n        }\n\n        if ((settings.linearRing) &&\n          ((path[path.length - 1][0] !== origin[0]) ||\n          (path[path.length - 1][1] !== origin[1])))\n          path.push(origin);\n\n        polygons.push(path);\n      } /* end forall entry sites */\n    }); /* end foreach i */\n  }); /* end foreach j */\n\n  return polygons;\n}\n\n\nfunction traceLinePaths(data, cellGrid, settings) {\n  var nextedge,\n    e,\n    ee,\n    cc,\n    path,\n    enter,\n    x,\n    y,\n    finalized,\n    origin,\n    point,\n    dir,\n    count,\n    found_entry,\n    ve;\n\n  var polygons = [];\n  var rows = data.length - 1;\n  var cols = data[0].length - 1;\n\n  /*\n   * directions for out-of-grid moves are:\n   * 0 ... \"down\",\n   * 1 ... \"left\",\n   * 2 ... \"up\",\n   * 3 ... \"right\"\n   */\n  var valid_entries = [ 'right',  /* down */\n    'bottom', /* left */\n    'left',   /* up */\n    'top'     /* right */\n  ];\n  var add_x         = [ 0, -1, 0, 1 ];\n  var add_y         = [ -1, 0, 1, 0 ];\n  var entry_dir     =  {\n    bottom: 1,\n    left: 2,\n    top: 3,\n    right: 0\n  };\n\n  /* first, detect whether we need any outer frame */\n  if (!settings.noFrame)\n    if (requireLineFrame(data, settings.threshold)) {\n      if (settings.linearRing)\n        polygons.push([ [0, 0], [0, rows], [cols, rows], [cols, 0], [0, 0] ]);\n      else\n        polygons.push([ [0, 0], [0, rows], [cols, rows], [cols, 0] ]);\n    }\n\n  /* finally, start tracing back first polygon(s) */\n\n  cellGrid.forEach(function(a, i) {\n    a.forEach(function(cell, j) {\n      nextedge = null;\n\n      /* trace paths for all available edges that go through this cell */\n      for (e = 0; e < 4; e++) {\n        nextedge = valid_entries[e];\n\n        if (typeof cell.edges[nextedge] !== 'object')\n          continue;\n\n        /* start a new, full path */\n        path              = [];\n        ee                = cell.edges[nextedge];\n        enter             = nextedge;\n        x                 = i;\n        y                 = j;\n        finalized         = false;\n        origin            = [ i + ee.path[0][0], j + ee.path[0][1] ];\n\n        /* add start coordinate */\n        path.push(origin);\n\n        /* start traceback */\n        while (!finalized) {\n          cc = cellGrid[x][y];\n\n          if (typeof cc.edges[enter] !== 'object')\n            break;\n\n          ee = cc.edges[enter];\n\n          /* remove edge from cell */\n          delete cc.edges[enter];\n\n          /* add last point of edge to path arra, since we extend a polygon */\n          point = ee.path[1];\n          point[0] += x;\n          point[1] += y;\n          path.push(point);\n\n          enter = ee.move.enter;\n          x     = x + ee.move.x;\n          y     = y + ee.move.y;\n\n          /* handle out-of-grid moves */\n          if ((typeof cellGrid[x] === 'undefined') ||\n              (typeof cellGrid[x][y] === 'undefined')) {\n\n            if (!settings.linearRing)\n              break;\n\n            dir   = 0;\n            count = 0;\n\n            if (x === cols) {\n              x--;\n              dir = 0;  /* move downwards */\n            } else if (x < 0) {\n              x++;\n              dir = 2;  /* move upwards */\n            } else if (y === rows) {\n              y--;\n              dir = 3;  /* move right */\n            } else if (y < 0) {\n              y++;\n              dir = 1;  /* move left */\n            }\n\n            if ((x === i) && (y === j) && (dir === entry_dir[nextedge])) {\n              finalized = true;\n              enter     = nextedge;\n              break;\n            }\n\n            while (1) {\n              found_entry = false;\n\n              if (count > 4)\n                throw new Error('Direction change counter overflow! This should never happen!');\n\n              if (!((typeof cellGrid[x] === 'undefined') ||\n                    (typeof cellGrid[x][y] === 'undefined'))) {\n                cc = cellGrid[x][y];\n\n                /* check for re-entry */\n                ve = valid_entries[dir];\n                if (typeof cc.edges[ve] === 'object') {\n                  /* found re-entry */\n                  ee = cc.edges[ve];\n                  path.push(entry_coordinate(x, y, dir, ee.path));\n                  enter = ve;\n                  found_entry = true;\n                  break;\n                }\n              }\n\n              if (found_entry) {\n                break;\n              } else {\n                path.push(skip_coordinate(x, y, dir));\n\n                x += add_x[dir];\n                y += add_y[dir];\n\n                /* change direction if we'e moved out of grid again */\n                if ((typeof cellGrid[x] === 'undefined') ||\n                  (typeof cellGrid[x][y] === 'undefined')) {\n                  if (((dir === 0) && (y < 0)) ||\n                      ((dir === 1) && (x < 0)) ||\n                      ((dir === 2) && (y === rows)) ||\n                      ((dir === 3) && (x === cols))) {\n                    x -= add_x[dir];\n                    y -= add_y[dir];\n\n                    dir = (dir + 1) % 4;\n                    count++;\n                  }\n                }\n\n                if ((x === i) && (y === j) && (dir === entry_dir[nextedge])) {\n                  /* we are back where we started off, so finalize the polygon */\n                  finalized = true;\n                  enter     = nextedge;\n                  break;\n                }\n              }\n            }\n          }\n        }\n\n        if ((settings.linearRing) &&\n            ((path[path.length - 1][0] !== origin[0]) ||\n            (path[path.length - 1][1] !== origin[1])))\n          path.push(origin);\n\n        polygons.push(path);\n      } /* end forall entry sites */\n    }); /* end foreach i */\n  }); /* end foreach j */\n\n  return polygons;\n}\n\n/* quadTree node constructor */\nfunction TreeNode(data, x, y, dx, dy) {\n  var dx_tmp = dx,\n    dy_tmp = dy,\n    msb_x  = 0,\n    msb_y  = 0;\n\n  /* left-bottom corner of current quadrant */\n  this.x = x;\n  this.y = y;\n\n  /* minimum value in subtree under this node */\n  this.lowerBound = null;\n  /* maximum value in subtree under this node */\n  this.upperBound = null;\n\n  /*\n   *  child nodes are layed out in the following way:\n   *\n   *  (x, y + 1) ---- (x + 1, y + 1)\n   *  |             |              |\n   *  |      D      |      C       |\n   *  |             |              |\n   *  |----------------------------|\n   *  |             |              |\n   *  |      A      |      B       |\n   *  |             |              |\n   *  (x, y) ------------ (x + 1, y)\n   */\n  this.childA = null;\n  this.childB = null;\n  this.childC = null;\n  this.childD = null;\n\n  if ((dx === 1) && (dy === 1)) {\n    /* do not further subdivision */\n    this.lowerBound = Math.min(\n      data[y][x],\n      data[y][x + 1],\n      data[y + 1][x + 1],\n      data[y + 1][x]\n    );\n    this.upperBound = Math.max(\n      data[y][x],\n      data[y][x + 1],\n      data[y + 1][x + 1],\n      data[y + 1][x]\n    );\n  } else {\n    /* get most significant bit from dx */\n    if (dx > 1) {\n      while (dx_tmp !== 0) {\n        dx_tmp = dx_tmp >> 1;\n        msb_x++;\n      }\n\n      if (dx === (1 << (msb_x - 1)))\n        msb_x--;\n\n      dx_tmp = 1 << (msb_x - 1);\n    }\n\n    /* get most significant bit from dx */\n    if (dy > 1) {\n      while (dy_tmp !== 0) {\n        dy_tmp = dy_tmp >> 1;\n        msb_y++;\n      }\n\n      if (dy === (1 << (msb_y - 1)))\n        msb_y--;\n\n      dy_tmp = 1 << (msb_y - 1);\n    }\n\n    this.childA = new TreeNode(data, x, y, dx_tmp, dy_tmp);\n    this.lowerBound = this.childA.lowerBound;\n    this.upperBound = this.childA.upperBound;\n\n    if (dx - dx_tmp > 0) {\n      this.childB = new TreeNode(data, x + dx_tmp, y, dx - dx_tmp, dy_tmp);\n      this.lowerBound = Math.min(this.lowerBound, this.childB.lowerBound);\n      this.upperBound = Math.max(this.upperBound, this.childB.upperBound);\n\n      if (dy - dy_tmp > 0) {\n        this.childC = new TreeNode(data, x + dx_tmp, y + dy_tmp, dx - dx_tmp, dy - dy_tmp);\n        this.lowerBound = Math.min(this.lowerBound, this.childC.lowerBound);\n        this.upperBound = Math.max(this.upperBound, this.childC.upperBound);\n      }\n    }\n\n    if (dy - dy_tmp > 0) {\n      this.childD = new TreeNode(data, x, y + dy_tmp, dx_tmp, dy - dy_tmp);\n      this.lowerBound = Math.min(this.lowerBound, this.childD.lowerBound);\n      this.upperBound = Math.max(this.upperBound, this.childD.upperBound);\n    }\n  }\n}\n\n\n/**\n *  Retrieve a list of cells within a particular range of values by\n *  recursivly traversing the quad tree to it's leaves.\n *\n *  @param  subsumed  If 'true' include all cells that are completely\n *                    subsumed within the specified range. Otherwise,\n *                    return only cells where at least one corner is\n *                    outside the specified range.\n *\n *  @return   An array of objects 'o' where each object has exactly two\n *            properties: 'o.x' and 'o.y' denoting the left-bottom corner\n *            of the corresponding cell.\n */\nTreeNode.prototype.cellsInBand = function(lowerBound, upperBound, subsumed) {\n  var cells = [];\n\n  subsumed = (typeof subsumed === 'undefined') ? true : subsumed;\n\n  if ((this.lowerBound > upperBound) || (this.upperBound < lowerBound))\n    return cells;\n\n  if (!(this.childA || this.childB || this.childC || this.childD)) {\n    if ((subsumed) ||\n        (this.lowerBound <= lowerBound) ||\n        (this.upperBound >= upperBound)) {\n      cells.push({\n        x: this.x,\n        y: this.y\n      });\n    }\n  } else {\n    if (this.childA)\n      cells = cells.concat(this.childA.cellsInBand(lowerBound, upperBound, subsumed));\n\n    if (this.childB)\n      cells = cells.concat(this.childB.cellsInBand(lowerBound, upperBound, subsumed));\n\n    if (this.childD)\n      cells = cells.concat(this.childD.cellsInBand(lowerBound, upperBound, subsumed));\n\n    if (this.childC)\n      cells = cells.concat(this.childC.cellsInBand(lowerBound, upperBound, subsumed));\n  }\n\n  return cells;\n};\n\n\nTreeNode.prototype.cellsBelowThreshold = function(threshold, subsumed) {\n  var cells = [];\n\n  subsumed = (typeof subsumed === 'undefined') ? true : subsumed;\n\n  if (this.lowerBound > threshold)\n    return cells;\n\n  if (!(this.childA || this.childB || this.childC || this.childD)) {\n    if ((subsumed) ||\n        (this.upperBound >= threshold)) {\n      cells.push({\n        x: this.x,\n        y: this.y\n      });\n    }\n  } else {\n    if (this.childA)\n      cells = cells.concat(this.childA.cellsBelowThreshold(threshold, subsumed));\n\n    if (this.childB)\n      cells = cells.concat(this.childB.cellsBelowThreshold(threshold, subsumed));\n\n    if (this.childD)\n      cells = cells.concat(this.childD.cellsBelowThreshold(threshold, subsumed));\n\n    if (this.childC)\n      cells = cells.concat(this.childC.cellsBelowThreshold(threshold, subsumed));\n  }\n\n  return cells;\n};\n\n\n/*\n * Given a scalar field `data` construct a QuadTree\n * to efficiently lookup those parts of the scalar\n * field where values are within a particular\n * range of [lowerbound, upperbound] limits.\n */\nfunction QuadTree(data) {\n  var i, cols;\n\n  /* do some input checking */\n  if (!data)\n    throw new Error('data is required');\n\n  if (!Array.isArray(data) ||\n      !Array.isArray(data[0]))\n    throw new Error('data must be scalar field, i.e. array of arrays');\n\n  if (data.length < 2)\n    throw new Error('data must contain at least two rows');\n\n  /* check if we've got a regular grid */\n  cols = data[0].length;\n\n  if (cols < 2)\n    throw new Error('data must contain at least two columns');\n\n  for (i = 1; i < data.length; i++) {\n    if (!Array.isArray(data[i]))\n      throw new Error('Row ' + i + ' is not an array');\n\n    if (data[i].length != cols)\n      throw new Error('unequal row lengths detected, please provide a regular grid');\n  }\n\n  /* create pre-processing object */\n  this.data = data;\n  /* root node, i.e. entry to the data */\n  this.root = new TreeNode(data, 0, 0, data[0].length - 1, data.length - 1);\n}\n\n/* eslint no-console: [\"error\", { allow: [\"log\"] }] */\n\n\n/*\n * Compute the iso lines for a scalar 2D field given\n * a certain threshold by applying the Marching Squares\n * Algorithm. The function returns a list of path coordinates\n */\n\nfunction isoLines(input, threshold, options) {\n  var settings,\n    i,\n    j,\n    useQuadTree   = false,\n    multiLine     = false,\n    tree          = null,\n    root          = null,\n    data          = null,\n    cellGrid      = null,\n    linePolygons  = null,\n    ret           = [];\n\n  /* validation */\n  if (!input) throw new Error('data is required');\n  if (threshold === undefined || threshold === null) throw new Error('threshold is required');\n  if ((!!options) && (typeof options !== 'object')) throw new Error('options must be an object');\n\n  /* process options */\n  settings = isoLineOptions(options);\n\n  /* check for input data */\n  if (input instanceof QuadTree) {\n    tree = input;\n    root = input.root;\n    data = input.data;\n    if (!settings.noQuadTree)\n      useQuadTree = true;\n  } else if (Array.isArray(input) && Array.isArray(input[0])) {\n    data = input;\n  } else {\n    throw new Error('input is neither array of arrays nor object retrieved from \\'QuadTree()\\'');\n  }\n\n  /* check and prepare input threshold(s) */\n  if (Array.isArray(threshold)) {\n    multiLine = true;\n\n    /* activate QuadTree optimization if not explicitly forbidden by user settings */\n    if (!settings.noQuadTree)\n      useQuadTree = true;\n\n    /* check if all minV are numbers */\n    for (i = 0; i < threshold.length; i++)\n      if (isNaN(+threshold[i]))\n        throw new Error('threshold[' + i + '] is not a number');\n  } else {\n    if (isNaN(+threshold))\n      throw new Error('threshold must be a number or array of numbers');\n\n    threshold = [ threshold ];\n  }\n\n  /* create QuadTree root node if not already present */\n  if ((useQuadTree) && (!root)) {\n    tree = new QuadTree(data);\n    root = tree.root;\n    data = tree.data;\n  }\n\n  if (settings.verbose) {\n    if(settings.polygons)\n      console.log('MarchingSquaresJS-isoLines: returning single lines (polygons) for each grid cell');\n    else\n      console.log('MarchingSquaresJS-isoLines: returning line paths (polygons) for entire data grid');\n\n    if (multiLine)\n      console.log('MarchingSquaresJS-isoLines: multiple lines requested, returning array of line paths instead of lines for a single threshold');\n  }\n\n  /* Done with all input validation, now let's start computing stuff */\n\n  /* loop over all threhsold values */\n  threshold.forEach(function(t, i) {\n    linePolygons = [];\n\n    /* store bounds for current computation in settings object */\n    settings.threshold = t;\n\n    if(settings.verbose)\n      console.log('MarchingSquaresJS-isoLines: computing iso lines for threshold ' + t);\n\n    if (settings.polygons) {\n      /* compose list of polygons for each single cell */\n      if (useQuadTree) {\n        /* go through list of cells retrieved from QuadTree */\n        root\n          .cellsBelowThreshold(settings.threshold, true)\n          .forEach(function(c) {\n            linePolygons  = linePolygons.concat(\n              cell2Polygons(\n                prepareCell(data,\n                  c.x,\n                  c.y,\n                  settings),\n                c.x,\n                c.y,\n                settings\n              ));\n          });\n      } else {\n        /* go through entire array of input data */\n        for (j = 0; j < data.length - 1; ++j) {\n          for (i = 0; i < data[0].length - 1; ++i)\n            linePolygons  = linePolygons.concat(\n              cell2Polygons(\n                prepareCell(data,\n                  i,\n                  j,\n                  settings),\n                i,\n                j,\n                settings\n              ));\n        }\n      }\n    } else {\n      /* sparse grid of input data cells */\n      cellGrid = [];\n      for (i = 0; i < data[0].length - 1; ++i)\n        cellGrid[i] = [];\n\n      /* compose list of polygons for entire input grid */\n      if (useQuadTree) {\n        /* collect the cells */\n        root\n          .cellsBelowThreshold(settings.threshold, false)\n          .forEach(function(c) {\n            cellGrid[c.x][c.y] = prepareCell(data,\n              c.x,\n              c.y,\n              settings);\n          });\n      } else {\n        /* prepare cells */\n        for (i = 0; i < data[0].length - 1; ++i) {\n          for (j = 0; j < data.length - 1; ++j) {\n            cellGrid[i][j]  = prepareCell(data,\n              i,\n              j,\n              settings);\n          }\n        }\n      }\n\n      linePolygons = traceLinePaths(data, cellGrid, settings);\n    }\n\n    /* finally, add polygons to output array */\n    if (multiLine)\n      ret.push(linePolygons);\n    else\n      ret = linePolygons;\n\n    if(typeof settings.successCallback === 'function')\n      settings.successCallback(ret, t);\n\n  });\n\n  return ret;\n}\n\n/*\n * Thats all for the public interface, below follows the actual\n * implementation\n */\n\n/*\n * ################################\n * Isocontour implementation below\n * ################################\n */\n\nfunction prepareCell(grid, x, y, settings) {\n  var left,\n    right,\n    top,\n    bottom,\n    average,\n    cell;\n\n  var cval      = 0;\n  var x3        = grid[y + 1][x];\n  var x2        = grid[y + 1][x + 1];\n  var x1        = grid[y][x + 1];\n  var x0        = grid[y][x];\n  var threshold = settings.threshold;\n\n  /*\n   * Note that missing data within the grid will result\n   * in horribly failing to trace full polygon paths\n   */\n  if(isNaN(x0) || isNaN(x1) || isNaN(x2) || isNaN(x3)) {\n    return;\n  }\n\n  /*\n   * Here we detect the type of the cell\n   *\n   * x3 ---- x2\n   * |      |\n   * |      |\n   * x0 ---- x1\n   *\n   * with edge points\n   *\n   * x0 = (x,y),\n   * x1 = (x + 1, y),\n   * x2 = (x + 1, y + 1), and\n   * x3 = (x, y + 1)\n   *\n   * and compute the polygon intersections with the edges\n   * of the cell. Each edge value may be (i) smaller, or (ii)\n   * greater or equal to the iso line threshold. We encode\n   * this property using 1 bit of information, where\n   *\n   * 0 ... below,\n   * 1 ... above or equal\n   *\n   * Then we store the cells value as vector\n   *\n   * cval = (x0, x1, x2, x3)\n   *\n   * where x0 is the least significant bit (0th),\n   * x1 the 2nd bit, and so on. This essentially\n   * enables us to work with a single integer number\n   */\n\n  cval |= ((x3 >= threshold) ? 8 : 0);\n  cval |= ((x2 >= threshold) ? 4 : 0);\n  cval |= ((x1 >= threshold) ? 2 : 0);\n  cval |= ((x0 >= threshold) ? 1 : 0);\n\n  /* make sure cval is a number */\n  cval = +cval;\n\n  /* compose the cell object */\n  cell = {\n    cval:         cval,\n    polygons:     [],\n    edges:        {},\n    x0:           x0,\n    x1:           x1,\n    x2:           x2,\n    x3:           x3\n  };\n\n  /*\n   * Compute interpolated intersections of the polygon(s)\n   * with the cell borders and (i) add edges for polygon\n   * trace-back, or (ii) a list of small closed polygons\n   */\n  switch (cval) {\n  case 0:\n    if (settings.polygons)\n      cell.polygons.push([ [0, 0], [0, 1], [1, 1], [1, 0] ]);\n\n    break;\n\n  case 15:\n    /* cell is outside (above) threshold, no polygons */\n    break;\n\n  case 14: /* 1110 */\n    left    = settings.interpolate(x0, x3, threshold);\n    bottom  = settings.interpolate(x0, x1, threshold);\n\n    if (settings.polygons_full) {\n      cell.edges.left = {\n        path: [ [0, left], [bottom, 0] ],\n        move: {\n          x:      0,\n          y:      -1,\n          enter:  'top'\n        }\n      };\n    }\n\n    if (settings.polygons)\n      cell.polygons.push([ [0, 0], [0, left], [bottom, 0] ]);\n\n    break;\n\n  case 13: /* 1101 */\n    bottom  = settings.interpolate(x0, x1, threshold);\n    right   = settings.interpolate(x1, x2, threshold);\n\n    if (settings.polygons_full) {\n      cell.edges.bottom = {\n        path: [ [bottom, 0], [1, right] ],\n        move: {\n          x:      1,\n          y:      0,\n          enter:  'left'\n        }\n      };\n    }\n\n    if (settings.polygons)\n      cell.polygons.push([ [bottom, 0], [1, right], [1, 0] ]);\n\n    break;\n\n  case 11: /* 1011 */\n    right = settings.interpolate(x1, x2, threshold);\n    top   = settings.interpolate(x3, x2, threshold);\n\n    if (settings.polygons_full) {\n      cell.edges.right = {\n        path: [ [1, right], [top, 1] ],\n        move: {\n          x:      0,\n          y:      1,\n          enter:  'bottom'\n        }\n      };\n    }\n\n    if (settings.polygons)\n      cell.polygons.push([ [1, right], [top, 1], [1, 1] ]);\n\n    break;\n\n  case 7: /* 0111 */\n    left  = settings.interpolate(x0, x3, threshold);\n    top   = settings.interpolate(x3, x2, threshold);\n\n    if (settings.polygons_full) {\n      cell.edges.top = {\n        path: [ [top, 1], [0, left] ],\n        move: {\n          x:      -1,\n          y:      0,\n          enter:  'right'\n        }\n      };\n    }\n\n    if (settings.polygons)\n      cell.polygons.push([ [top, 1], [0, left], [0, 1] ]);\n\n    break;\n\n  case 1: /* 0001 */\n    left    = settings.interpolate(x0, x3, threshold);\n    bottom  = settings.interpolate(x0, x1, threshold);\n\n    if (settings.polygons_full) {\n      cell.edges.bottom = {\n        path: [ [bottom, 0], [0, left] ],\n        move: {\n          x:      -1,\n          y:      0,\n          enter:  'right'\n        }\n      };\n    }\n\n    if (settings.polygons)\n      cell.polygons.push([ [bottom, 0], [0, left], [0, 1], [1, 1], [1, 0] ]);\n\n    break;\n\n  case 2: /* 0010 */\n    bottom  = settings.interpolate(x0, x1, threshold);\n    right   = settings.interpolate(x1, x2, threshold);\n\n    if (settings.polygons_full) {\n      cell.edges.right = {\n        path: [ [1, right], [bottom, 0] ],\n        move: {\n          x:      0,\n          y:      -1,\n          enter:  'top'\n        }\n      };\n    }\n\n    if (settings.polygons)\n      cell.polygons.push([ [0, 0], [0, 1], [1, 1], [1, right], [bottom, 0] ]);\n\n    break;\n\n  case 4: /* 0100 */\n    right = settings.interpolate(x1, x2, threshold);\n    top   = settings.interpolate(x3, x2, threshold);\n\n    if (settings.polygons_full) {\n      cell.edges.top = {\n        path: [ [top, 1], [1, right] ],\n        move: {\n          x:      1,\n          y:      0,\n          enter:  'left'\n        }\n      };\n    }\n\n    if (settings.polygons)\n      cell.polygons.push([ [0, 0], [0, 1], [top, 1], [1, right], [1, 0] ]);\n\n    break;\n\n  case 8: /* 1000 */\n    left  = settings.interpolate(x0, x3, threshold);\n    top   = settings.interpolate(x3, x2, threshold);\n\n    if (settings.polygons_full) {\n      cell.edges.left = {\n        path: [ [0, left], [top, 1] ],\n        move: {\n          x:      0,\n          y:      1,\n          enter:  'bottom'\n        }\n      };\n    }\n\n    if (settings.polygons)\n      cell.polygons.push([ [0, 0], [0, left], [top, 1], [1, 1], [1, 0] ]);\n\n    break;\n\n  case 12: /* 1100 */\n    left  = settings.interpolate(x0, x3, threshold);\n    right = settings.interpolate(x1, x2, threshold);\n\n    if (settings.polygons_full) {\n      cell.edges.left = {\n        path: [ [0, left], [1, right] ],\n        move: {\n          x:      1,\n          y:      0,\n          enter:  'left'\n        }\n      };\n    }\n\n    if (settings.polygons)\n      cell.polygons.push([ [0, 0], [0, left], [1, right], [1, 0] ]);\n\n    break;\n\n  case 9: /* 1001 */\n    bottom  = settings.interpolate(x0, x1, threshold);\n    top     = settings.interpolate(x3, x2, threshold);\n\n    if (settings.polygons_full) {\n      cell.edges.bottom = {\n        path: [ [bottom, 0], [top, 1] ],\n        move: {\n          x:      0,\n          y:      1,\n          enter:  'bottom'\n        }\n      };\n    }\n\n    if (settings.polygons)\n      cell.polygons.push([ [bottom, 0], [top, 1], [1, 1], [1, 0] ]);\n\n    break;\n\n  case 3: /* 0011 */\n    left  = settings.interpolate(x0, x3, threshold);\n    right = settings.interpolate(x1, x2, threshold);\n\n    if (settings.polygons_full) {\n      cell.edges.right = {\n        path: [ [1, right], [0, left] ],\n        move: {\n          x:      -1,\n          y:      0,\n          enter:  'right'\n        }\n      };\n    }\n\n    if (settings.polygons)\n      cell.polygons.push([ [0, left], [0, 1], [1, 1], [1, right] ]);\n\n    break;\n\n  case 6: /* 0110 */\n    bottom  = settings.interpolate(x0, x1, threshold);\n    top     = settings.interpolate(x3, x2, threshold);\n\n    if (settings.polygons_full) {\n      cell.edges.top = {\n        path: [ [top, 1], [bottom, 0] ],\n        move: {\n          x:      0,\n          y:      -1,\n          enter:  'top'\n        }\n      };\n    }\n\n    if (settings.polygons)\n      cell.polygons.push([ [0, 0], [0, 1], [top, 1], [bottom, 0] ]);\n\n    break;\n\n  case 10: /* 1010 */\n    left    = settings.interpolate(x0, x3, threshold);\n    right   = settings.interpolate(x1, x2, threshold);\n    bottom  = settings.interpolate(x0, x1, threshold);\n    top     = settings.interpolate(x3, x2, threshold);\n    average = (x0 + x1 + x2 + x3) / 4;\n\n    if (settings.polygons_full) {\n      if (average < threshold) {\n        cell.edges.left = {\n          path: [ [0, left], [top, 1] ],\n          move: {\n            x:      0,\n            y:      1,\n            enter:  'bottom'\n          }\n        };\n        cell.edges.right = {\n          path: [ [1, right], [bottom, 0] ],\n          move: {\n            x:      0,\n            y:      -1,\n            enter:  'top'\n          }\n        };\n      } else {\n        cell.edges.right = {\n          path: [ [1, right], [top, 1] ],\n          move: {\n            x:      0,\n            y:      1,\n            enter:  'bottom'\n          }\n        };\n        cell.edges.left = {\n          path: [ [0, left], [bottom, 0] ],\n          move: {\n            x:      0,\n            y:      -1,\n            enter:  'top'\n          }\n        };\n      }\n    }\n\n    if (settings.polygons) {\n      if (average < threshold) {\n        cell.polygons.push([ [0, 0], [0, left], [top, 1], [1, 1], [1, right], [bottom, 0] ]);\n      } else {\n        cell.polygons.push([ [0, 0], [0, left], [bottom, 0] ]);\n        cell.polygons.push([ [top, 1], [1, 1], [1, right] ]);\n      }\n    }\n\n    break;\n\n  case 5: /* 0101 */\n    left    = settings.interpolate(x0, x3, threshold);\n    right   = settings.interpolate(x1, x2, threshold);\n    bottom  = settings.interpolate(x0, x1, threshold);\n    top     = settings.interpolate(x3, x2, threshold);\n    average = (x0 + x1 + x2 + x3) / 4;\n\n    if (settings.polygons_full) {\n      if (average < threshold) {\n        cell.edges.bottom = {\n          path: [ [bottom, 0], [0, left] ],\n          move: {\n            x:      -1,\n            y:      0,\n            enter:  'right'\n          }\n        };\n        cell.edges.top = {\n          path: [ [top, 1], [1, right] ],\n          move: {\n            x:      1,\n            y:      0,\n            enter:  'left'\n          }\n        };\n      } else {\n        cell.edges.top = {\n          path: [ [top, 1], [0, left] ],\n          move: {\n            x:      -1,\n            y:      0,\n            enter:  'right'\n          }\n        };\n        cell.edges.bottom = {\n          path: [ [bottom, 0], [1, right] ],\n          move: {\n            x:      1,\n            y:      0,\n            enter:  'left'\n          }\n        };\n      }\n    }\n\n    if (settings.polygons) {\n      if (average < threshold) {\n        cell.polygons.push([ [0, left], [0, 1], [top, 1], [1, right], [1, 0], [bottom, 0] ]);\n      } else {\n        cell.polygons.push([ [0, left], [0, 1], [top, 1] ]);\n        cell.polygons.push([ [bottom, 0], [1, right], [1, 0] ]);\n      }\n    }\n\n    break;\n  }\n\n  return cell;\n}\n\n/* eslint no-console: [\"error\", { allow: [\"log\"] }] */\n\n\n/*\n * lookup table to generate polygon paths or edges required to\n * trace the full polygon(s)\n */\nvar shapeCoordinates = {\n  square:       function(cell, x0, x1, x2, x3, opt) {\n    if (opt.polygons)\n      cell.polygons.push([ [0,0], [0, 1], [1, 1], [1, 0] ]);\n  },\n\n  triangle_bl:  function(cell, x0, x1, x2, x3, opt) {\n    var bottomleft = opt.interpolate(x0, x1, opt.minV, opt.maxV);\n    var leftbottom = opt.interpolate(x0, x3, opt.minV, opt.maxV);\n\n    if (opt.polygons_full) {\n      cell.edges.lb = {\n        path: [ [0, leftbottom], [bottomleft, 0] ],\n        move: {\n          x:      0,\n          y:      -1,\n          enter:  'tl'\n        }\n      };\n    }\n\n    if (opt.polygons)\n      cell.polygons.push([ [0, leftbottom], [bottomleft, 0], [0, 0] ]);\n  },\n\n  triangle_br:  function(cell, x0, x1, x2, x3, opt) {\n    var bottomright = opt.interpolate(x0, x1, opt.minV, opt.maxV);\n    var rightbottom = opt.interpolate(x1, x2, opt.minV, opt.maxV);\n\n    if (opt.polygons_full) {\n      cell.edges.br = {\n        path: [ [bottomright, 0], [1, rightbottom] ],\n        move: {\n          x:      1,\n          y:      0,\n          enter:  'lb'\n        }\n      };\n    }\n\n    if (opt.polygons)\n      cell.polygons.push([ [bottomright, 0], [1, rightbottom], [1, 0] ]);\n  },\n\n  triangle_tr:  function(cell, x0, x1, x2, x3, opt) {\n    var righttop = opt.interpolate(x1, x2, opt.minV, opt.maxV);\n    var topright = opt.interpolate(x3, x2, opt.minV, opt.maxV);\n\n    if (opt.polygons_full) {\n      cell.edges.rt = {\n        path: [ [1, righttop], [topright, 1] ],\n        move: {\n          x:      0,\n          y:      1,\n          enter:  'br'\n        }\n      };\n    }\n\n    if (opt.polygons)\n      cell.polygons.push([ [1, righttop], [topright, 1], [1, 1] ]);\n  },\n\n  triangle_tl:  function(cell, x0, x1, x2, x3, opt) {\n    var topleft = opt.interpolate(x3, x2, opt.minV, opt.maxV);\n    var lefttop = opt.interpolate(x0, x3, opt.minV, opt.maxV);\n\n    if (opt.polygons_full) {\n      cell.edges.tl = {\n        path: [ [topleft, 1], [0, lefttop] ],\n        move: {\n          x:      -1,\n          y:      0,\n          enter:  'rt'\n        }\n      };\n    }\n\n    if (opt.polygons)\n      cell.polygons.push([ [0, lefttop], [0, 1], [topleft, 1] ]);\n  },\n\n  tetragon_t:   function(cell, x0, x1, x2, x3, opt) {\n    var righttop  = opt.interpolate(x1, x2, opt.minV, opt.maxV);\n    var lefttop   = opt.interpolate(x0, x3, opt.minV, opt.maxV);\n\n    if (opt.polygons_full) {\n      cell.edges.rt = {\n        path: [ [1, righttop], [0, lefttop] ],\n        move: {\n          x:      -1,\n          y:      0,\n          enter:  'rt'\n        }\n      };\n    }\n\n    if (opt.polygons)\n      cell.polygons.push([ [0, lefttop], [0, 1], [1, 1], [1, righttop] ]);\n  },\n\n  tetragon_r:   function(cell, x0, x1, x2, x3, opt) {\n    var bottomright = opt.interpolate(x0, x1, opt.minV, opt.maxV);\n    var topright    = opt.interpolate(x3, x2, opt.minV, opt.maxV);\n    if (opt.polygons_full) {\n      cell.edges.br = {\n        path: [ [bottomright, 0], [topright, 1] ],\n        move: {\n          x:      0,\n          y:      1,\n          enter:  'br'\n        }\n      };\n    }\n\n    if (opt.polygons)\n      cell.polygons.push([ [bottomright, 0], [topright, 1], [1, 1], [1, 0] ]);\n  },\n\n  tetragon_b:   function(cell, x0, x1, x2, x3, opt) {\n    var leftbottom  = opt.interpolate(x0, x3, opt.minV, opt.maxV);\n    var rightbottom = opt.interpolate(x1, x2, opt.minV, opt.maxV);\n\n    if (opt.polygons_full) {\n      cell.edges.lb = {\n        path: [ [0, leftbottom], [1, rightbottom] ],\n        move: {\n          x:      1,\n          y:      0,\n          enter:  'lb'\n        }\n      };\n    }\n\n    if (opt.polygons)\n      cell.polygons.push([ [0, 0], [0, leftbottom], [1, rightbottom], [1, 0] ]);\n  },\n\n  tetragon_l:   function(cell, x0, x1, x2, x3, opt) {\n    var topleft     = opt.interpolate(x3, x2, opt.minV, opt.maxV);\n    var bottomleft  = opt.interpolate(x0, x1, opt.minV, opt.maxV);\n\n    if (opt.polygons_full) {\n      cell.edges.tl = {\n        path: [ [topleft, 1], [bottomleft, 0] ],\n        move: {\n          x:      0,\n          y:      -1,\n          enter:  'tl'\n        }\n      };\n    }\n\n    if (opt.polygons)\n      cell.polygons.push([ [0, 0], [0, 1], [topleft, 1], [bottomleft, 0] ]);\n  },\n\n  tetragon_bl:  function(cell, x0, x1, x2, x3, opt) {\n    var bottomleft  = opt.interpolate_a(x0, x1, opt.minV, opt.maxV);\n    var bottomright = opt.interpolate_b(x0, x1, opt.minV, opt.maxV);\n    var leftbottom  = opt.interpolate_a(x0, x3, opt.minV, opt.maxV);\n    var lefttop     = opt.interpolate_b(x0, x3, opt.minV, opt.maxV);\n\n    if (opt.polygons_full) {\n      cell.edges.bl = {\n        path: [ [bottomleft, 0], [0, leftbottom] ],\n        move: {\n          x:      -1,\n          y:      0,\n          enter:  'rb'\n        }\n      };\n      cell.edges.lt = {\n        path: [ [0, lefttop], [bottomright, 0] ],\n        move: {\n          x:      0,\n          y:      -1,\n          enter:  'tr'\n        }\n      };\n    }\n\n    if (opt.polygons)\n      cell.polygons.push([ [bottomleft, 0], [0, leftbottom], [0, lefttop], [bottomright, 0] ]);\n  },\n\n  tetragon_br:  function(cell, x0, x1, x2, x3, opt) {\n    var bottomleft  = opt.interpolate_a(x0, x1, opt.minV, opt.maxV);\n    var bottomright = opt.interpolate_b(x0, x1, opt.minV, opt.maxV);\n    var rightbottom = opt.interpolate_a(x1, x2, opt.minV, opt.maxV);\n    var righttop    = opt.interpolate_b(x1, x2, opt.minV, opt.maxV);\n\n    if (opt.polygons_full) {\n      cell.edges.bl = {\n        path: [ [bottomleft, 0], [1, righttop] ],\n        move: {\n          x: 1,\n          y: 0,\n          enter: 'lt'\n        }\n      };\n      cell.edges.rb = {\n        path: [ [1, rightbottom], [bottomright, 0] ],\n        move: {\n          x: 0,\n          y: -1,\n          enter: 'tr'\n        }\n      };\n    }\n\n    if (opt.polygons)\n      cell.polygons.push([ [bottomleft, 0], [1, righttop], [1, rightbottom], [bottomright, 0] ]);\n  },\n\n  tetragon_tr:  function(cell, x0, x1, x2, x3, opt) {\n    var topleft     = opt.interpolate_a(x3, x2, opt.minV, opt.maxV);\n    var topright    = opt.interpolate_b(x3, x2, opt.minV, opt.maxV);\n    var righttop    = opt.interpolate_b(x1, x2, opt.minV, opt.maxV);\n    var rightbottom = opt.interpolate_a(x1, x2, opt.minV, opt.maxV);\n\n    if (opt.polygons_full) {\n      cell.edges.rb = {\n        path: [ [1, rightbottom], [topleft, 1] ],\n        move: {\n          x: 0,\n          y: 1,\n          enter: 'bl'\n        }\n      };\n      cell.edges.tr = {\n        path: [ [topright, 1], [1, righttop] ],\n        move: {\n          x: 1,\n          y: 0,\n          enter: 'lt'\n        }\n      };\n    }\n\n    if (opt.polygons)\n      cell.polygons.push([ [1, rightbottom], [topleft, 1], [topright, 1], [1, righttop] ]);\n  },\n\n  tetragon_tl:  function(cell, x0, x1, x2, x3, opt) {\n    var topleft     = opt.interpolate_a(x3, x2, opt.minV, opt.maxV);\n    var topright    = opt.interpolate_b(x3, x2, opt.minV, opt.maxV);\n    var lefttop     = opt.interpolate_b(x0, x3, opt.minV, opt.maxV);\n    var leftbottom  = opt.interpolate_a(x0, x3, opt.minV, opt.maxV);\n\n    if (opt.polygons_full) {\n      cell.edges.tr = {\n        path: [ [topright, 1], [0, leftbottom] ],\n        move: {\n          x:      -1,\n          y:      0,\n          enter:  'rb'\n        }\n      };\n      cell.edges.lt = {\n        path: [ [0, lefttop], [topleft, 1] ],\n        move: {\n          x:      0,\n          y:      1,\n          enter:  'bl'\n        }\n      };\n    }\n\n    if (opt.polygons)\n      cell.polygons.push([ [topright, 1], [0, leftbottom], [0, lefttop], [topleft, 1] ]);\n  },\n\n  tetragon_lr:  function(cell, x0, x1, x2, x3, opt) {\n    var leftbottom  = opt.interpolate_a(x0, x3, opt.minV, opt.maxV);\n    var lefttop     = opt.interpolate_b(x0, x3, opt.minV, opt.maxV);\n    var righttop    = opt.interpolate_b(x1, x2, opt.minV, opt.maxV);\n    var rightbottom = opt.interpolate_a(x1, x2, opt.minV, opt.maxV);\n\n    if (opt.polygons_full) {\n      cell.edges.lt = {\n        path: [ [0, lefttop], [1, righttop] ],\n        move: {\n          x:      1,\n          y:      0,\n          enter:  'lt'\n        }\n      };\n      cell.edges.rb = {\n        path: [ [1, rightbottom], [0, leftbottom] ],\n        move: {\n          x:      -1,\n          y:      0,\n          enter:  'rb'\n        }\n      };\n    }\n\n    if (opt.polygons)\n      cell.polygons.push([ [0, leftbottom], [0, lefttop], [1, righttop], [1, rightbottom] ]);\n  },\n\n  tetragon_tb:  function(cell, x0, x1, x2, x3, opt) {\n    var topleft     = opt.interpolate_a(x3, x2, opt.minV, opt.maxV);\n    var topright    = opt.interpolate_b(x3, x2, opt.minV, opt.maxV);\n    var bottomright = opt.interpolate_b(x0, x1, opt.minV, opt.maxV);\n    var bottomleft  = opt.interpolate_a(x0, x1, opt.minV, opt.maxV);\n\n    if (opt.polygons_full) {\n      cell.edges.tr =  {\n        path: [ [topright, 1], [bottomright, 0] ],\n        move: {\n          x:      0,\n          y:      -1,\n          enter:  'tr'\n        }\n      };\n      cell.edges.bl = {\n        path: [ [bottomleft, 0], [topleft, 1] ],\n        move: {\n          x:      0,\n          y:      1,\n          enter:  'bl'\n        }\n      };\n    }\n\n    if (opt.polygons)\n      cell.polygons.push([ [bottomleft, 0], [topleft, 1], [topright, 1], [bottomright, 0] ]);\n  },\n\n  pentagon_tr:  function(cell, x0, x1, x2, x3, opt) {\n    var topleft     = opt.interpolate(x3, x2, opt.minV, opt.maxV);\n    var rightbottom = opt.interpolate(x1, x2, opt.minV, opt.maxV);\n\n    if (opt.polygons_full) {\n      cell.edges.tl = {\n        path: [[topleft, 1], [1, rightbottom]],\n        move: {\n          x:      1,\n          y:      0,\n          enter:  'lb'\n        }\n      };\n    }\n\n    if (opt.polygons)\n      cell.polygons.push([ [0, 0], [0, 1], [topleft, 1], [1, rightbottom], [1, 0] ]);\n  },\n\n  pentagon_tl:  function(cell, x0, x1, x2, x3, opt) {\n    var leftbottom  = opt.interpolate(x0, x3, opt.minV, opt.maxV);\n    var topright    = opt.interpolate(x3, x2, opt.minV, opt.maxV);\n\n    if (opt.polygons_full) {\n      cell.edges.lb = {\n        path: [ [0, leftbottom], [topright, 1] ],\n        move: {\n          x:      0,\n          y:      1,\n          enter:  'br'\n        }\n      };\n    }\n\n    if (opt.polygons)\n      cell.polygons.push([ [0, 0], [0, leftbottom], [topright, 1], [1, 1], [1, 0] ]);\n  },\n\n  pentagon_br:  function(cell, x0, x1, x2, x3, opt) {\n    var bottomleft  = opt.interpolate(x0, x1, opt.minV, opt.maxV);\n    var righttop    = opt.interpolate(x1, x2, opt.minV, opt.maxV);\n\n    if (opt.polygons_full) {\n      cell.edges.rt = {\n        path: [ [1, righttop], [bottomleft, 0] ],\n        move: {\n          x:      0,\n          y:      -1,\n          enter:  'tl'\n        }\n      };\n    }\n    if (opt.polygons)\n      cell.polygons.push([ [0, 0], [0, 1], [1, 1], [1, righttop], [bottomleft, 0] ]);\n  },\n\n  pentagon_bl:  function(cell, x0, x1, x2, x3, opt) {\n    var lefttop     = opt.interpolate(x0, x3, opt.minV, opt.maxV);\n    var bottomright = opt.interpolate(x0, x1, opt.minV, opt.maxV);\n\n    if (opt.polygons_full) {\n      cell.edges.br = {\n        path: [ [bottomright, 0], [0, lefttop] ],\n        move: {\n          x:      -1,\n          y:      0,\n          enter:  'rt'\n        }\n      };\n    }\n\n    if (opt.polygons)\n      cell.polygons.push([ [0, lefttop], [0, 1], [1, 1], [1, 0], [bottomright, 0] ]);\n  },\n\n  pentagon_tr_rl: function(cell, x0, x1, x2, x3, opt) {\n    var lefttop     = opt.interpolate(x0, x3, opt.minV, opt.maxV);\n    var topleft     = opt.interpolate(x3, x2, opt.minV, opt.maxV);\n    var righttop    = opt.interpolate_b(x1, x2, opt.minV, opt.maxV);\n    var rightbottom = opt.interpolate_a(x1, x2, opt.minV, opt.maxV);\n\n    if (opt.polygons_full) {\n      cell.edges.tl = {\n        path: [ [topleft, 1], [1, righttop] ],\n        move: {\n          x:      1,\n          y:      0,\n          enter:  'lt'\n        }\n      };\n      cell.edges.rb = {\n        path: [ [1, rightbottom], [0, lefttop] ],\n        move: {\n          x:      -1,\n          y:      0,\n          enter:  'rt'\n        }\n      };\n    }\n\n    if (opt.polygons)\n      cell.polygons.push([ [0, lefttop], [0, 1], [topleft, 1], [1, righttop], [1, rightbottom] ]);\n  },\n\n  pentagon_rb_bt: function(cell, x0, x1, x2, x3, opt) {\n    var righttop    = opt.interpolate(x1, x2, opt.minV, opt.maxV);\n    var bottomright = opt.interpolate_b(x0, x1, opt.minV, opt.maxV);\n    var bottomleft  = opt.interpolate_a(x0, x1, opt.minV, opt.maxV);\n    var topright    = opt.interpolate(x3, x2, opt.minV, opt.maxV);\n\n    if (opt.polygons_full) {\n      cell.edges.rt = {\n        path: [ [1, righttop], [bottomright, 0] ],\n        move: {\n          x:      0,\n          y:      -1,\n          enter:  'tr'\n        }\n      };\n      cell.edges.bl = {\n        path: [ [bottomleft, 0], [topright, 1] ],\n        move: {\n          x:      0,\n          y:      1,\n          enter:  'br'\n        }\n      };\n    }\n\n    if (opt.polygons)\n      cell.polygons.push([ [topright, 1], [1, 1], [1, righttop], [bottomright, 0], [bottomleft, 0] ]);\n  },\n\n  pentagon_bl_lr: function(cell, x0, x1, x2, x3, opt) {\n    var bottomright = opt.interpolate(x0, x1, opt.minV, opt.maxV);\n    var leftbottom  = opt.interpolate_a(x0, x3, opt.minV, opt.maxV);\n    var lefttop     = opt.interpolate_b(x0, x3, opt.minV, opt.maxV);\n    var rightbottom = opt.interpolate(x1, x2, opt.minV, opt.maxV);\n\n    if (opt.polygons_full) {\n      cell.edges.br = {\n        path: [ [bottomright, 0], [0, leftbottom] ],\n        move: {\n          x:      -1,\n          y:      0,\n          enter:  'rb'\n        }\n      };\n      cell.edges.lt = {\n        path: [ [0, lefttop], [1, rightbottom] ],\n        move: {\n          x:      1,\n          y:      0,\n          enter:  'lb'\n        }\n      };\n    }\n\n    if (opt.polygons)\n      cell.polygons.push([ [bottomright, 0], [0, leftbottom], [0, lefttop], [1, rightbottom], [1, 0] ]);\n  },\n\n  pentagon_lt_tb: function(cell, x0, x1, x2, x3, opt) {\n    var leftbottom  = opt.interpolate(x0, x3, opt.minV, opt.maxV);\n    var topleft     = opt.interpolate_a(x3, x2, opt.minV, opt.maxV);\n    var topright    = opt.interpolate_b(x3, x2, opt.minV, opt.maxV);\n    var bottomleft  = opt.interpolate(x0, x1, opt.minV, opt.maxV);\n\n    if (opt.polygons_full) {\n      cell.edges.lb = {\n        path: [ [0, leftbottom], [topleft, 1] ],\n        move: {\n          x:      0,\n          y:      1,\n          enter:  'bl'\n        }\n      };\n      cell.edges.tr = {\n        path: [ [topright, 1], [bottomleft, 0] ],\n        move: {\n          x:      0,\n          y:      -1,\n          enter:  'tl'\n        }\n      };\n    }\n\n    if (opt.polygons)\n      cell.polygons.push([ [0, 0], [0, leftbottom], [topleft, 1], [topright, 1], [bottomleft, 0] ]);\n  },\n\n  pentagon_bl_tb: function(cell, x0, x1, x2, x3, opt) {\n    var lefttop     = opt.interpolate(x0, x3, opt.minV, opt.maxV);\n    var topleft     = opt.interpolate(x3, x2, opt.minV, opt.maxV);\n    var bottomright = opt.interpolate_b(x0, x1, opt.minV, opt.maxV);\n    var bottomleft  = opt.interpolate_a(x0, x1, opt.minV, opt.maxV);\n\n    if (opt.polygons_full) {\n      cell.edges.bl = {\n        path: [ [bottomleft, 0], [0, lefttop] ],\n        move: {\n          x:      -1,\n          y:      0,\n          enter:  'rt'\n        }\n      };\n      cell.edges.tl = {\n        path: [ [ topleft, 1], [bottomright, 0] ],\n        move: {\n          x:      0,\n          y:      -1,\n          enter:  'tr'\n        }\n      };\n    }\n\n    if (opt.polygons)\n      cell.polygons.push([ [0, lefttop], [0, 1], [topleft, 1], [bottomright, 0], [bottomleft, 0] ]);\n  },\n\n  pentagon_lt_rl: function(cell, x0, x1, x2, x3, opt) {\n    var leftbottom  = opt.interpolate_a(x0, x3, opt.minV, opt.maxV);\n    var lefttop     = opt.interpolate_b(x0, x3, opt.minV, opt.maxV);\n    var topright    = opt.interpolate(x3, x2, opt.minV, opt.maxV);\n    var righttop    = opt.interpolate(x1, x3, opt.minV, opt.maxV);\n\n    if (opt.polygons_full) {\n      cell.edges.lt = {\n        path: [ [0, lefttop], [topright, 1] ],\n        move: {\n          x:      0,\n          y:      1,\n          enter:  'br'\n        }\n      };\n      cell.edges.rt = {\n        path: [ [1, righttop], [0, leftbottom] ],\n        move: {\n          x:      -1,\n          y:      0,\n          enter:  'rb'\n        }\n      };\n    }\n\n    if (opt.polygons)\n      cell.polygons.push([ [0, leftbottom], [0, lefttop], [topright, 1], [1, 1], [1, righttop] ]);\n  },\n\n  pentagon_tr_bt: function(cell, x0, x1, x2, x3, opt) {\n    var topleft     = opt.interpolate_a(x3, x2, opt.minV, opt.maxV);\n    var topright    = opt.interpolate_b(x3, x2, opt.minV, opt.maxV);\n    var rightbottom = opt.interpolate(x1, x2, opt.minV, opt.maxV);\n    var bottomright = opt.interpolate(x0, x1, opt.minV, opt.maxV);\n\n    if (opt.polygons_full) {\n      cell.edges.br = {\n        path: [ [bottomright, 0], [topleft, 1] ],\n        move: {\n          x:      0,\n          y:      1,\n          enter:  'bl'\n        }\n      };\n      cell.edges.tr = {\n        path: [ [topright, 1], [1, rightbottom] ],\n        move: {\n          x:      1,\n          y:      0,\n          enter:  'lb'\n        }\n      };\n    }\n\n    if (opt.polygons)\n      cell.polygons.push([ [topleft, 1], [topright, 1], [1, rightbottom], [1, 0], [bottomright, 0] ]);\n  },\n\n  pentagon_rb_lr: function(cell, x0, x1, x2, x3, opt) {\n    var leftbottom  = opt.interpolate(x0, x3, opt.minV, opt.maxV);\n    var righttop    = opt.interpolate_b(x1, x2, opt.minV, opt.maxV);\n    var rightbottom = opt.interpolate_a(x1, x2, opt.minV, opt.maxV);\n    var bottomleft  = opt.interpolate(x0, x1, opt.minV, opt.maxV);\n\n    if (opt.polygons_full) {\n      cell.edges.lb = {\n        path: [ [0, leftbottom], [1, righttop] ],\n        move: {\n          x:      1,\n          y:      0,\n          enter:  'lt'\n        }\n      };\n      cell.edges.rb = {\n        path: [ [1, rightbottom], [bottomleft, 0] ],\n        move: {\n          x:      0,\n          y:      -1,\n          enter:  'tl'\n        }\n      };\n    }\n    if (opt.polygons)\n      cell.polygons.push([ [0, 0], [0, leftbottom], [1, righttop], [1, rightbottom], [bottomleft, 0] ]);\n  },\n\n  hexagon_lt_tr:  function(cell, x0, x1, x2, x3, opt) {\n    var leftbottom  = opt.interpolate(x0, x3, opt.minV, opt.maxV);\n    var topleft     = opt.interpolate_a(x3, x2, opt.minV, opt.maxV);\n    var topright    = opt.interpolate_b(x3, x2, opt.minV, opt.maxV);\n    var rightbottom = opt.interpolate(x1, x2, opt.minV, opt.maxV);\n\n    if (opt.polygons_full) {\n      cell.edges.lb = {\n        path: [ [0, leftbottom], [topleft, 1] ],\n        move: {\n          x:      0,\n          y:      1,\n          enter:  'bl'\n        }\n      };\n      cell.edges.tr = {\n        path: [ [topright, 1], [1, rightbottom] ],\n        move: {\n          x:      1,\n          y:      0,\n          enter:  'lb'\n        }\n      };\n    }\n\n    if (opt.polygons)\n      cell.polygons.push([ [0, 0], [0, leftbottom], [topleft, 1], [topright, 1], [1, rightbottom], [1, 0] ]);\n  },\n\n  hexagon_bl_lt:  function(cell, x0, x1, x2, x3, opt) {\n    var bottomright = opt.interpolate(x0, x1, opt.minV, opt.maxV);\n    var leftbottom  = opt.interpolate_a(x0, x3, opt.minV, opt.maxV);\n    var lefttop     = opt.interpolate_b(x0, x3, opt.minV, opt.maxV);\n    var topright    = opt.interpolate(x3, x2, opt.minV, opt.maxV);\n\n    if (opt.polygons_full) {\n      cell.edges.br = {\n        path: [ [bottomright, 0], [0, leftbottom] ],\n        move: {\n          x:      -1,\n          y:      0,\n          enter:  'rb'\n        }\n      };\n      cell.edges.lt = {\n        path: [ [0, lefttop], [topright, 1] ],\n        move: {\n          x:      0,\n          y:      1,\n          enter:  'br'\n        }\n      };\n    }\n\n    if (opt.polygons)\n      cell.polygons.push([ [bottomright, 0], [0, leftbottom], [0, lefttop], [topright, 1], [1, 1], [1, 0] ]);\n  },\n\n  hexagon_bl_rb:  function(cell, x0, x1, x2, x3, opt) {\n    var bottomleft  = opt.interpolate_a(x0, x1, opt.minV, opt.maxV);\n    var bottomright = opt.interpolate_b(x0, x1, opt.minV, opt.maxV);\n    var lefttop     = opt.interpolate(x0, x3, opt.minV, opt.maxV);\n    var righttop    = opt.interpolate(x1, x2, opt.minV, opt.maxV);\n\n    if (opt.polygons_full) {\n      cell.edges.bl = {\n        path: [ [bottomleft, 0], [0, lefttop] ],\n        move: {\n          x:      -1,\n          y:      0,\n          enter:  'rt'\n        }\n      };\n      cell.edges.rt = {\n        path: [ [1, righttop], [bottomright, 0] ],\n        move: {\n          x:      0,\n          y:      -1,\n          enter:  'tr'\n        }\n      };\n    }\n\n    if (opt.polygons)\n      cell.polygons.push([ [bottomleft, 0], [0, lefttop], [0, 1], [1, 1], [1, righttop], [bottomright, 0] ]);\n  },\n\n  hexagon_tr_rb:  function(cell, x0, x1, x2, x3, opt) {\n    var bottomleft  = opt.interpolate(x0, x1, opt.minV, opt.maxV);\n    var topleft     = opt.interpolate(x3, x2, opt.minV, opt.maxV);\n    var righttop    = opt.interpolate_b(x1, x2, opt.minV, opt.maxV);\n    var rightbottom = opt.interpolate_a(x1, x2, opt.minV, opt.maxV);\n\n    if (opt.polygons_full) {\n      cell.edges.tl = {\n        path: [ [topleft, 1], [1, righttop] ],\n        move: {\n          x:      1,\n          y:      0,\n          enter:  'lt'\n        }\n      };\n      cell.edges.rb = {\n        path: [ [1, rightbottom], [bottomleft, 0] ],\n        move: {\n          x:      0,\n          y:      -1,\n          enter:  'tl'\n        }\n      };\n    }\n\n    if (opt.polygons)\n      cell.polygons.push([ [0, 0], [0, 1], [topleft, 1], [1, righttop], [1, rightbottom], [bottomleft, 0] ]);\n  },\n\n  hexagon_lt_rb:  function(cell, x0, x1, x2, x3, opt) {\n    var leftbottom  = opt.interpolate(x0, x3, opt.minV, opt.maxV);\n    var topright    = opt.interpolate(x3, x2, opt.minV, opt.maxV);\n    var righttop    = opt.interpolate(x1, x2, opt.minV, opt.maxV);\n    var bottomleft  = opt.interpolate(x0, x1, opt.minV, opt.maxV);\n\n    if (opt.polygons_full) {\n      cell.edges.lb = {\n        path: [ [0, leftbottom], [topright, 1] ],\n        move: {\n          x:      0,\n          y:      1,\n          enter:  'br'\n        }\n      };\n      cell.edges.rt = {\n        path: [ [1, righttop], [bottomleft, 0] ],\n        move: {\n          x:      0,\n          y:      -1,\n          enter:  'tl'\n        }\n      };\n    }\n\n    if (opt.polygons)\n      cell.polygons.push([ [0, 0], [0, leftbottom], [topright, 1], [1, 1], [1, righttop], [bottomleft, 0] ]);\n  },\n\n  hexagon_bl_tr:  function(cell, x0, x1, x2, x3, opt) {\n    var bottomright = opt.interpolate(x0, x1, opt.minV, opt.maxV);\n    var lefttop     = opt.interpolate(x0, x3, opt.minV, opt.maxV);\n    var topleft     = opt.interpolate(x3, x2, opt.minV, opt.maxV);\n    var rightbottom = opt.interpolate(x1, x2, opt.minV, opt.maxV);\n\n    if (opt.polygons_full) {\n      cell.edges.br = {\n        path: [ [bottomright, 0], [0, lefttop] ],\n        move: {\n          x:      -1,\n          y:      0,\n          enter:  'rt'\n        }\n      };\n      cell.edges.tl = {\n        path: [ [topleft, 1], [1, rightbottom] ],\n        move: {\n          x:      1,\n          y:      0,\n          enter:  'lb'\n        }\n      };\n    }\n\n    if (opt.polygons)\n      cell.polygons.push([ [bottomright, 0], [0, lefttop], [0, 1], [topleft, 1], [1, rightbottom], [1, 0] ]);\n  },\n\n  heptagon_tr:    function(cell, x0, x1, x2, x3, opt) {\n    var bottomleft  = opt.interpolate_a(x0, x1, opt.minV, opt.maxV);\n    var bottomright = opt.interpolate_b(x0, x1, opt.minV, opt.maxV);\n    var leftbottom  = opt.interpolate_a(x0, x3, opt.minV, opt.maxV);\n    var lefttop     = opt.interpolate_b(x0, x3, opt.minV, opt.maxV);\n    var topright    = opt.interpolate(x3, x2, opt.minV, opt.maxV);\n    var righttop    = opt.interpolate(x1, x2, opt.minV, opt.maxV);\n\n    if (opt.polygons_full) {\n      cell.edges.bl = {\n        path: [ [bottomleft, 0], [0, leftbottom] ],\n        move: {\n          x:      -1,\n          y:      0,\n          enter:  'rb'\n        }\n      };\n      cell.edges.lt = {\n        path: [ [0, lefttop], [topright, 1] ],\n        move: {\n          x:      0,\n          y:      1,\n          enter:  'br'\n        }\n      };\n      cell.edges.rt = {\n        path: [ [1, righttop], [bottomright, 0] ],\n        move: {\n          x:      0,\n          y:      -1,\n          enter:  'tr'\n        }\n      };\n    }\n\n    if (opt.polygons)\n      cell.polygons.push([ [bottomleft, 0], [0, leftbottom], [0, lefttop], [topright, 1], [1, 1], [1, righttop], [bottomright, 0] ]);\n  },\n\n  heptagon_bl:    function(cell, x0, x1, x2, x3, opt) {\n    var bottomleft  = opt.interpolate(x0, x1, opt.minV, opt.maxV);\n    var leftbottom  = opt.interpolate(x0, x3, opt.minV, opt.maxV);\n    var topleft     = opt.interpolate_a(x3, x2, opt.minV, opt.maxV);\n    var topright    = opt.interpolate_b(x3, x2, opt.minV, opt.maxV);\n    var righttop    = opt.interpolate_b(x1, x2, opt.minV, opt.maxV);\n    var rightbottom = opt.interpolate_a(x1, x2, opt.minV, opt.maxV);\n\n    if (opt.polygons_full) {\n      cell.edges.lb = {\n        path: [ [0, leftbottom], [topleft, 1] ],\n        move: {\n          x:      0,\n          y:      1,\n          enter:  'bl'\n        }\n      };\n      cell.edges.tr = {\n        path: [ [topright, 1], [1, righttop] ],\n        move: {\n          x:      1,\n          y:      0,\n          enter:  'lt'\n        }\n      };\n      cell.edges.rb = {\n        path: [ [1, rightbottom], [bottomleft, 0] ],\n        move: {\n          x:      0,\n          y:      -1,\n          enter:  'tl'\n        }\n      };\n    }\n\n    if (opt.polygons)\n      cell.polygons.push([ [0, 0], [0, leftbottom], [topleft, 1], [topright, 1], [1, righttop], [1, rightbottom], [bottomleft, 0] ]);\n  },\n\n  heptagon_tl:    function(cell, x0, x1, x2, x3, opt) {\n    var bottomleft  = opt.interpolate_a(x0, x1, opt.minV, opt.maxV);\n    var bottomright = opt.interpolate_b(x0, x1, opt.minV, opt.maxV);\n    var lefttop     = opt.interpolate(x0, x3, opt.minV, opt.maxV);\n    var topleft     = opt.interpolate(x3, x2, opt.minV, opt.maxV);\n    var righttop    = opt.interpolate_b(x1, x2, opt.minV, opt.maxV);\n    var rightbottom = opt.interpolate_a(x1, x2, opt.minV, opt.maxV);\n\n    if (opt.polygons_full) {\n      cell.edges.bl = {\n        path: [ [bottomleft, 0], [0, lefttop] ],\n        move: {\n          x:      -1,\n          y:      0,\n          enter:  'rt'\n        }\n      };\n      cell.edges.tl = {\n        path: [ [topleft, 1], [1, righttop] ],\n        move: {\n          x:      1,\n          y:      0,\n          enter:  'lt'\n        }\n      };\n      cell.edges.rb = {\n        path: [ [1, rightbottom], [bottomright, 0] ],\n        move: {\n          x:      0,\n          y:      -1,\n          enter:  'tr'\n        }\n      };\n    }\n\n    if (opt.polygons)\n      cell.polygons.push([ [bottomleft, 0], [0, lefttop], [0, 1], [topleft, 1], [1, righttop], [1, rightbottom], [bottomright, 0] ]);\n  },\n\n  heptagon_br:    function(cell, x0, x1, x2, x3, opt) {\n    var bottomright = opt.interpolate(x0, x1, opt.minV, opt.maxV);\n    var leftbottom  = opt.interpolate_a(x0, x3, opt.minV, opt.maxV);\n    var lefttop     = opt.interpolate_b(x0, x3, opt.minV, opt.maxV);\n    var topleft     = opt.interpolate_a(x3, x2, opt.minV, opt.maxV);\n    var topright    = opt.interpolate_b(x3, x2, opt.minV, opt.maxV);\n    var rightbottom = opt.interpolate(x1, x2, opt.minV, opt.maxV);\n\n    if (opt.polygons_full) {\n      cell.edges.br = {\n        path: [ [bottomright, 0], [0, leftbottom] ],\n        move: {\n          x:      -1,\n          y:      0,\n          enter:  'rb'\n        }\n      };\n      cell.edges.lt = {\n        path: [ [0, lefttop], [topleft, 1] ],\n        move: {\n          x:      0,\n          y:      1,\n          enter:  'bl'\n        }\n      };\n      cell.edges.tr = {\n        path: [ [topright, 1], [1, rightbottom] ],\n        move: {\n          x:      1,\n          y:      0,\n          enter:  'lb'\n        }\n      };\n    }\n\n    if (opt.polygons)\n      cell.polygons.push([ [bottomright,0], [0, leftbottom], [0, lefttop], [topleft, 1], [topright, 1], [1, rightbottom], [1, 0] ]);\n  },\n\n  octagon:        function(cell, x0, x1, x2, x3, opt) {\n    var bottomleft  = opt.interpolate_a(x0, x1, opt.minV, opt.maxV);\n    var bottomright = opt.interpolate_b(x0, x1, opt.minV, opt.maxV);\n    var leftbottom  = opt.interpolate_a(x0, x3, opt.minV, opt.maxV);\n    var lefttop     = opt.interpolate_b(x0, x3, opt.minV, opt.maxV);\n    var topleft     = opt.interpolate_a(x3, x2, opt.minV, opt.maxV);\n    var topright    = opt.interpolate_b(x3, x2, opt.minV, opt.maxV);\n    var righttop    = opt.interpolate_b(x1, x2, opt.minV, opt.maxV);\n    var rightbottom = opt.interpolate_a(x1, x2, opt.minV, opt.maxV);\n\n    if (opt.polygons_full) {\n      cell.edges.bl = {\n        path: [ [bottomleft, 0], [0, leftbottom] ],\n        move: {\n          x:      -1,\n          y:      0,\n          enter:  'rb'\n        }\n      };\n      cell.edges.lt = {\n        path: [ [0, lefttop], [topleft, 1] ],\n        move: {\n          x:      0,\n          y:      1,\n          enter:  'bl'\n        }\n      };\n      cell.edges.tr = {\n        path: [ [topright, 1], [1, righttop] ],\n        move: {\n          x:      1,\n          y:      0,\n          enter:  'lt'\n        }\n      };\n      cell.edges.rb = {\n        path: [ [1, rightbottom], [bottomright, 0] ],\n        move: {\n          x:      0,\n          y:      -1,\n          enter:  'tr'\n        }\n      };\n    }\n\n    if (opt.polygons)\n      cell.polygons.push([ [bottomleft, 0], [0, leftbottom], [0, lefttop], [topleft, 1], [topright, 1], [1, righttop], [1, rightbottom], [bottomright, 0] ]);\n  }\n};\n\n\n/*\n * Compute isobands(s) for a scalar 2D field given a certain\n * threshold and a bandwidth by applying the Marching Squares\n * Algorithm. The function returns a list of path coordinates\n * either for individual polygons within each grid cell, or the\n * outline of connected polygons.\n */\nfunction isoBands(input, minV, bandWidth, options) {\n  var i,\n    j,\n    settings,\n    useQuadTree   = false,\n    tree          = null,\n    root          = null,\n    data          = null,\n    cellGrid      = null,\n    multiBand     = false,\n    bw            = [],\n    bandPolygons  = [],\n    ret           = [];\n\n  /* basic input validation */\n  if (!input) throw new Error('data is required');\n  if (minV === undefined || minV === null) throw new Error('lowerBound is required');\n  if (bandWidth === undefined || bandWidth === null) throw new Error('bandWidth is required');\n  if ((!!options) && (typeof options !== 'object')) throw new Error('options must be an object');\n\n  settings = isoBandOptions(options);\n\n  /* check for input data */\n  if (input instanceof QuadTree) {\n    tree = input;\n    root = input.root;\n    data = input.data;\n    if (!settings.noQuadTree)\n      useQuadTree = true;\n  } else if (Array.isArray(input) && Array.isArray(input[0])) {\n    data = input;\n  } else {\n    throw new Error('input is neither array of arrays nor object retrieved from \\'QuadTree()\\'');\n  }\n\n  /* check and prepare input thresholds */\n  if (Array.isArray(minV)) {\n    multiBand = true;\n\n    /* activate QuadTree optimization if not explicitly forbidden by user settings */\n    if (!settings.noQuadTree)\n      useQuadTree = true;\n\n    /* check if all minV are numbers */\n    for (i = 0; i < minV.length; i++)\n      if (isNaN(+minV[i]))\n        throw new Error('lowerBound[' + i + '] is not a number');\n\n    if (Array.isArray(bandWidth)) {\n      if (minV.length !== bandWidth.length)\n        throw new Error('lowerBound and bandWidth have unequal lengths');\n\n      /* check bandwidth values */\n      for (i = 0; i < bandWidth.length; i++)\n        if (isNaN(+bandWidth[i]))\n          throw new Error('bandWidth[' + i + '] is not a number');\n    } else {\n      if (isNaN(+bandWidth))\n        throw new Error('bandWidth must be a number');\n\n      bw = [];\n      for (i = 0; i < minV.length; i++) {\n        bw.push(bandWidth);\n      }\n      bandWidth = bw;\n    }\n  } else {\n    if (isNaN(+minV))\n      throw new Error('lowerBound must be a number');\n\n    minV = [ minV ];\n\n    if (isNaN(+bandWidth))\n      throw new Error('bandWidth must be a number');\n\n    bandWidth = [ bandWidth ];\n  }\n\n  /* create QuadTree root node if not already present */\n  if ((useQuadTree) && (!root)) {\n    tree = new QuadTree(data);\n    root = tree.root;\n    data = tree.data;\n  }\n\n  if (settings.verbose) {\n    if(settings.polygons)\n      console.log('MarchingSquaresJS-isoBands: returning single polygons for each grid cell');\n    else\n      console.log('MarchingSquaresJS-isoBands: returning polygon paths for entire data grid');\n\n    if (multiBand)\n      console.log('MarchingSquaresJS-isoBands: multiple bands requested, returning array of band polygons instead of polygons for a single band');\n  }\n\n  /* Done with all input validation, now let's start computing stuff */\n\n  /* loop over all minV values */\n  minV.forEach(function(lowerBound, b) {\n    bandPolygons = [];\n\n    /* store bounds for current computation in settings object */\n    settings.minV = lowerBound;\n    settings.maxV = lowerBound + bandWidth[b];\n\n    if(settings.verbose)\n      console.log('MarchingSquaresJS-isoBands: computing isobands for [' + lowerBound + ':' + (lowerBound + bandWidth[b]) + ']');\n\n    if (settings.polygons) {\n      /* compose list of polygons for each single cell */\n      if (useQuadTree) {\n        /* go through list of cells retrieved from QuadTree */\n        root\n          .cellsInBand(settings.minV, settings.maxV, true)\n          .forEach(function(c) {\n            bandPolygons  = bandPolygons.concat(\n              cell2Polygons(\n                prepareCell$1(data,\n                  c.x,\n                  c.y,\n                  settings),\n                c.x,\n                c.y,\n                settings\n              ));\n          });\n      } else {\n        /* go through entire array of input data */\n        for (j = 0; j < data.length - 1; ++j) {\n          for (i = 0; i < data[0].length - 1; ++i)\n            bandPolygons  = bandPolygons.concat(\n              cell2Polygons(\n                prepareCell$1(data,\n                  i,\n                  j,\n                  settings),\n                i,\n                j,\n                settings\n              ));\n        }\n      }\n    } else {\n      /* sparse grid of input data cells */\n      cellGrid = [];\n      for (i = 0; i < data[0].length - 1; ++i)\n        cellGrid[i] = [];\n\n      /* compose list of polygons for entire input grid */\n      if (useQuadTree) {\n        /* collect the cells */\n        root\n          .cellsInBand(settings.minV, settings.maxV, false)\n          .forEach(function(c) {\n            cellGrid[c.x][c.y] = prepareCell$1(data,\n              c.x,\n              c.y,\n              settings);\n          });\n      } else {\n        /* prepare cells */\n        for (i = 0; i < data[0].length - 1; ++i) {\n          for (j = 0; j < data.length - 1; ++j) {\n            cellGrid[i][j]  = prepareCell$1(data,\n              i,\n              j,\n              settings);\n          }\n        }\n      }\n\n      bandPolygons = traceBandPaths(data, cellGrid, settings);\n    }\n\n    /* finally, add polygons to output array */\n    if (multiBand)\n      ret.push(bandPolygons);\n    else\n      ret = bandPolygons;\n\n    if(typeof settings.successCallback === 'function')\n      settings.successCallback(ret, lowerBound, bandWidth[b]);\n  });\n\n  return ret;\n}\n\n/*\n * Thats all for the public interface, below follows the actual\n * implementation\n */\n\n/*\n *  For isoBands, each square is defined by the three states\n * of its corner points. However, since computers use power-2\n * values, we use 2bits per trit, i.e.:\n *\n * 00 ... below minV\n * 01 ... between minV and maxV\n * 10 ... above maxV\n *\n * Hence we map the 4-trit configurations as follows:\n *\n * 0000 => 0\n * 0001 => 1\n * 0002 => 2\n * 0010 => 4\n * 0011 => 5\n * 0012 => 6\n * 0020 => 8\n * 0021 => 9\n * 0022 => 10\n * 0100 => 16\n * 0101 => 17\n * 0102 => 18\n * 0110 => 20\n * 0111 => 21\n * 0112 => 22\n * 0120 => 24\n * 0121 => 25\n * 0122 => 26\n * 0200 => 32\n * 0201 => 33\n * 0202 => 34\n * 0210 => 36\n * 0211 => 37\n * 0212 => 38\n * 0220 => 40\n * 0221 => 41\n * 0222 => 42\n * 1000 => 64\n * 1001 => 65\n * 1002 => 66\n * 1010 => 68\n * 1011 => 69\n * 1012 => 70\n * 1020 => 72\n * 1021 => 73\n * 1022 => 74\n * 1100 => 80\n * 1101 => 81\n * 1102 => 82\n * 1110 => 84\n * 1111 => 85\n * 1112 => 86\n * 1120 => 88\n * 1121 => 89\n * 1122 => 90\n * 1200 => 96\n * 1201 => 97\n * 1202 => 98\n * 1210 => 100\n * 1211 => 101\n * 1212 => 102\n * 1220 => 104\n * 1221 => 105\n * 1222 => 106\n * 2000 => 128\n * 2001 => 129\n * 2002 => 130\n * 2010 => 132\n * 2011 => 133\n * 2012 => 134\n * 2020 => 136\n * 2021 => 137\n * 2022 => 138\n * 2100 => 144\n * 2101 => 145\n * 2102 => 146\n * 2110 => 148\n * 2111 => 149\n * 2112 => 150\n * 2120 => 152\n * 2121 => 153\n * 2122 => 154\n * 2200 => 160\n * 2201 => 161\n * 2202 => 162\n * 2210 => 164\n * 2211 => 165\n * 2212 => 166\n * 2220 => 168\n * 2221 => 169\n * 2222 => 170\n */\n\n/*\n * ####################################\n * Some small helper functions\n * ####################################\n */\n\nfunction computeCenterAverage(bl, br, tr, tl, minV, maxV) {\n  var average = (tl + tr + br + bl) / 4;\n\n  if (average > maxV)\n    return 2; /* above isoband limits */\n\n  if (average < minV)\n    return 0; /* below isoband limits */\n\n  return 1; /* within isoband limits */\n}\n\n\nfunction prepareCell$1(grid, x, y, opt) {\n  var cell,\n    center_avg;\n\n  /*  compose the 4-trit corner representation */\n  var cval = 0;\n  var x3 = grid[y + 1][x];\n  var x2 = grid[y + 1][x + 1];\n  var x1 = grid[y][x + 1];\n  var x0 = grid[y][x];\n  var minV  = opt.minV;\n  var maxV  = opt.maxV;\n\n  /*\n   * Note that missing data within the grid will result\n   * in horribly failing to trace full polygon paths\n   */\n  if(isNaN(x0) || isNaN(x1) || isNaN(x2) || isNaN(x3)) {\n    return;\n  }\n\n  /*\n   * Here we detect the type of the cell\n   *\n   * x3 ---- x2\n   * |      |\n   * |      |\n   * x0 ---- x1\n   *\n   * with edge points\n   *\n   * x0 = (x,y),\n   * x1 = (x + 1, y),\n   * x2 = (x + 1, y + 1), and\n   * x3 = (x, y + 1)\n   *\n   * and compute the polygon intersections with the edges\n   * of the cell. Each edge value may be (i) below, (ii) within,\n   * or (iii) above the values of the isoband limits. We\n   * encode this property using 2 bits of information, where\n   *\n   * 00 ... below,\n   * 01 ... within, and\n   * 10 ... above\n   *\n   * Then we store the cells value as vector\n   *\n   * cval = (x0, x1, x2, x3)\n   *\n   * where x0 are the two least significant bits (0th, 1st),\n   * x1 the 2nd and 3rd bit, and so on. This essentially\n   * enables us to work with a single integer number\n   */\n\n  cval |= (x3 < minV) ? 0 : (x3 > maxV) ? 128 : 64;\n  cval |= (x2 < minV) ? 0 : (x2 > maxV) ? 32 : 16;\n  cval |= (x1 < minV) ? 0 : (x1 > maxV) ? 8 : 4;\n  cval |= (x0 < minV) ? 0 : (x0 > maxV) ? 2 : 1;\n\n  /* make sure cval is a number */\n  cval = +cval;\n\n  /*\n   * cell center average trit for ambiguous cases, where\n   * 0 ... below iso band\n   * 1 ... within iso band\n   * 2 ... above isoband\n   */\n  center_avg = 0;\n\n  cell = {\n    cval:         cval,\n    polygons:     [],\n    edges:        {},\n    x0:           x0,\n    x1:           x1,\n    x2:           x2,\n    x3:           x3,\n    x:            x,\n    y:            y\n  };\n\n  /*\n   * Compute interpolated intersections of the polygon(s)\n   * with the cell borders and (i) add edges for polygon\n   * trace-back, or (ii) a list of small closed polygons\n   * according to look-up table\n   */\n  switch (cval) {\n  case 85:  /* 1111 */\n    shapeCoordinates.square(cell, x0, x1, x2, x3, opt);\n    /* fall through */\n  case 0:   /* 0000 */\n    /* fall through */\n  case 170: /* 2222 */\n    break;\n\n    /* single triangle cases */\n\n  case 169: /* 2221 */\n    shapeCoordinates.triangle_bl(cell, x0, x1, x2, x3, opt);\n    break;\n\n  case 166: /* 2212 */\n    shapeCoordinates.triangle_br(cell, x0, x1, x2, x3, opt);\n    break;\n\n  case 154: /* 2122 */\n    shapeCoordinates.triangle_tr(cell, x0, x1, x2, x3, opt);\n    break;\n\n  case 106: /* 1222 */\n    shapeCoordinates.triangle_tl(cell, x0, x1, x2, x3, opt);\n    break;\n\n  case 1: /* 0001 */\n    shapeCoordinates.triangle_bl(cell, x0, x1, x2, x3, opt);\n    break;\n\n  case 4: /* 0010 */\n    shapeCoordinates.triangle_br(cell, x0, x1, x2, x3, opt);\n    break;\n\n  case 16: /* 0100 */\n    shapeCoordinates.triangle_tr(cell, x0, x1, x2, x3, opt);\n    break;\n\n  case 64: /* 1000 */\n    shapeCoordinates.triangle_tl(cell, x0, x1, x2, x3, opt);\n    break;\n\n\n    /* single trapezoid cases */\n\n  case 168: /* 2220 */\n    shapeCoordinates.tetragon_bl(cell, x0, x1, x2, x3, opt);\n    break;\n\n  case 162: /* 2202 */\n    shapeCoordinates.tetragon_br(cell, x0, x1, x2, x3, opt);\n    break;\n\n  case 138: /* 2022 */\n    shapeCoordinates.tetragon_tr(cell, x0, x1, x2, x3, opt);\n    break;\n\n  case 42: /* 0222 */\n    shapeCoordinates.tetragon_tl(cell, x0, x1, x2, x3, opt);\n    break;\n\n  case 2: /* 0002 */\n    shapeCoordinates.tetragon_bl(cell, x0, x1, x2, x3, opt);\n    break;\n\n  case 8: /* 0020 */\n    shapeCoordinates.tetragon_br(cell, x0, x1, x2, x3, opt);\n    break;\n\n  case 32: /* 0200 */\n    shapeCoordinates.tetragon_tr(cell, x0, x1, x2, x3, opt);\n    break;\n\n  case 128: /* 2000 */\n    shapeCoordinates.tetragon_tl(cell, x0, x1, x2, x3, opt);\n    break;\n\n\n    /* single rectangle cases */\n\n  case 5: /* 0011 */\n    shapeCoordinates.tetragon_b(cell, x0, x1, x2, x3, opt);\n    break;\n\n  case 20: /* 0110 */\n    shapeCoordinates.tetragon_r(cell, x0, x1, x2, x3, opt);\n    break;\n\n  case 80: /* 1100 */\n    shapeCoordinates.tetragon_t(cell, x0, x1, x2, x3, opt);\n    break;\n\n  case 65: /* 1001 */\n    shapeCoordinates.tetragon_l(cell, x0, x1, x2, x3, opt);\n    break;\n\n  case 165: /* 2211 */\n    shapeCoordinates.tetragon_b(cell, x0, x1, x2, x3, opt);\n    break;\n\n  case 150: /* 2112 */\n    shapeCoordinates.tetragon_r(cell, x0, x1, x2, x3, opt);\n    break;\n\n  case 90: /* 1122 */\n    shapeCoordinates.tetragon_t(cell, x0, x1, x2, x3, opt);\n    break;\n\n  case 105: /* 1221 */\n    shapeCoordinates.tetragon_l(cell, x0, x1, x2, x3, opt);\n    break;\n\n  case 160: /* 2200 */\n    shapeCoordinates.tetragon_lr(cell, x0, x1, x2, x3, opt);\n    break;\n\n  case 130: /* 2002 */\n    shapeCoordinates.tetragon_tb(cell, x0, x1, x2, x3, opt);\n    break;\n\n  case 10: /* 0022 */\n    shapeCoordinates.tetragon_lr(cell, x0, x1, x2, x3, opt);\n    break;\n\n  case 40: /* 0220 */\n    shapeCoordinates.tetragon_tb(cell, x0, x1, x2, x3, opt);\n    break;\n\n\n    /* single pentagon cases */\n\n  case 101: /* 1211 */\n    shapeCoordinates.pentagon_tr(cell, x0, x1, x2, x3, opt);\n    break;\n\n  case 149: /* 2111 */\n    shapeCoordinates.pentagon_tl(cell, x0, x1, x2, x3, opt);\n    break;\n\n  case 86: /* 1112 */\n    shapeCoordinates.pentagon_bl(cell, x0, x1, x2, x3, opt);\n    break;\n\n  case 89: /* 1121 */\n    shapeCoordinates.pentagon_br(cell, x0, x1, x2, x3, opt);\n    break;\n\n  case 69: /* 1011 */\n    shapeCoordinates.pentagon_tr(cell, x0, x1, x2, x3, opt);\n    break;\n\n  case 21: /* 0111 */\n    shapeCoordinates.pentagon_tl(cell, x0, x1, x2, x3, opt);\n    break;\n\n  case 84: /* 1110 */\n    shapeCoordinates.pentagon_bl(cell, x0, x1, x2, x3, opt);\n    break;\n\n  case 81: /* 1101 */\n    shapeCoordinates.pentagon_br(cell, x0, x1, x2, x3, opt);\n    break;\n\n  case 96: /* 1200 */\n    shapeCoordinates.pentagon_tr_rl(cell, x0, x1, x2, x3, opt);\n    break;\n\n  case 24: /* 0120 */\n    shapeCoordinates.pentagon_rb_bt(cell, x0, x1, x2, x3, opt);\n    break;\n\n  case 6: /* 0012 */\n    shapeCoordinates.pentagon_bl_lr(cell, x0, x1, x2, x3, opt);\n    break;\n\n  case 129: /* 2001 */\n    shapeCoordinates.pentagon_lt_tb(cell, x0, x1, x2, x3, opt);\n    break;\n\n  case 74: /* 1022 */\n    shapeCoordinates.pentagon_tr_rl(cell, x0, x1, x2, x3, opt);\n    break;\n\n  case 146: /* 2102 */\n    shapeCoordinates.pentagon_rb_bt(cell, x0, x1, x2, x3, opt);\n    break;\n\n  case 164: /* 2210 */\n    shapeCoordinates.pentagon_bl_lr(cell, x0, x1, x2, x3, opt);\n    break;\n\n  case 41: /* 0221 */\n    shapeCoordinates.pentagon_lt_tb(cell, x0, x1, x2, x3, opt);\n    break;\n\n  case 66: /* 1002 */\n    shapeCoordinates.pentagon_bl_tb(cell, x0, x1, x2, x3, opt);\n    break;\n\n  case 144: /* 2100 */\n    shapeCoordinates.pentagon_lt_rl(cell, x0, x1, x2, x3, opt);\n    break;\n\n  case 36: /* 0210 */\n    shapeCoordinates.pentagon_tr_bt(cell, x0, x1, x2, x3, opt);\n    break;\n\n  case 9: /* 0021 */\n    shapeCoordinates.pentagon_rb_lr(cell, x0, x1, x2, x3, opt);\n    break;\n\n  case 104: /* 1220 */\n    shapeCoordinates.pentagon_bl_tb(cell, x0, x1, x2, x3, opt);\n    break;\n\n  case 26: /* 0122 */\n    shapeCoordinates.pentagon_lt_rl(cell, x0, x1, x2, x3, opt);\n    break;\n\n  case 134: /* 2012 */\n    shapeCoordinates.pentagon_tr_bt(cell, x0, x1, x2, x3, opt);\n    break;\n\n  case 161: /* 2201 */\n    shapeCoordinates.pentagon_rb_lr(cell, x0, x1, x2, x3, opt);\n    break;\n\n\n    /* single hexagon cases */\n\n  case 37: /* 0211 */\n    shapeCoordinates.hexagon_lt_tr(cell, x0, x1, x2, x3, opt);\n    break;\n\n  case 148: /* 2110 */\n    shapeCoordinates.hexagon_bl_lt(cell, x0, x1, x2, x3, opt);\n    break;\n\n  case 82: /* 1102 */\n    shapeCoordinates.hexagon_bl_rb(cell, x0, x1, x2, x3, opt);\n    break;\n\n  case 73: /* 1021 */\n    shapeCoordinates.hexagon_tr_rb(cell, x0, x1, x2, x3, opt);\n    break;\n\n  case 133: /* 2011 */\n    shapeCoordinates.hexagon_lt_tr(cell, x0, x1, x2, x3, opt);\n    break;\n\n  case 22: /* 0112 */\n    shapeCoordinates.hexagon_bl_lt(cell, x0, x1, x2, x3, opt);\n    break;\n\n  case 88: /* 1120 */\n    shapeCoordinates.hexagon_bl_rb(cell, x0, x1, x2, x3, opt);\n    break;\n\n  case 97: /* 1201 */\n    shapeCoordinates.hexagon_tr_rb(cell, x0, x1, x2, x3, opt);\n    break;\n\n  case 145: /* 2101 */\n    shapeCoordinates.hexagon_lt_rb(cell, x0, x1, x2, x3, opt);\n    break;\n\n  case 25: /* 0121 */\n    shapeCoordinates.hexagon_lt_rb(cell, x0, x1, x2, x3, opt);\n    break;\n\n  case 70: /* 1012 */\n    shapeCoordinates.hexagon_bl_tr(cell, x0, x1, x2, x3, opt);\n    break;\n\n  case 100: /* 1210 */\n    shapeCoordinates.hexagon_bl_tr(cell, x0, x1, x2, x3, opt);\n    break;\n\n\n    /* 6-sided saddles */\n\n  case 17: /* 0101 */\n    center_avg = computeCenterAverage(x0, x1, x2, x3, minV, maxV);\n    /* should never be center_avg === 2 */\n    if (center_avg === 0) {\n      shapeCoordinates.triangle_bl(cell, x0, x1, x2, x3, opt);\n      shapeCoordinates.triangle_tr(cell, x0, x1, x2, x3, opt);\n    } else {\n      shapeCoordinates.hexagon_lt_rb(cell, x0, x1, x2, x3, opt);\n    }\n    break;\n\n  case 68: /* 1010 */\n    center_avg = computeCenterAverage(x0, x1, x2, x3, minV, maxV);\n    /* should never be center_avg === 2 */\n    if (center_avg === 0) {\n      shapeCoordinates.triangle_tl(cell, x0, x1, x2, x3, opt);\n      shapeCoordinates.triangle_br(cell, x0, x1, x2, x3, opt);\n    } else {\n      shapeCoordinates.hexagon_bl_tr(cell, x0, x1, x2, x3, opt);\n    }\n    break;\n\n  case 153: /* 2121 */\n    center_avg = computeCenterAverage(x0, x1, x2, x3, minV, maxV);\n    /* should never be center_avg === 0 */\n    if (center_avg === 2) {\n      shapeCoordinates.triangle_bl(cell, x0, x1, x2, x3, opt);\n      shapeCoordinates.triangle_tr(cell, x0, x1, x2, x3, opt);\n    } else {\n      shapeCoordinates.hexagon_lt_rb(cell, x0, x1, x2, x3, opt);\n    }\n    break;\n\n  case 102: /* 1212 */\n    center_avg = computeCenterAverage(x0, x1, x2, x3, minV, maxV);\n    /* should never be center_avg === 0 */\n    if (center_avg === 2) {\n      shapeCoordinates.triangle_tl(cell, x0, x1, x2, x3, opt);\n      shapeCoordinates.triangle_br(cell, x0, x1, x2, x3, opt);\n    } else {\n      shapeCoordinates.hexagon_bl_tr(cell, x0, x1, x2, x3, opt);\n    }\n    break;\n\n\n    /* 7-sided saddles */\n\n  case 152: /* 2120 */\n\n    center_avg = computeCenterAverage(x0, x1, x2, x3, minV, maxV);\n    /* should never be center_avg === 0 */\n    if (center_avg === 2) {\n      shapeCoordinates.triangle_tr(cell, x0, x1, x2, x3, opt);\n      shapeCoordinates.tetragon_bl(cell, x0, x1, x2, x3, opt);\n    } else {\n      shapeCoordinates.heptagon_tr(cell, x0, x1, x2, x3, opt);\n    }\n    break;\n\n  case 137: /* 2021 */\n    center_avg = computeCenterAverage(x0, x1, x2, x3, minV, maxV);\n    /* should never be center_avg === 0 */\n    if (center_avg === 2) {\n      shapeCoordinates.triangle_bl(cell, x0, x1, x2, x3, opt);\n      shapeCoordinates.tetragon_tr(cell, x0, x1, x2, x3, opt);\n    } else {\n      shapeCoordinates.heptagon_bl(cell, x0, x1, x2, x3, opt);\n    }\n    break;\n\n  case 98: /* 1202 */\n    center_avg = computeCenterAverage(x0, x1, x2, x3, minV, maxV);\n    /* should never be center_avg === 0 */\n    if (center_avg === 2) {\n      shapeCoordinates.triangle_tl(cell, x0, x1, x2, x3, opt);\n      shapeCoordinates.tetragon_br(cell, x0, x1, x2, x3, opt);\n    } else {\n      shapeCoordinates.heptagon_tl(cell, x0, x1, x2, x3, opt);\n    }\n    break;\n\n  case 38: /* 0212 */\n    center_avg = computeCenterAverage(x0, x1, x2, x3, minV, maxV);\n    /* should never be center_avg === 0 */\n    if (center_avg === 2) {\n      shapeCoordinates.triangle_br(cell, x0, x1, x2, x3, opt);\n      shapeCoordinates.tetragon_tl(cell, x0, x1, x2, x3, opt);\n    } else {\n      shapeCoordinates.heptagon_br(cell, x0, x1, x2, x3, opt);\n    }\n    break;\n\n  case 18: /* 0102 */\n    center_avg = computeCenterAverage(x0, x1, x2, x3, minV, maxV);\n    /* should never be center_avg === 2 */\n    if (center_avg === 0) {\n      shapeCoordinates.triangle_tr(cell, x0, x1, x2, x3, opt);\n      shapeCoordinates.tetragon_bl(cell, x0, x1, x2, x3, opt);\n    } else {\n      shapeCoordinates.heptagon_tr(cell, x0, x1, x2, x3, opt);\n    }\n    break;\n\n  case 33: /* 0201 */\n    center_avg = computeCenterAverage(x0, x1, x2, x3, minV, maxV);\n    /* should never be center_avg === 2 */\n    if (center_avg === 0) {\n      shapeCoordinates.triangle_bl(cell, x0, x1, x2, x3, opt);\n      shapeCoordinates.tetragon_tr(cell, x0, x1, x2, x3, opt);\n    } else {\n      shapeCoordinates.heptagon_bl(cell, x0, x1, x2, x3, opt);\n    }\n    break;\n\n  case 72: /* 1020 */\n    center_avg = computeCenterAverage(x0, x1, x2, x3, minV, maxV);\n    /* should never be center_avg === 2 */\n    if (center_avg === 0) {\n      shapeCoordinates.triangle_tl(cell, x0, x1, x2, x3, opt);\n      shapeCoordinates.tetragon_br(cell, x0, x1, x2, x3, opt);\n    } else {\n      shapeCoordinates.heptagon_tl(cell, x0, x1, x2, x3, opt);\n    }\n    break;\n\n  case 132: /* 2010 */\n    center_avg = computeCenterAverage(x0, x1, x2, x3, minV, maxV);\n    /* should never be center_avg === 2 */\n    if (center_avg === 0) {\n      shapeCoordinates.triangle_br(cell, x0, x1, x2, x3, opt);\n      shapeCoordinates.tetragon_tl(cell, x0, x1, x2, x3, opt);\n    } else {\n      shapeCoordinates.heptagon_br(cell, x0, x1, x2, x3, opt);\n    }\n    break;\n\n\n    /* 8-sided saddles */\n\n  case 136: /* 2020 */\n    center_avg = computeCenterAverage(x0, x1, x2, x3, minV, maxV);\n    if (center_avg === 0) {\n      shapeCoordinates.tetragon_tl(cell, x0, x1, x2, x3, opt);\n      shapeCoordinates.tetragon_br(cell, x0, x1, x2, x3, opt);\n    } else if (center_avg === 1) {\n      shapeCoordinates.octagon(cell, x0, x1, x2, x3, opt);\n    } else {\n      shapeCoordinates.tetragon_bl(cell, x0, x1, x2, x3, opt);\n      shapeCoordinates.tetragon_tr(cell, x0, x1, x2, x3, opt);\n    }\n    break;\n\n  case 34: /* 0202 */\n    center_avg = computeCenterAverage(x0, x1, x2, x3, minV, maxV);\n    if (center_avg === 0) {\n      shapeCoordinates.tetragon_bl(cell, x0, x1, x2, x3, opt);\n      shapeCoordinates.tetragon_tr(cell, x0, x1, x2, x3, opt);\n    } else if (center_avg === 1) {\n      shapeCoordinates.octagon(cell, x0, x1, x2, x3, opt);\n    } else {\n      shapeCoordinates.tetragon_tl(cell, x0, x1, x2, x3, opt);\n      shapeCoordinates.tetragon_br(cell, x0, x1, x2, x3, opt);\n    }\n    break;\n  }\n\n  return cell;\n}\n\nexport { isoLines, isoLines as isoContours, isoBands, QuadTree, QuadTree as quadTree };\n", "import {\n  Polygon,\n  Feature,\n  FeatureCollection,\n  LineString,\n  Geometry,\n  Point,\n} from \"geojson\";\nimport { bbox } from \"@turf/bbox\";\nimport { booleanPointInPolygon } from \"@turf/boolean-point-in-polygon\";\nimport { distance } from \"@turf/distance\";\nimport { transformScale as scale } from \"@turf/transform-scale\";\nimport { cleanCoords } from \"@turf/clean-coords\";\nimport { bboxPolygon } from \"@turf/bbox-polygon\";\nimport { getCoord, getGeom } from \"@turf/invariant\";\nimport {\n  Coord,\n  Units,\n  point,\n  isNumber,\n  lineString,\n  isObject,\n  featureCollection,\n  feature,\n} from \"@turf/helpers\";\nimport { Graph, GridNode, astar } from \"./lib/javascript-astar.js\";\n\n/**\n * Returns the shortest {@link LineString|path} from {@link Point|start} to {@link Point|end} without colliding with\n * any {@link Feature} in {@link FeatureCollection<Polygon>| obstacles}\n *\n * @name shortestPath\n * @param {Coord} start point\n * @param {Coord} end point\n * @param {Object} [options={}] optional parameters\n * @param {Geometry|Feature|FeatureCollection<Polygon>} [options.obstacles] areas which path cannot travel\n * @param {string} [options.units='kilometers'] unit in which resolution & minimum distance will be expressed in; it can be degrees, radians, miles, kilometers, ...\n * @param {number} [options.resolution=100] distance between matrix points on which the path will be calculated\n * @returns {Feature<LineString>} shortest path between start and end\n * @example\n * var start = [-5, -6];\n * var end = [9, -6];\n * var options = {\n *   obstacles: turf.polygon([[[0, -7], [5, -7], [5, -3], [0, -3], [0, -7]]])\n * };\n *\n * var path = turf.shortestPath(start, end, options);\n *\n * //addToMap\n * var addToMap = [start, end, options.obstacles, path];\n */\nfunction shortestPath(\n  start: Coord,\n  end: Coord,\n  options: {\n    obstacles?: Polygon | Feature<Polygon> | FeatureCollection<Polygon>;\n    units?: Units;\n    resolution?: number;\n  } = {}\n): Feature<LineString> {\n  // Optional parameters\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  let obstacles = options.obstacles || featureCollection([]);\n  let resolution = options.resolution || 100;\n\n  // validation\n  if (!start) throw new Error(\"start is required\");\n  if (!end) throw new Error(\"end is required\");\n  if (resolution && (!isNumber(resolution) || resolution <= 0))\n    throw new Error(\"options.resolution must be a number, greater than 0\");\n\n  // Normalize Inputs\n  const startCoord = getCoord(start);\n  const endCoord = getCoord(end);\n  start = point(startCoord);\n  end = point(endCoord);\n\n  // Handle obstacles\n  if (obstacles.type === \"FeatureCollection\") {\n    if (obstacles.features.length === 0) {\n      return lineString([startCoord, endCoord]);\n    }\n  } else if (obstacles.type === \"Polygon\") {\n    obstacles = featureCollection([feature(getGeom(obstacles))]);\n  } else {\n    throw new Error(\"invalid obstacles\");\n  }\n\n  // define path grid area\n  const collection: FeatureCollection<Geometry> = obstacles;\n  collection.features.push(start);\n  collection.features.push(end);\n  const box = bbox(scale(bboxPolygon(bbox(collection)), 1.15)); // extend 15%\n  const [west, south, east, north] = box;\n\n  const width = distance([west, south], [east, south], options);\n  const division = width / resolution;\n\n  collection.features.pop();\n  collection.features.pop();\n\n  const xFraction = division / distance([west, south], [east, south], options);\n  const cellWidth = xFraction * (east - west);\n  const yFraction = division / distance([west, south], [west, north], options);\n  const cellHeight = yFraction * (north - south);\n\n  const bboxHorizontalSide = east - west;\n  const bboxVerticalSide = north - south;\n  const columns = Math.floor(bboxHorizontalSide / cellWidth);\n  const rows = Math.floor(bboxVerticalSide / cellHeight);\n  // adjust origin of the grid\n  const deltaX = (bboxHorizontalSide - columns * cellWidth) / 2;\n  const deltaY = (bboxVerticalSide - rows * cellHeight) / 2;\n\n  // loop through points only once to speed up process\n  // define matrix grid for A-star algorithm\n  const pointMatrix: string[][] = [];\n  const matrix: number[][] = [];\n\n  let closestToStart: GridNode;\n  let closestToEnd: GridNode;\n  let minDistStart = Infinity;\n  let minDistEnd = Infinity;\n  let currentY = north - deltaY;\n  let r = 0;\n  while (currentY >= south) {\n    // var currentY = south + deltaY;\n    const matrixRow = [];\n    const pointMatrixRow = [];\n    let currentX = west + deltaX;\n    let c = 0;\n    while (currentX <= east) {\n      const pt = point([currentX, currentY]);\n      const isInsideObstacle = isInside(pt, obstacles);\n      // feed obstacles matrix\n      matrixRow.push(isInsideObstacle ? 0 : 1); // with javascript-astar\n      // matrixRow.push(isInsideObstacle ? 1 : 0); // with astar-andrea\n      // map point's coords\n      pointMatrixRow.push(currentX + \"|\" + currentY);\n      // set closest points\n      const distStart = distance(pt, start);\n      // if (distStart < minDistStart) {\n      if (!isInsideObstacle && distStart < minDistStart) {\n        minDistStart = distStart;\n        closestToStart = { x: c, y: r };\n      }\n      const distEnd = distance(pt, end);\n      // if (distEnd < minDistEnd) {\n      if (!isInsideObstacle && distEnd < minDistEnd) {\n        minDistEnd = distEnd;\n        closestToEnd = { x: c, y: r };\n      }\n      currentX += cellWidth;\n      c++;\n    }\n    matrix.push(matrixRow);\n    pointMatrix.push(pointMatrixRow);\n    currentY -= cellHeight;\n    r++;\n  }\n\n  // find path on matrix grid\n\n  // javascript-astar ----------------------\n  const graph = new Graph(matrix, { diagonal: true });\n  const startOnMatrix = graph.grid[closestToStart!.y][closestToStart!.x];\n  const endOnMatrix = graph.grid[closestToEnd!.y][closestToEnd!.x];\n  const result: GridNode[] = astar.search(graph, startOnMatrix, endOnMatrix);\n\n  const path = [startCoord];\n  result.forEach(function (coord) {\n    const coords = pointMatrix[coord.x][coord.y].split(\"|\");\n    path.push([+coords[0], +coords[1]]); // make sure coords are numbers\n  });\n  path.push(endCoord);\n  // ---------------------------------------\n\n  // astar-andrea ------------------------\n  // var result = aStar(matrix, [closestToStart.x, closestToStart.y], [closestToEnd.x, closestToEnd.y], 'DiagonalFree');\n  // var path = [start.geometry.coordinates];\n  // result.forEach(function (coord) {\n  //     var coords = pointMatrix[coord[1]][coord[0]].split('|');\n  //     path.push([+coords[0], +coords[1]]); // make sure coords are numbers\n  // });\n  // path.push(end.geometry.coordinates);\n  // ---------------------------------------\n\n  return cleanCoords(lineString(path));\n}\n\n/**\n * Checks if Point is inside any of the Polygons\n *\n * @private\n * @param {Feature<Point>} pt to check\n * @param {FeatureCollection<Polygon>} polygons features\n * @returns {boolean} if inside or not\n */\nfunction isInside(pt: Feature<Point>, polygons: FeatureCollection<Polygon>) {\n  for (let i = 0; i < polygons.features.length; i++) {\n    if (booleanPointInPolygon(pt, polygons.features[i])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport { shortestPath };\nexport default shortestPath;\n", "// javascript-astar 0.4.1\n// http://github.com/bgrins/javascript-astar\n// Freely distributable under the MIT License.\n// Implements the astar search algorithm in javascript using a Binary Heap.\n// Includes Binary Heap (with modifications) from Marijn Haverbeke.\n// http://eloquentjavascript.net/appendix2.html\n\nfunction pathTo(node) {\n  var curr = node,\n    path = [];\n  while (curr.parent) {\n    path.unshift(curr);\n    curr = curr.parent;\n  }\n  return path;\n}\n\nfunction getHeap() {\n  return new BinaryHeap(function (node) {\n    return node.f;\n  });\n}\n\n/**\n * Astar\n * @private\n */\nexport var astar = {\n  /**\n   * Perform an A* Search on a graph given a start and end node.\n   *\n   * @private\n   * @memberof astar\n   * @param {Graph} graph Graph\n   * @param {GridNode} start Start\n   * @param {GridNode} end End\n   * @param {Object} [options] Options\n   * @param {bool} [options.closest] Specifies whether to return the path to the closest node if the target is unreachable.\n   * @param {Function} [options.heuristic] Heuristic function (see astar.heuristics).\n   * @returns {Object} Search\n   */\n  search: function (graph, start, end, options) {\n    graph.cleanDirty();\n    options = options || {};\n    var heuristic = options.heuristic || astar.heuristics.manhattan,\n      closest = options.closest ?? false;\n\n    var openHeap = getHeap(),\n      closestNode = start; // set the start node to be the closest if required\n\n    start.h = heuristic(start, end);\n\n    openHeap.push(start);\n\n    while (openHeap.size() > 0) {\n      // Grab the lowest f(x) to process next.  Heap keeps this sorted for us.\n      var currentNode = openHeap.pop();\n\n      // End case -- result has been found, return the traced path.\n      if (currentNode === end) {\n        return pathTo(currentNode);\n      }\n\n      // Normal case -- move currentNode from open to closed, process each of its neighbors.\n      currentNode.closed = true;\n\n      // Find all neighbors for the current node.\n      var neighbors = graph.neighbors(currentNode);\n\n      for (var i = 0, il = neighbors.length; i < il; ++i) {\n        var neighbor = neighbors[i];\n\n        if (neighbor.closed || neighbor.isWall()) {\n          // Not a valid node to process, skip to next neighbor.\n          continue;\n        }\n\n        // The g score is the shortest distance from start to current node.\n        // We need to check if the path we have arrived at this neighbor is the shortest one we have seen yet.\n        var gScore = currentNode.g + neighbor.getCost(currentNode),\n          beenVisited = neighbor.visited;\n\n        if (!beenVisited || gScore < neighbor.g) {\n          // Found an optimal (so far) path to this node.  Take score for node to see how good it is.\n          neighbor.visited = true;\n          neighbor.parent = currentNode;\n          neighbor.h = neighbor.h || heuristic(neighbor, end);\n          neighbor.g = gScore;\n          neighbor.f = neighbor.g + neighbor.h;\n          graph.markDirty(neighbor);\n          if (closest) {\n            // If the neighbour is closer than the current closestNode or if it's equally close but has\n            // a cheaper path than the current closest node then it becomes the closest node\n            if (\n              neighbor.h < closestNode.h ||\n              (neighbor.h === closestNode.h && neighbor.g < closestNode.g)\n            ) {\n              closestNode = neighbor;\n            }\n          }\n\n          if (!beenVisited) {\n            // Pushing to heap will put it in proper place based on the 'f' value.\n            openHeap.push(neighbor);\n          } else {\n            // Already seen the node, but since it has been rescored we need to reorder it in the heap\n            openHeap.rescoreElement(neighbor);\n          }\n        }\n      }\n    }\n\n    if (closest) {\n      return pathTo(closestNode);\n    }\n\n    // No result was found - empty array signifies failure to find path.\n    return [];\n  },\n  // See list of heuristics: http://theory.stanford.edu/~amitp/GameProgramming/Heuristics.html\n  heuristics: {\n    manhattan: function (pos0, pos1) {\n      var d1 = Math.abs(pos1.x - pos0.x);\n      var d2 = Math.abs(pos1.y - pos0.y);\n      return d1 + d2;\n    },\n    diagonal: function (pos0, pos1) {\n      var D = 1;\n      var D2 = Math.sqrt(2);\n      var d1 = Math.abs(pos1.x - pos0.x);\n      var d2 = Math.abs(pos1.y - pos0.y);\n      return D * (d1 + d2) + (D2 - 2 * D) * Math.min(d1, d2);\n    },\n  },\n  cleanNode: function (node) {\n    node.f = 0;\n    node.g = 0;\n    node.h = 0;\n    node.visited = false;\n    node.closed = false;\n    node.parent = null;\n  },\n};\n\n/**\n * A graph memory structure\n *\n * @private\n * @param {Array} gridIn 2D array of input weights\n * @param {Object} [options] Options\n * @param {boolean} [options.diagonal] Specifies whether diagonal moves are allowed\n * @returns {void} Graph\n */\nexport function Graph(gridIn, options) {\n  options = options || {};\n  this.nodes = [];\n  this.diagonal = !!options.diagonal;\n  this.grid = [];\n  for (var x = 0; x < gridIn.length; x++) {\n    this.grid[x] = [];\n\n    for (var y = 0, row = gridIn[x]; y < row.length; y++) {\n      var node = new GridNode(x, y, row[y]);\n      this.grid[x][y] = node;\n      this.nodes.push(node);\n    }\n  }\n  this.init();\n}\n\nGraph.prototype.init = function () {\n  this.dirtyNodes = [];\n  for (var i = 0; i < this.nodes.length; i++) {\n    astar.cleanNode(this.nodes[i]);\n  }\n};\n\nGraph.prototype.cleanDirty = function () {\n  for (var i = 0; i < this.dirtyNodes.length; i++) {\n    astar.cleanNode(this.dirtyNodes[i]);\n  }\n  this.dirtyNodes = [];\n};\n\nGraph.prototype.markDirty = function (node) {\n  this.dirtyNodes.push(node);\n};\n\nGraph.prototype.neighbors = function (node) {\n  var ret = [],\n    x = node.x,\n    y = node.y,\n    grid = this.grid;\n\n  // West\n  if (grid[x - 1] && grid[x - 1][y]) {\n    ret.push(grid[x - 1][y]);\n  }\n\n  // East\n  if (grid[x + 1] && grid[x + 1][y]) {\n    ret.push(grid[x + 1][y]);\n  }\n\n  // South\n  if (grid[x] && grid[x][y - 1]) {\n    ret.push(grid[x][y - 1]);\n  }\n\n  // North\n  if (grid[x] && grid[x][y + 1]) {\n    ret.push(grid[x][y + 1]);\n  }\n\n  if (this.diagonal) {\n    // Southwest\n    if (grid[x - 1] && grid[x - 1][y - 1]) {\n      ret.push(grid[x - 1][y - 1]);\n    }\n\n    // Southeast\n    if (grid[x + 1] && grid[x + 1][y - 1]) {\n      ret.push(grid[x + 1][y - 1]);\n    }\n\n    // Northwest\n    if (grid[x - 1] && grid[x - 1][y + 1]) {\n      ret.push(grid[x - 1][y + 1]);\n    }\n\n    // Northeast\n    if (grid[x + 1] && grid[x + 1][y + 1]) {\n      ret.push(grid[x + 1][y + 1]);\n    }\n  }\n\n  return ret;\n};\n\nGraph.prototype.toString = function () {\n  var graphString = [],\n    nodes = this.grid, // when using grid\n    rowDebug,\n    row,\n    y,\n    l;\n  for (var x = 0, len = nodes.length; x < len; x++) {\n    rowDebug = [];\n    row = nodes[x];\n    for (y = 0, l = row.length; y < l; y++) {\n      rowDebug.push(row[y].weight);\n    }\n    graphString.push(rowDebug.join(\" \"));\n  }\n  return graphString.join(\"\\n\");\n};\n\nfunction GridNode(x, y, weight) {\n  this.x = x;\n  this.y = y;\n  this.weight = weight;\n}\n\nGridNode.prototype.toString = function () {\n  return \"[\" + this.x + \" \" + this.y + \"]\";\n};\n\nGridNode.prototype.getCost = function (fromNeighbor) {\n  // Take diagonal weight into consideration.\n  if (fromNeighbor && fromNeighbor.x !== this.x && fromNeighbor.y !== this.y) {\n    return this.weight * 1.41421;\n  }\n  return this.weight;\n};\n\nGridNode.prototype.isWall = function () {\n  return this.weight === 0;\n};\n\nfunction BinaryHeap(scoreFunction) {\n  this.content = [];\n  this.scoreFunction = scoreFunction;\n}\n\nBinaryHeap.prototype = {\n  push: function (element) {\n    // Add the new element to the end of the array.\n    this.content.push(element);\n\n    // Allow it to sink down.\n    this.sinkDown(this.content.length - 1);\n  },\n  pop: function () {\n    // Store the first element so we can return it later.\n    var result = this.content[0];\n    // Get the element at the end of the array.\n    var end = this.content.pop();\n    // If there are any elements left, put the end element at the\n    // start, and let it bubble up.\n    if (this.content.length > 0) {\n      this.content[0] = end;\n      this.bubbleUp(0);\n    }\n    return result;\n  },\n  remove: function (node) {\n    var i = this.content.indexOf(node);\n\n    // When it is found, the process seen in 'pop' is repeated\n    // to fill up the hole.\n    var end = this.content.pop();\n\n    if (i !== this.content.length - 1) {\n      this.content[i] = end;\n\n      if (this.scoreFunction(end) < this.scoreFunction(node)) {\n        this.sinkDown(i);\n      } else {\n        this.bubbleUp(i);\n      }\n    }\n  },\n  size: function () {\n    return this.content.length;\n  },\n  rescoreElement: function (node) {\n    this.sinkDown(this.content.indexOf(node));\n  },\n  sinkDown: function (n) {\n    // Fetch the element that has to be sunk.\n    var element = this.content[n];\n\n    // When at 0, an element can not sink any further.\n    while (n > 0) {\n      // Compute the parent element's index, and fetch it.\n      var parentN = ((n + 1) >> 1) - 1,\n        parent = this.content[parentN];\n      // Swap the elements if the parent is greater.\n      if (this.scoreFunction(element) < this.scoreFunction(parent)) {\n        this.content[parentN] = element;\n        this.content[n] = parent;\n        // Update 'n' to continue at the new position.\n        n = parentN;\n        // Found a parent that is less, no need to sink any further.\n      } else {\n        break;\n      }\n    }\n  },\n  bubbleUp: function (n) {\n    // Look up the target element and its score.\n    var length = this.content.length,\n      element = this.content[n],\n      elemScore = this.scoreFunction(element);\n\n    while (true) {\n      // Compute the indices of the child elements.\n      var child2N = (n + 1) << 1,\n        child1N = child2N - 1;\n      // This is used to store the new position of the element, if any.\n      var swap = null,\n        child1Score;\n      // If the first child exists (is inside the array)...\n      if (child1N < length) {\n        // Look it up and compute its score.\n        var child1 = this.content[child1N];\n        child1Score = this.scoreFunction(child1);\n\n        // If the score is less than our element's, we need to swap.\n        if (child1Score < elemScore) {\n          swap = child1N;\n        }\n      }\n\n      // Do the same checks for the other child.\n      if (child2N < length) {\n        var child2 = this.content[child2N],\n          child2Score = this.scoreFunction(child2);\n        if (child2Score < (swap === null ? elemScore : child1Score)) {\n          swap = child2N;\n        }\n      }\n\n      // If the element needs to be moved, swap it, and continue.\n      if (swap !== null) {\n        this.content[n] = this.content[swap];\n        this.content[swap] = element;\n        n = swap;\n        // Otherwise, we are done.\n      } else {\n        break;\n      }\n    }\n  },\n};\n", "import {\n  Feature,\n  FeatureCollection,\n  MultiPolygon,\n  Polygon,\n  Position,\n} from \"geojson\";\nimport earcut from \"earcut\";\nimport { polygon } from \"@turf/helpers\";\n\n/**\n * Tesselates a polygon or multipolygon into a collection of triangle polygons\n * using [earcut](https://github.com/mapbox/earcut).\n *\n * @name tesselate\n * @param {Feature<Polygon|MultiPolygon>} poly the polygon to tesselate\n * @returns {FeatureCollection<Polygon>} collection of polygon tesselations\n * @example\n * const poly = turf.polygon([[[11, 0], [22, 4], [31, 0], [31, 11], [21, 15], [11, 11], [11, 0]]]);\n * const triangles = turf.tesselate(poly);\n *\n * //addToMap\n * const addToMap = [poly, triangles]\n */\nfunction tesselate(\n  poly: Feature<Polygon | MultiPolygon>\n): FeatureCollection<Polygon> {\n  if (\n    !poly.geometry ||\n    (poly.geometry.type !== \"Polygon\" && poly.geometry.type !== \"MultiPolygon\")\n  ) {\n    throw new Error(\"input must be a Polygon or MultiPolygon\");\n  }\n\n  const fc: FeatureCollection<Polygon> = {\n    type: \"FeatureCollection\",\n    features: [],\n  };\n\n  if (poly.geometry.type === \"Polygon\") {\n    fc.features = processPolygon(poly.geometry.coordinates);\n  } else {\n    poly.geometry.coordinates.forEach(function (coordinates) {\n      fc.features = fc.features.concat(processPolygon(coordinates));\n    });\n  }\n\n  return fc;\n}\n\nfunction processPolygon(coordinates: Position[][]) {\n  const data = flattenCoords(coordinates);\n  const dim = 2;\n  const result = earcut(data.vertices, data.holes, dim);\n\n  const features: Feature<Polygon>[] = [];\n  const vertices: Position[] = [];\n\n  result.forEach(function (vert: any, i: number) {\n    const index = result[i];\n    vertices.push([data.vertices[index * dim], data.vertices[index * dim + 1]]);\n  });\n\n  for (var i = 0; i < vertices.length; i += 3) {\n    const coords = vertices.slice(i, i + 3);\n    coords.push(vertices[i]);\n    features.push(polygon([coords]));\n  }\n\n  return features;\n}\n\nfunction flattenCoords(data: Position[][]) {\n  const dim: number = data[0][0].length,\n    result: { vertices: number[]; holes: number[]; dimensions: number } = {\n      vertices: [],\n      holes: [],\n      dimensions: dim,\n    };\n  let holeIndex = 0;\n\n  for (let i = 0; i < data.length; i++) {\n    for (let j = 0; j < data[i].length; j++) {\n      for (let d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n    }\n    if (i > 0) {\n      holeIndex += data[i - 1].length;\n      result.holes.push(holeIndex);\n    }\n  }\n\n  return result;\n}\n\nexport { tesselate };\nexport default tesselate;\n", "function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nexport default RedBlackTree;\n", "import {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n", "import {createBorderEdge} from \"./Edge\";\nimport {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n", "import {RedBlackNode} from \"./RedBlackTree\";\nimport {circles, epsilon2} from \"./Diagram\";\n\nvar circlePool = [];\n\nexport var firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n", "import {RedBlackNode} from \"./RedBlackTree\";\nimport {createCell} from \"./Cell\";\nimport {attachCircle, detachCircle} from \"./Circle\";\nimport {createEdge, setEdgeEnd} from \"./Edge\";\nimport {beaches, epsilon} from \"./Diagram\";\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n", "import {addBeach, removeBeach} from \"./Beach\";\nimport {sortCellHalfedges, cellHalfedgeStart, clipCells} from \"./Cell\";\nimport {firstCircle} from \"./Circle\";\nimport {clipEdges} from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n}\n", "import { polygon, buffer } from \"/Users/kangshuolei/Desktop/code/dls-map/node_modules/.pnpm/@turf+turf@7.1.0/node_modules/@turf/turf/dist/esm/index.js\";\nclass Buffer {\n  constructor(viewer, radius, options = { basePath: \"\" }) {\n    this.radius = 5e5;\n    this.transformWGS84ToCartesian = (position, alt = 0) => position ? Cesium.Cartesian3.fromDegrees(\n      position.lon,\n      position.lat,\n      alt || position.alt,\n      Cesium.Ellipsoid.WGS84\n    ) : Cesium.Cartesian3.ZERO;\n    this.transformCartesianToWGS84 = (cartesian) => {\n      const ellipsoid = Cesium.Ellipsoid.WGS84;\n      const cartographic = ellipsoid.cartesianToCartographic(cartesian);\n      return {\n        lon: Cesium.Math.toDegrees(cartographic.longitude),\n        lat: Cesium.Math.toDegrees(cartographic.latitude),\n        alt: cartographic.height\n      };\n    };\n    this.transformWGS84ToCartographic = (position) => position ? Cesium.Cartographic.fromDegrees(\n      position.lon || position.lon,\n      position.lat,\n      position.alt\n    ) : Cesium.Cartographic.ZERO;\n    this.clear = () => {\n      this.drawLayer.entities.removeAll();\n      return this.handler && this.handler.destroy();\n    };\n    this.viewer = viewer;\n    this.radius = radius;\n    this.drawLayer = new Cesium.CustomDataSource(\"measureLayer\");\n    this.viewer.dataSources.add(this.drawLayer);\n  }\n  /**\n   * 坐标数组转换 笛卡尔转84\n   * @param {Array} WSG84Arr {lon,lat,alt} 地理坐标数组\n   * @param {Number} alt 拔高\n   * @return {Array} Cartesian3 三维位置坐标数组\n   */\n  transformWGS84ArrayToCartesianArray(WSG84Arr, alt) {\n    return WSG84Arr ? WSG84Arr.map((item) => this.transformWGS84ToCartesian(item, alt)) : [];\n  }\n  /**\n   * 坐标数组转换 笛卡尔转86\n   * @param {Array} cartesianArr 三维位置坐标数组\n   * @return {Array} {lon,lat,alt} 地理坐标数组\n   */\n  transformCartesianArrayToWGS84Array(cartesianArr) {\n    if (this.viewer) {\n      return cartesianArr ? cartesianArr.map((item) => this.transformCartesianToWGS84(item)) : [];\n    }\n  }\n  /**\n   * 拾取位置点\n   * @param {Object} px 屏幕坐标\n   * @return {Object} Cartesian3 三维坐标\n   */\n  getCatesian3FromPX(px) {\n    if (this.viewer && px) {\n      const picks = this.viewer.scene.drillPick(px);\n      let cartesian = null;\n      let isOn3dtiles = false;\n      let isOnTerrain = false;\n      Object.keys(picks).forEach((i) => {\n        const pick = picks[i];\n        if (pick && pick.primitive instanceof (Cesium.Cesium3DTileFeature || Cesium.Cesium3DTileset || Cesium.Model)) {\n          isOn3dtiles = true;\n        }\n        if (isOn3dtiles) {\n          this.viewer.scene.pick(px);\n          cartesian = this.viewer.scene.pickPosition(px);\n          if (cartesian) {\n            const cartographic = Cesium.Cartographic.fromCartesian(cartesian);\n            if (cartographic.height < 0) cartographic.height = 0;\n            const lon = Cesium.Math.toDegrees(cartographic.longitude);\n            const lat = Cesium.Math.toDegrees(cartographic.latitude);\n            const { height } = cartographic;\n            cartesian = this.transformWGS84ToCartesian({\n              lon,\n              lat,\n              alt: height\n            });\n          }\n        }\n      });\n      const boolTerrain = this.viewer.terrainProvider instanceof Cesium.EllipsoidTerrainProvider;\n      if (!isOn3dtiles && !boolTerrain) {\n        const ray = this.viewer.scene.camera.getPickRay(px);\n        if (!ray) return null;\n        cartesian = this.viewer.scene.globe.pick(ray, this.viewer.scene);\n        isOnTerrain = true;\n      }\n      if (!isOn3dtiles && !isOnTerrain && boolTerrain) {\n        cartesian = this.viewer.scene.camera.pickEllipsoid(\n          px,\n          this.viewer.scene.globe.ellipsoid\n        );\n      }\n      if (cartesian) {\n        const position = this.transformCartesianToWGS84(cartesian);\n        if (position.alt < 0) {\n          cartesian = this.transformWGS84ToCartesian(position, 0.1);\n        }\n        return cartesian;\n      }\n      return false;\n    }\n  }\n  /**\n   * 绘制面\n   */\n  polyBuffer() {\n    return new Promise((resolve, reject) => {\n      if (this.viewer) {\n        this.viewer.scene.globe.depthTestAgainstTerrain = true;\n        let positions = [];\n        let polyPoint = [];\n        const polygonHie = new Cesium.PolygonHierarchy();\n        const polygonEntity = new Cesium.Entity();\n        if (this.handler) {\n          this.handler.destroy();\n        }\n        this.handler = new Cesium.ScreenSpaceEventHandler(\n          this.viewer.scene.canvas\n        );\n        this.handler.setInputAction((movement) => {\n          const cartesian = this.getCatesian3FromPX(movement.position);\n          const cartographic = Cesium.Cartographic.fromCartesian(cartesian);\n          if (cartesian) {\n            const lon = Cesium.Math.toDegrees(cartographic.longitude);\n            const lat = Cesium.Math.toDegrees(cartographic.latitude);\n            const { height } = cartographic;\n            if (positions.length === 0) {\n              polygonHie.positions.push(cartesian.clone());\n              positions.push(cartesian.clone());\n              polyPoint.push([lon, lat, height]);\n            }\n            positions.push(cartesian.clone());\n            polygonHie.positions.push(cartesian.clone());\n            polyPoint.push([lon, lat, height]);\n          }\n        }, Cesium.ScreenSpaceEventType.LEFT_CLICK);\n        this.handler.setInputAction((movement) => {\n          const cartesian = this.getCatesian3FromPX(movement.endPosition);\n          const cartographic = Cesium.Cartographic.fromCartesian(cartesian);\n          const lon = Cesium.Math.toDegrees(cartographic.longitude);\n          const lat = Cesium.Math.toDegrees(cartographic.latitude);\n          const { height } = cartographic;\n          if (positions.length >= 2) {\n            if (cartesian) {\n              positions.pop();\n              positions.push(cartesian);\n              polygonHie.positions.pop();\n              polygonHie.positions.push(cartesian);\n              polyPoint.pop();\n              polyPoint.push([lon, lat, height]);\n            }\n          }\n        }, Cesium.ScreenSpaceEventType.MOUSE_MOVE);\n        this.handler.setInputAction((movement) => {\n          if (positions.length > 2) {\n            positions.push(positions[0]);\n            polyPoint.push(polyPoint[0]);\n            const arrData = [...polyPoint];\n            this.addPolygon(positions);\n            this.initPolygonBuffer(polyPoint, this.radius);\n            positions = [];\n            polyPoint = [];\n            polygonHie.positions = [];\n            resolve(arrData);\n          }\n        }, Cesium.ScreenSpaceEventType.RIGHT_CLICK);\n        this.handler.setInputAction((e) => {\n          this.clear();\n        }, Cesium.ScreenSpaceEventType.LEFT_DOUBLE_CLICK);\n        polygonEntity.polyline = {\n          width: 3,\n          material: Cesium.Color.YELLOW.withAlpha(0.8),\n          clampToGround: true\n        };\n        polygonEntity.polyline.positions = new Cesium.CallbackProperty(\n          () => positions,\n          false\n        );\n        polygonEntity.polygon = {\n          hierarchy: new Cesium.CallbackProperty(() => polygonHie, false),\n          material: Cesium.Color.WHITE.withAlpha(0.1),\n          clampToGround: true\n        };\n        this.drawLayer.entities.add(polygonEntity);\n      }\n    });\n  }\n  // 初始化面缓冲\n  initPolygonBuffer(bufferPolyogn, distance) {\n    return new Promise((resolve, reject) => {\n      let degreesArray = this.pointsToDegreesArray(bufferPolyogn);\n      const polygonF = polygon([bufferPolyogn]);\n      const buffered = buffer(polygonF, distance, { units: \"meters\" });\n      const { coordinates } = buffered.geometry;\n      const points = coordinates[0];\n      degreesArray = this.pointsToDegreesArray(points);\n      this.addBufferPolyogn(Cesium.Cartesian3.fromDegreesArray(degreesArray));\n      resolve(bufferPolyogn);\n    });\n  }\n  // 添加缓冲面\n  addBufferPolyogn(positions) {\n    this.drawLayer.entities.add({\n      id: \"polyognBuffer\",\n      polygon: {\n        hierarchy: new Cesium.PolygonHierarchy(positions),\n        material: Cesium.Color.RED.withAlpha(0.3),\n        classificationType: Cesium.ClassificationType.BOTH,\n        clampToGround: true\n      }\n    });\n  }\n  // 添加面\n  addPolygon(positions) {\n    this.drawLayer.entities.add({\n      polygon: {\n        hierarchy: new Cesium.PolygonHierarchy(positions),\n        material: Cesium.Color.WHITE.withAlpha(0.1),\n        classificationType: Cesium.ClassificationType.BOTH,\n        clampToGround: true\n      },\n      polyline: {\n        positions,\n        width: 2,\n        material: Cesium.Color.YELLOW.withAlpha(0.4),\n        clampToGround: true\n      }\n    });\n  }\n  // 坐标点格式转换\n  pointsToDegreesArray(points) {\n    const degreesArray = [];\n    points.map((item) => {\n      degreesArray.push(item[0]);\n      degreesArray.push(item[1]);\n    });\n    return degreesArray;\n  }\n  changeRadius(changeDis) {\n    this.radius = changeDis;\n  }\n}\nexport {\n  Buffer as default\n};\n", "const loadScript = (src) => {\n  const $script = document.createElement(\"script\");\n  $script.async = false;\n  $script.src = src;\n  document.body.appendChild($script);\n  return new Promise((resolve, reject) => {\n    $script.onload = () => {\n      resolve(true);\n    };\n  });\n};\nfunction groupPoints(pointsArray) {\n  const groupedPoints = [];\n  for (let i = 0; i < pointsArray.length; i++) {\n    const group = [pointsArray[i], pointsArray[i + 1]];\n    groupedPoints.push(group);\n  }\n  groupedPoints.pop();\n  return groupedPoints;\n}\nfunction twoToCenter(point1, point2) {\n  const pointNew1 = Cesium.Cartesian3.fromDegrees(point1[0], point1[1]);\n  const pointNew2 = Cesium.Cartesian3.fromDegrees(point2[0], point2[1]);\n  const centerPoint = Cesium.Cartesian3.lerp(\n    pointNew1,\n    pointNew2,\n    0.5,\n    new Cesium.Cartesian3()\n  );\n  return centerPoint;\n}\nexport {\n  groupPoints,\n  loadScript,\n  twoToCenter\n};\n", "import \"../../utils/Shader/Shaders.mjs\";\nimport { groupPoints, twoToCenter } from \"../../utils/util.mjs\";\nimport { rhumbBearing } from \"/Users/kangshuolei/Desktop/code/dls-map/node_modules/.pnpm/@turf+turf@7.1.0/node_modules/@turf/turf/dist/esm/index.js\";\nlet groupArrPoint = [];\nfunction CesiumTrack(data, viewer, img) {\n  return new Promise((resolve, reject) => {\n    groupArrPoint = [];\n    let lineDataArr = [];\n    if (!data.length) return false;\n    console.log(\"dataaaaa\", data);\n    data.forEach((item, index) => {\n      if (item.color) {\n        const line = viewer.entities.add({\n          name: \"Purple\",\n          polyline: {\n            positions: Cesium.Cartesian3.fromDegreesArray(\n              item.positions.flat()\n            ),\n            width: 3,\n            followSurface: false,\n            material: new Cesium.PolylineArrowMaterialProperty(\n              Cesium.Color.fromCssColorString(item.color)\n            )\n          }\n        });\n        handleGeneratePosition(item.positions, item.color, viewer);\n        groupArrPoint.push({\n          color: item.color,\n          data: groupPoints(item.positions)\n        });\n        lineDataArr.push(line);\n      }\n    });\n    handleGroupArrPoint(viewer, img);\n    resolve(null);\n    return lineDataArr;\n  });\n}\nconst handleGeneratePosition = (data, color, viewer) => {\n  if (data && data.length) {\n    let startPoint = {\n      point: [data[0].lon, data[0].lat],\n      track_time: \"2020-09-03\"\n    };\n    let endPoint = {\n      point: [data[data.length - 1].lon, data[data.length - 1].lat],\n      track_time: \"2020-09-07\"\n    };\n    let dataArr = [startPoint, endPoint];\n    dataArr.forEach((item, index) => {\n      let tooltip = `\n          <div>\n            <div class=\"line\"></div>\n            <div class=\"panel\">\n              <span class=\"content\">${item.track_time}</span>\n            </div>\n          </div>\n        `;\n      let className = \"LayerPointTime\";\n      ({\n        viewer,\n        position: [parseFloat(item.point[0]), parseFloat(item.point[1])],\n        height: 0,\n        offset: [0, -60],\n        dom: tooltip,\n        className,\n        type: \"LayerPointTime\"\n      });\n    });\n    data.forEach((t) => {\n      viewer.entities.add({\n        position: Cesium.Cartesian3.fromDegrees(t[0], t[1], 1e3),\n        attribute: {\n          data: []\n        },\n        point: {\n          zIndex: 99999999,\n          pixelSize: 6,\n          pickable: true,\n          color: Cesium.Color.fromCssColorString(color),\n          heightReference: Cesium.HeightReference.RELATIVE_TO_GROUND\n        }\n      });\n    });\n  }\n};\nconst handleGroupArrPoint = (viewer, img) => {\n  groupArrPoint.forEach((item) => {\n    item.data.forEach((coordItem) => {\n      let centerPoint = twoToCenter(coordItem[0], coordItem[1]);\n      let angle = rhumbBearing(coordItem[0], coordItem[1]);\n      const angleInRadians = Cesium.Math.toRadians(-angle + 90);\n      const hexColor = item.color;\n      const alpha = 1;\n      Cesium.Color.fromCssColorString(hexColor).withAlpha(alpha);\n      viewer.entities.add({\n        position: centerPoint,\n        billboard: {\n          rotation: angleInRadians,\n          image: img,\n          scale: 0.1,\n          alignedAxis: Cesium.Cartesian3.ZERO,\n          heightReference: Cesium.HeightReference.CLAMP_TO_GROUND\n        }\n      });\n      viewer.scene.requestRender();\n    });\n  });\n};\nexport {\n  CesiumTrack as default\n};\n", "const importHack = (module, moduleName) => {\n  if (typeof module === \"function\") {\n    return module;\n  }\n  if (module.default) {\n    return module.default;\n  }\n  const wModule = window[moduleName];\n  if (wModule) {\n    return wModule.default ? wModule.default : wModule;\n  }\n  if (module) {\n    return module;\n  }\n  throw new Error(`无法处理模块 : ${moduleName}`);\n};\nexport {\n  importHack\n};\n"],
  "mappings": "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",
  "names": ["map", "pair", "array", "index", "length", "object", "hasOwnProperty", "Buffer", "Symbol", "Map", "Promise", "Set", "isObject", "tag", "key", "buffer", "cloneDeep", "equal", "length", "t", "e", "n", "i", "r", "u", "s", "v", "y", "a", "o", "x", "l", "D", "B", "h", "c", "f", "g", "d", "_", "p", "m", "k", "I", "E", "N", "T", "S", "L", "C", "R", "w", "ce", "de", "pi", "t", "r", "e", "a", "h", "n", "o", "s", "l", "f", "u", "m", "c", "p", "d", "x", "i", "v", "point", "x", "y", "intersect", "point", "x", "y", "intersect", "point", "t", "e", "n", "r", "o", "f", "i", "u", "c", "s", "a", "d", "l", "y", "x", "p", "b", "h", "M", "j", "m", "v", "B", "D", "RBush", "concaveman", "a", "b", "concave", "bbox", "edges", "x", "y", "x0", "y0", "x1", "y1", "D", "module", "exports", "eudist", "v1", "v2", "sqrt", "len", "length", "sum", "i", "d", "Math", "mandist", "abs", "dist", "Distance", "require", "eudist", "dist", "module", "exports", "kmrand", "data", "k", "map", "ks", "t", "len", "length", "multi", "d", "Math", "floor", "random", "key", "join", "push", "Error", "kmpp", "distance", "c", "dists", "lk", "dsum", "prs", "i", "min", "Infinity", "j", "v", "pr", "cs", "sort", "a", "b", "rnd", "idx", "Distance", "require", "ClusterInit", "eudist", "mandist", "dist", "kmrand", "kmpp", "MAX", "init", "len", "val", "v", "i", "skmeans", "data", "k", "initial", "maxit", "ks", "old", "idxs", "conv", "it", "length", "vlen", "multi", "count", "idx", "Math", "floor", "random", "push", "min", "Infinity", "j", "abs", "sum", "dif", "vsum", "vect", "h", "ksj", "sumj", "oldj", "cj", "centroids", "module", "exports", "earcut", "x", "y", "area", "x0", "y0", "x1", "y1", "tan", "sign", "Node", "sum", "_sfc_main", "_sfc_render", "_hoisted_1", "_sfc_main", "_sfc_main", "cartesian", "B", "D", "v", "distance", "scale", "distance", "index", "x2", "y2", "e2", "y", "x", "angle", "center", "cloneDeep", "cartesian", "distance", "index", "x", "y", "cartesian", "index", "cartesian", "temp", "angle", "index", "temp", "cartesian", "temp", "temp", "cartesian", "index", "distance", "cartesian", "distance", "index", "temp", "cartesian", "index", "temp", "point", "angle", "cartesian", "index", "cartesian", "index", "cartesian", "index", "temp", "cartesian", "index", "center", "temp", "x", "y", "angle", "cartesian", "index", "center", "temp", "cartesian", "index", "cartesian", "index", "cartesian", "index", "cartesian", "index", "center", "temp", "x", "y", "angle", "cartesian", "center", "temp", "index", "cartesian", "index", "cartesian", "index", "center", "cartesian", "index", "cartesian", "index", "cartesian", "index", "Cesium", "e2", "Cesium", "v", "y", "radians", "distance", "radians", "degrees", "_GeojsonEquality", "isObject", "object", "x", "y", "y", "x", "x", "object", "cartesian", "spherical", "x", "y", "x", "y", "point", "x", "y", "x0", "y0", "x1", "y1", "point", "compareIntersection", "interpolate", "n", "x", "array", "x", "array", "x0", "y0", "x1", "y1", "x", "y", "interpolate", "compareIntersection", "ca", "polygon", "point", "ring", "visible", "v", "polygon", "point", "angle", "sign", "identity_default", "x", "areaSum", "areaRingSum", "x", "y", "x", "y", "lengthSum", "x", "y", "interpolate", "polygon", "point", "interpolate", "v", "intersect", "B", "u", "delta", "code", "x", "y", "projection", "object", "x", "y", "x", "y", "x0", "y0", "x1", "y1", "point", "x", "y", "x0", "y0", "x1", "y1", "identity_default", "projection", "point", "object", "center", "scale", "x", "y", "angle", "cc", "x", "y", "x", "y", "x", "y", "x", "y", "x", "y", "x", "y", "jsts", "feature", "geometry", "buffered", "projection", "distance", "buffer", "y", "v", "Node", "cmp", "Tree", "x", "index", "epsilon", "sum", "epsilon", "u3", "sum", "epsilon", "u", "epsilon", "bc", "ca", "ab", "u", "abt", "bct", "cat", "_8", "_16", "fin", "fin2", "epsilon", "ab", "bc", "_8", "_8b", "_16", "_48", "fin", "bbox", "point", "epsilon", "ab", "x", "y", "v", "x1", "y1", "cmp", "index", "pt", "nextPt", "evt", "Arc", "collect", "B", "x", "y", "pair", "x", "y", "cells", "D", "D2", "x", "y", "length", "index", "x0", "y0", "x1", "y1", "epsilon", "index", "array", "i", "j", "x0", "y0", "x1", "y1", "epsilon", "Circle", "epsilon2", "x", "y", "circle", "circle", "x", "y", "epsilon", "epsilon", "epsilon2", "x", "y", "circle", "x0", "y0", "x1", "y1", "edges", "polygon", "v", "v2", "cartesian", "distance", "index", "angle"]
}
